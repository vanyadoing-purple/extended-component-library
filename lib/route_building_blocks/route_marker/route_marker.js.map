{"version":3,"file":"route_marker.js","sourceRoot":"","sources":["../../../src/route_building_blocks/route_marker/route_marker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {html, PropertyValues} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\nimport {APILoader} from '../../api_loader/api_loader.js';\r\nimport {Deferred} from '../../utils/deferred.js';\r\nimport {AdvancedMarkerElement} from '../../utils/googlemaps_types.js';\r\nimport {MapController} from '../map_controller.js';\r\nimport {RouteDataConsumer} from '../route_data_consumer.js';\r\n\r\ninterface MarkerLibrary {\r\n  // tslint:disable-next-line:enforce-name-casing\r\n  AdvancedMarkerElement: typeof google.maps.marker.AdvancedMarkerElement;\r\n}\r\n\r\n/**\r\n * Renders a marker indicating the origin or destination of a route.\r\n *\r\n * @slot - An element to be used as custom marker content on the map. The\r\n * element will be detached from the DOM and moved into the map's\r\n * implementation.\r\n */\r\n@customElement('gmpx-route-marker')\r\nexport class RouteMarker extends RouteDataConsumer {\r\n  /**\r\n   * Which waypoint of the route to position the marker on. For now, this is\r\n   * either \"origin\" or \"destination\"; intermediate waypoints are not yet\r\n   * supported.\r\n   */\r\n  @property({type: String, reflect: true})\r\n  waypoint: 'origin'|'destination' = 'origin';\r\n\r\n  /**\r\n   * Rollover text for the marker, displayed on mouse hover.\r\n   */\r\n  @property({type: String, reflect: true}) override title = '';\r\n\r\n  /**\r\n   * The z-index of the marker relative to other Advanced Markers.\r\n   */\r\n  @property({type: Number, attribute: false}) zIndex?: number;\r\n\r\n  private readonly innerMarkerDeferred = new Deferred<AdvancedMarkerElement>();\r\n\r\n  /**\r\n   * The inner `google.maps.marker.AdvancedMarkerElement` from the Maps JS API.\r\n   * This value is set once `innerMarkerPromise` is resolved.\r\n   */\r\n  get innerMarker(): AdvancedMarkerElement|undefined {\r\n    return this.innerMarkerDeferred.value;\r\n  }\r\n\r\n  /**\r\n   * Resolves to the inner marker when it's ready. It might not be ready\r\n   * immediately becasue the `AdvancedMarkerElement` class is loaded\r\n   * asynchronously from the Maps JS API.\r\n   */\r\n  get innerMarkerPromise(): Promise<AdvancedMarkerElement> {\r\n    return this.innerMarkerDeferred.promise;\r\n  }\r\n\r\n  private readonly mapController = new MapController(this);\r\n\r\n  constructor() {\r\n    super();\r\n    this.initMarker();\r\n  }\r\n\r\n  private async initMarker() {\r\n    const {AdvancedMarkerElement} =\r\n        await APILoader.importLibrary('marker', this) as unknown as\r\n        MarkerLibrary;\r\n    const marker = new AdvancedMarkerElement();\r\n    this.innerMarkerDeferred.resolve(marker);\r\n  }\r\n\r\n  override async connectedCallback() {\r\n    super.connectedCallback();\r\n    const map = await this.mapController.mapPromise;\r\n    const marker = await this.innerMarkerPromise;\r\n    // Make sure the component hasn't been disconnected while awaiting\r\n    if (this.isConnected) marker.map = map;\r\n  }\r\n\r\n  override disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    if (this.innerMarker) this.innerMarker.map = null;\r\n  }\r\n\r\n  protected override render() {\r\n    return html`<slot @slotchange=${this.onSlotChange}></slot>`;\r\n  }\r\n\r\n  protected override updated(changedProperties: PropertyValues<this>) {\r\n    if (changedProperties.has('waypoint') || changedProperties.has('route') ||\r\n        changedProperties.has('contextRoute')) {\r\n      this.updatePosition();\r\n    }\r\n    if (changedProperties.has('title')) this.updateTitle();\r\n    if (changedProperties.has('zIndex')) this.updateZIndex();\r\n  }\r\n\r\n  private async updatePosition() {\r\n    const marker = await this.innerMarkerPromise;\r\n    const route = this.getRoute();\r\n    if (!route?.legs?.length) {\r\n      marker.position = null;\r\n      return;\r\n    }\r\n    const firstLeg = route.legs[0];\r\n    const lastLeg = route.legs[route.legs.length - 1];\r\n    if (!this.waypoint || this.waypoint === 'origin') {\r\n      marker.position = firstLeg.start_location;\r\n    } else if (this.waypoint === 'destination') {\r\n      marker.position = lastLeg.end_location;\r\n    } else {\r\n      this.logger.error(`Unsupported waypoint \"${\r\n          this.waypoint}\". Waypoint must be \"origin\" or \"destination\".`);\r\n    }\r\n  }\r\n\r\n  private async updateTitle() {\r\n    const marker = await this.innerMarkerPromise;\r\n    marker.title = this.title;\r\n  }\r\n\r\n  private async updateZIndex() {\r\n    const marker = await this.innerMarkerPromise;\r\n    marker.zIndex = this.zIndex;\r\n  }\r\n\r\n  private async onSlotChange(e: Event) {\r\n    const slot = e.target as HTMLSlotElement;\r\n    const assignedElement = slot.assignedElements()[0];\r\n    if (assignedElement) {\r\n      const marker = await this.innerMarkerPromise;\r\n      marker.content = assignedElement;\r\n    }\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'gmpx-route-marker': RouteMarker;\r\n  }\r\n}\r\n"]}