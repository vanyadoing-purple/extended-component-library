{"version":3,"file":"route_data_consumer_test.js","sourceRoot":"","sources":["../../src/route_building_blocks/route_data_consumer_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport '../place_building_blocks/place_data_provider/place_data_provider_test.js';\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {provide} from '@lit/context';\r\nimport {html, LitElement} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\nimport {makeFakeRoute} from '../testing/fake_route.js';\r\n\r\nimport {routeContext, RouteDataConsumer} from './route_data_consumer.js';\r\n\r\n@customElement('gmpx-test-route-data-consumer')\r\nclass TestRouteDataConsumer extends RouteDataConsumer {\r\n  getRoutePublic(): google.maps.DirectionsRoute|undefined {\r\n    return this.getRoute();\r\n  }\r\n}\r\n\r\n@customElement('gmpx-fake-route-data-provider')\r\nclass FakeRouteDataProvider extends LitElement {\r\n  @provide({context: routeContext})\r\n  @property({attribute: false})\r\n  contextRoute: google.maps.DirectionsRoute|undefined;\r\n}\r\n\r\ndescribe('RouteDataConsumer', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(): Promise<\r\n      {provider: FakeRouteDataProvider, consumer: TestRouteDataConsumer}> {\r\n    const root = env.render(html`\r\n      <gmpx-fake-route-data-provider>\r\n        <gmpx-test-route-data-consumer>\r\n        </gmpx-test-route-data-consumer>\r\n      </gmpx-fake-route-data-provider>\r\n    `);\r\n    await env.waitForStability();\r\n    const provider = root.querySelector<FakeRouteDataProvider>(\r\n        'gmpx-fake-route-data-provider')!;\r\n    const consumer = root.querySelector<TestRouteDataConsumer>(\r\n        'gmpx-test-route-data-consumer')!;\r\n    return {provider, consumer};\r\n  }\r\n\r\n  it('has its route undefined by default', () => {\r\n    const consumer = new TestRouteDataConsumer();\r\n    expect(consumer.getRoutePublic()).toBeUndefined();\r\n  });\r\n\r\n  it('gets a route from its property', () => {\r\n    const consumer = new TestRouteDataConsumer();\r\n    const route = makeFakeRoute();\r\n    consumer.route = route;\r\n\r\n    expect(consumer.getRoutePublic()).toBe(route);\r\n  });\r\n\r\n  it('gets a route from context', async () => {\r\n    const {provider, consumer} = await prepareState();\r\n    const route = makeFakeRoute();\r\n    provider.contextRoute = route;\r\n\r\n    expect(consumer.getRoutePublic()).toBe(route);\r\n  });\r\n\r\n  it('prioritizes the route from its property', async () => {\r\n    const {provider, consumer} = await prepareState();\r\n    const providerRoute = makeFakeRoute();\r\n    const consumerRoute = makeFakeRoute();\r\n    provider.contextRoute = providerRoute;\r\n    consumer.route = consumerRoute;\r\n\r\n    expect(consumer.getRoutePublic()).toBe(consumerRoute);\r\n  });\r\n});\r\n"]}