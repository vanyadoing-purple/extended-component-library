{"version":3,"file":"route_data_provider_test.js","sourceRoot":"","sources":["../../../src/route_building_blocks/route_data_provider/route_data_provider_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\nimport './route_data_provider.js';\r\n\r\nimport {consume} from '@lit/context';\r\nimport {html, LitElement, TemplateResult} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\nimport {LoggingController} from '../../base/logging_controller.js';\r\nimport {DirectionsController} from '../../place_building_blocks/place_distance_label/directions_controller.js';\r\nimport {Environment} from '../../testing/environment.js';\r\nimport {routeContext} from '../route_data_consumer.js';\r\n\r\nimport {RouteDataProvider} from './route_data_provider.js';\r\n\r\nconst FAKE_ROUTE = {} as google.maps.DirectionsRoute;\r\nconst FAKE_DIRECTIONS_RESULT = {\r\n  routes: [FAKE_ROUTE]\r\n} as google.maps.DirectionsResult;\r\n\r\n@customElement('gmpx-fake-route-data-consumer')\r\nclass FakeRouteDataConsumer extends LitElement {\r\n  @consume({context: routeContext, subscribe: true})\r\n  @property({attribute: false})\r\n  contextRoute: google.maps.DirectionsRoute|undefined;\r\n}\r\n\r\ndescribe('RouteDataProvider', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(template?: TemplateResult) {\r\n    const routeSpy = spyOn(DirectionsController.prototype, 'route')\r\n                         .and.resolveTo(FAKE_DIRECTIONS_RESULT);\r\n    const errorSpy = spyOn(LoggingController.prototype, 'error');\r\n    const root = env.render(\r\n        template ??\r\n        html`<gmpx-route-data-provider></gmpx-route-data-provider>`);\r\n    await env.waitForStability();\r\n    const provider =\r\n        root.querySelector<RouteDataProvider>('gmpx-route-data-provider')!;\r\n\r\n    return {root, provider, routeSpy, errorSpy};\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const provider = document.createElement('gmpx-route-data-provider');\r\n    expect(provider).toBeInstanceOf(RouteDataProvider);\r\n  });\r\n\r\n  it('fetches a route with lat-lng attributes', async () => {\r\n    const {provider, routeSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-lat-lng=\"1,2\" destination-lat-lng=\"3,4\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect((arg.origin as google.maps.Place).location)\r\n        .toEqual({lat: 1, lng: 2});\r\n    expect((arg.destination as google.maps.Place).location)\r\n        .toEqual({lat: 3, lng: 4});\r\n    expect(provider.contextRoute).toBe(FAKE_ROUTE);\r\n  });\r\n\r\n  it('fetches a route with latLng properties', async () => {\r\n    const {provider, routeSpy} = await prepareState();\r\n\r\n    provider.originLatLng = {lat: 5, lng: 6};\r\n    provider.destinationLatLng = {lat: 7, lng: 8};\r\n    await env.waitForStability();\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect((arg.origin as google.maps.Place).location)\r\n        .toEqual({lat: 5, lng: 6});\r\n    expect((arg.destination as google.maps.Place).location)\r\n        .toEqual({lat: 7, lng: 8});\r\n    expect(provider.contextRoute).toBe(FAKE_ROUTE);\r\n  });\r\n\r\n  it('fetches a route with place-id attributes', async () => {\r\n    const {provider, routeSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-place-id=\"abc\" destination-place-id=\"123\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect((arg.origin as google.maps.Place).placeId).toEqual('abc');\r\n    expect((arg.destination as google.maps.Place).placeId).toEqual('123');\r\n    expect(provider.contextRoute).toBe(FAKE_ROUTE);\r\n  });\r\n\r\n  it('fetches a route with placeId properties', async () => {\r\n    const {provider, routeSpy} = await prepareState();\r\n\r\n    provider.originPlaceId = 'def';\r\n    provider.destinationPlaceId = '456';\r\n    await env.waitForStability();\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect((arg.origin as google.maps.Place).placeId).toEqual('def');\r\n    expect((arg.destination as google.maps.Place).placeId).toEqual('456');\r\n    expect(provider.contextRoute).toBe(FAKE_ROUTE);\r\n  });\r\n\r\n  it('fetches a route with address attributes', async () => {\r\n    const {provider, routeSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-address=\"abc\" destination-address=\"123\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect((arg.origin as google.maps.Place).query).toEqual('abc');\r\n    expect((arg.destination as google.maps.Place).query).toEqual('123');\r\n    expect(provider.contextRoute).toBe(FAKE_ROUTE);\r\n  });\r\n\r\n  it('fetches a route with address properties', async () => {\r\n    const {provider, routeSpy} = await prepareState();\r\n\r\n    provider.originAddress = 'def';\r\n    provider.destinationAddress = '456';\r\n    await env.waitForStability();\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect((arg.origin as google.maps.Place).query).toEqual('def');\r\n    expect((arg.destination as google.maps.Place).query).toEqual('456');\r\n    expect(provider.contextRoute).toBe(FAKE_ROUTE);\r\n  });\r\n\r\n  it('sets only one property on the origin/destination objects', async () => {\r\n    const {provider, routeSpy} = await prepareState();\r\n\r\n    provider.originPlaceId = 'def';\r\n    provider.destinationAddress = '456';\r\n    await env.waitForStability();\r\n\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    const origin = arg.origin as google.maps.Place;\r\n    const destination = arg.destination as google.maps.Place;\r\n    expect(origin.hasOwnProperty('location')).toBeFalse();\r\n    expect(origin.hasOwnProperty('query')).toBeFalse();\r\n    expect(destination.hasOwnProperty('location')).toBeFalse();\r\n    expect(destination.hasOwnProperty('placeId')).toBeFalse();\r\n  });\r\n\r\n  it('does nothing if only origin is provided', async () => {\r\n    const {provider, routeSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-address=\"abc\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).not.toHaveBeenCalled();\r\n    expect(provider.contextRoute).toBe(undefined);\r\n  });\r\n\r\n  it('does nothing if only destination is provided', async () => {\r\n    const {provider, routeSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider destination-address=\"abc\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).not.toHaveBeenCalled();\r\n    expect(provider.contextRoute).toBe(undefined);\r\n  });\r\n\r\n  it('logs an error on multiple origins', async () => {\r\n    const {provider, routeSpy, errorSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-address=\"abc\" origin-place-id=\"def\"\r\n          destination-address=\"123\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).not.toHaveBeenCalled();\r\n    expect(provider.contextRoute).toBe(undefined);\r\n    expect(errorSpy).toHaveBeenCalledOnceWith(\r\n        'Too many origins. Only one of origin-lat-lng, ' +\r\n        'origin-place-id, or origin-address may be specified.');\r\n  });\r\n\r\n  it('logs an error on multiple destinations', async () => {\r\n    const {provider, routeSpy, errorSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-address=\"abc\" destination-address=\"123\"\r\n          destination-place-id=\"123\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).not.toHaveBeenCalled();\r\n    expect(provider.contextRoute).toBe(undefined);\r\n    expect(errorSpy).toHaveBeenCalledOnceWith(\r\n        'Too many destinations. Only one of destination-lat-lng, ' +\r\n        'destination-place-id, or destination-address may be specified.');\r\n  });\r\n\r\n  it('defaults the travel mode to driving', async () => {\r\n    const {routeSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-address=\"abc\" destination-address=\"123\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect(arg.travelMode).toEqual('DRIVING');\r\n  });\r\n\r\n  it('sets the travel mode via attribute', async () => {\r\n    const {routeSpy} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-address=\"abc\" destination-address=\"123\"\r\n          travel-mode=\"walking\">\r\n      </gmpx-route-data-provider>`);\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect(arg.travelMode).toEqual('WALKING');\r\n  });\r\n\r\n  it('sets the travel mode via property', async () => {\r\n    const {provider, routeSpy} = await prepareState();\r\n\r\n    provider.originAddress = 'abc';\r\n    provider.destinationAddress = '123';\r\n    provider.travelMode = 'transit';\r\n    await env.waitForStability();\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n    const arg = routeSpy.calls.mostRecent().args[0];\r\n    expect(arg.travelMode).toEqual('TRANSIT');\r\n  });\r\n\r\n  it('provides a route via the route property', async () => {\r\n    const {root, provider} = await prepareState(html`\r\n      <gmpx-route-data-provider>\r\n        <gmpx-fake-route-data-consumer></gmpx-fake-route-data-consumer>\r\n      </gmpx-route-data-provider>`);\r\n    const consumer = root.querySelector<FakeRouteDataConsumer>(\r\n        'gmpx-fake-route-data-consumer')!;\r\n\r\n    provider.route = FAKE_ROUTE;\r\n    await env.waitForStability();\r\n\r\n    expect(consumer.contextRoute).toBe(FAKE_ROUTE);\r\n  });\r\n\r\n  it('provides a route via API call', async () => {\r\n    const {root} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-address=\"abc\" destination-address=\"123\">\r\n        <gmpx-fake-route-data-consumer></gmpx-fake-route-data-consumer>\r\n      </gmpx-route-data-provider>`);\r\n    const consumer = root.querySelector<FakeRouteDataConsumer>(\r\n        'gmpx-fake-route-data-consumer')!;\r\n\r\n    expect(consumer.contextRoute).toBe(FAKE_ROUTE);\r\n  });\r\n\r\n  it('prioritizes the route from the route property', async () => {\r\n    const {root, provider} = await prepareState(html`\r\n      <gmpx-route-data-provider origin-address=\"abc\" destination-address=\"123\">\r\n        <gmpx-fake-route-data-consumer></gmpx-fake-route-data-consumer>\r\n      </gmpx-route-data-provider>`);\r\n    const consumer = root.querySelector<FakeRouteDataConsumer>(\r\n        'gmpx-fake-route-data-consumer')!;\r\n\r\n    const route = {} as google.maps.DirectionsRoute;\r\n    provider.route = route;\r\n    await env.waitForStability();\r\n\r\n    expect(consumer.contextRoute).toBe(route);\r\n  });\r\n\r\n  it('updates the route when set to something new', async () => {\r\n    const {root, provider} = await prepareState(html`\r\n      <gmpx-route-data-provider>\r\n        <gmpx-fake-route-data-consumer></gmpx-fake-route-data-consumer>\r\n      </gmpx-route-data-provider>`);\r\n    const consumer = root.querySelector<FakeRouteDataConsumer>(\r\n        'gmpx-fake-route-data-consumer')!;\r\n\r\n    provider.route = FAKE_ROUTE;\r\n    await env.waitForStability();\r\n    const route = {} as google.maps.DirectionsRoute;\r\n    provider.route = route;\r\n    await env.waitForStability();\r\n\r\n    expect(consumer.contextRoute).toBe(route);\r\n  });\r\n});\r\n"]}