{"version":3,"file":"route_data_provider.js","sourceRoot":"","sources":["../../../src/route_building_blocks/route_data_provider/route_data_provider.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {provide} from '@lit/context';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\nimport {BaseComponent} from '../../base/base_component.js';\r\nimport {DirectionsController} from '../../place_building_blocks/place_distance_label/directions_controller.js';\r\nimport {LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER} from '../../utils/attribute_converters.js';\r\nimport {routeContext} from '../route_data_consumer.js';\r\n\r\ntype DirectionsRoute = google.maps.DirectionsRoute;\r\ntype LatLng = google.maps.LatLng;\r\ntype LatLngLiteral = google.maps.LatLngLiteral;\r\n\r\n/**\r\n * Provides route data to child components as context.\r\n *\r\n * This component can fetch route data from the Directions API, or forward a\r\n * `DirectionsRoute` object provided from elsewhere in code. The component will\r\n * locally cache route data to avoid redundant API requests.\r\n *\r\n * @slot - Elements to receive route data.\r\n *\r\n * @event {RequestErrorEvent} gmpx-requesterror - Indicates an error condition\r\n * in an underlying Google Maps JavaScript API call. (React: onRequestError)\r\n */\r\n@customElement('gmpx-route-data-provider')\r\nexport class RouteDataProvider extends BaseComponent {\r\n  /**\r\n   * @ignore\r\n   * Route data passed to child `RouteDataConsumer`s via context.\r\n   */\r\n  @provide({context: routeContext})\r\n  @property({\r\n    attribute: false,\r\n    // The contextRoute property is only set by the component itself during its\r\n    // update cycle. Don't trigger a second update when this happens.\r\n    hasChanged: () => false,\r\n  })\r\n  contextRoute: DirectionsRoute|undefined;\r\n\r\n  /**\r\n   * The destination of the directions request as a lat/lng. When setting the\r\n   * destination, only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({\r\n    converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\r\n    attribute: 'destination-lat-lng',\r\n    reflect: true\r\n  })\r\n  destinationLatLng?: LatLng|LatLngLiteral;\r\n\r\n  /**\r\n   * The destination of the directions request as a Place ID. When setting the\r\n   * destination, only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({type: String, attribute: 'destination-place-id', reflect: true})\r\n  destinationPlaceId?: string;\r\n\r\n  /**\r\n   * The destination of the directions request as an address query. When setting\r\n   * the destination, only one of lat/lng, Place ID, or address should be\r\n   * specified.\r\n   */\r\n  @property({type: String, attribute: 'destination-address', reflect: true})\r\n  destinationAddress?: string;\r\n\r\n  /**\r\n   * The origin of the directions request as a lat/lng. When setting the origin,\r\n   * only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({\r\n    converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\r\n    attribute: 'origin-lat-lng',\r\n    reflect: true\r\n  })\r\n  originLatLng?: LatLng|LatLngLiteral;\r\n\r\n  /**\r\n   * The origin of the directions request as a Place ID. When setting the\r\n   * origin, only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({type: String, attribute: 'origin-place-id', reflect: true})\r\n  originPlaceId?: string;\r\n\r\n  /**\r\n   * The origin of the directions request as an address query. When setting the\r\n   * origin, only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({type: String, attribute: 'origin-address', reflect: true})\r\n  originAddress?: string;\r\n\r\n  /**\r\n   * Route data to be provided to consumers directly, instead of making an API\r\n   * call.\r\n   */\r\n  @property({attribute: false}) route?: DirectionsRoute;\r\n\r\n  /**\r\n   * The travel mode of the directions request.\r\n   */\r\n  @property({type: String, attribute: 'travel-mode', reflect: true})\r\n  travelMode: Lowercase<google.maps.TravelMode> = 'driving';\r\n\r\n  private readonly directionsController = new DirectionsController(this);\r\n\r\n  protected override updated() {\r\n    this.updateContextRoute();\r\n  }\r\n\r\n  private async updateContextRoute() {\r\n    if (this.route) {\r\n      this.contextRoute = this.route;\r\n      return;\r\n    }\r\n\r\n    const numOrigins =\r\n        numTruthy(this.originAddress, this.originPlaceId, this.originLatLng);\r\n    const numDestinations = numTruthy(\r\n        this.destinationAddress, this.destinationPlaceId,\r\n        this.destinationLatLng);\r\n\r\n    if (numOrigins === 1 && numDestinations === 1) {\r\n      this.contextRoute = await this.fetchRoute();\r\n    } else {\r\n      if (numOrigins > 1 && numDestinations !== 0) {\r\n        this.logger.error(\r\n            'Too many origins. Only one of origin-lat-lng, ' +\r\n            'origin-place-id, or origin-address may be specified.');\r\n      }\r\n      if (numDestinations > 1 && numOrigins !== 0) {\r\n        this.logger.error(\r\n            'Too many destinations. Only one of destination-lat-lng, ' +\r\n            'destination-place-id, or destination-address may be specified.');\r\n      }\r\n      this.contextRoute = undefined;\r\n    }\r\n  }\r\n\r\n  private async fetchRoute(): Promise<DirectionsRoute|undefined> {\r\n    // If the request fails, directionsController.route will dispatch a\r\n    // RequestErrorEvent and return null.\r\n    const result = await this.directionsController.route({\r\n      origin: this.getOriginRequestObject(),\r\n      destination: this.getDestinationRequestObject(),\r\n      travelMode: this.travelMode?.toUpperCase() as google.maps.TravelMode,\r\n    });\r\n    return result?.routes ? result.routes[0] : undefined;\r\n  }\r\n\r\n  private getOriginRequestObject(): google.maps.Place {\r\n    if (this.originLatLng) {\r\n      return {location: this.originLatLng};\r\n    } else if (this.originPlaceId) {\r\n      return {placeId: this.originPlaceId};\r\n    } else {\r\n      return {query: this.originAddress};\r\n    }\r\n  }\r\n\r\n  private getDestinationRequestObject(): google.maps.Place {\r\n    if (this.destinationLatLng) {\r\n      return {location: this.destinationLatLng};\r\n    } else if (this.destinationPlaceId) {\r\n      return {placeId: this.destinationPlaceId};\r\n    } else {\r\n      return {query: this.destinationAddress};\r\n    }\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'gmpx-route-data-provider': RouteDataProvider;\r\n  }\r\n}\r\n\r\n/**\r\n * Counts and returns the number of arguments that are truthy.\r\n */\r\nfunction numTruthy(...args: unknown[]): number {\r\n  return args.filter((x) => x).length;\r\n}\r\n"]}