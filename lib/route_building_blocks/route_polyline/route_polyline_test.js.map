{"version":3,"file":"route_polyline_test.js","sourceRoot":"","sources":["../../../src/route_building_blocks/route_polyline/route_polyline_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, TemplateResult} from 'lit';\r\n\r\nimport {Environment} from '../../testing/environment.js';\r\nimport {FakeMapElement} from '../../testing/fake_gmp_components.js';\r\nimport {FakeLatLng, FakeLatLngBounds} from '../../testing/fake_lat_lng.js';\r\nimport {makeFakeLeg, makeFakeRoute, makeFakeStep} from '../../testing/fake_route.js';\r\n\r\nimport {RoutePolyline} from './route_polyline.js';\r\n\r\n\r\ndescribe('RoutePolyline', () => {\r\n  const env = new Environment();\r\n\r\n  beforeAll(() => {\r\n    env.defineFakeMapElement();\r\n  });\r\n\r\n  async function prepareState(template?: TemplateResult) {\r\n    const setMapSpy = spyOn(\r\n        env.fakeGoogleMapsHarness!.libraries['maps'].Polyline.prototype,\r\n        'setMap');\r\n    const setOptionsSpy = spyOn(\r\n        env.fakeGoogleMapsHarness!.libraries['maps'].Polyline.prototype,\r\n        'setOptions');\r\n    const setPathSpy = spyOn(\r\n        env.fakeGoogleMapsHarness!.libraries['maps'].Polyline.prototype,\r\n        'setPath');\r\n    const constructorSpy =\r\n        spyOn(env.fakeGoogleMapsHarness!.libraries['maps'], 'Polyline')\r\n            .and.callThrough();\r\n\r\n    const root = env.render(\r\n        template ?? html`<gmpx-route-polyline></gmpx-route-polyline>`);\r\n    const map = root.querySelector<FakeMapElement>('gmp-map');\r\n    const polyline = root.querySelector<RoutePolyline>('gmpx-route-polyline')!;\r\n    const fitBoundsSpy = map?.innerMap?.fitBounds;\r\n    await env.waitForStability();\r\n\r\n    return {\r\n      root,\r\n      polyline,\r\n      map,\r\n      constructorSpy,\r\n      setMapSpy,\r\n      setOptionsSpy,\r\n      setPathSpy,\r\n      fitBoundsSpy,\r\n    };\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-route-polyline');\r\n    expect(el).toBeInstanceOf(RoutePolyline);\r\n  });\r\n\r\n  it('constructs a Polyline', async () => {\r\n    const {polyline, constructorSpy} = await prepareState();\r\n\r\n    expect(constructorSpy).toHaveBeenCalledOnceWith();\r\n    expect(polyline.innerPolyline).toBeDefined();\r\n    await expectAsync(polyline.innerPolylinePromise).toBeResolved();\r\n  });\r\n\r\n  it('initializes display properties to undefined or false', async () => {\r\n    const {polyline} = await prepareState();\r\n\r\n    expect(polyline.invisible).toBeFalse();\r\n    expect(polyline.strokeColor).toBeUndefined();\r\n    expect(polyline.strokeWeight).toBeUndefined();\r\n    expect(polyline.strokeOpacity).toBeUndefined();\r\n    expect(polyline.zIndex).toBeUndefined();\r\n  });\r\n\r\n  it('sets display properties on the inner polyline', async () => {\r\n    const {polyline, setOptionsSpy} = await prepareState();\r\n    setOptionsSpy.calls.reset();\r\n\r\n    polyline.invisible = true;\r\n    polyline.strokeColor = 'blue';\r\n    polyline.strokeWeight = 5;\r\n    polyline.strokeOpacity = 0.5;\r\n    polyline.zIndex = 10;\r\n    await env.waitForStability();\r\n\r\n    expect(setOptionsSpy).toHaveBeenCalledOnceWith({\r\n      strokeColor: 'blue',\r\n      strokeWeight: 5,\r\n      strokeOpacity: 0.5,\r\n      visible: false,\r\n      zIndex: 10,\r\n    });\r\n  });\r\n\r\n  it('sets display properties as attributes', async () => {\r\n    const {setOptionsSpy} = await prepareState(html`\r\n      <gmpx-route-polyline\r\n        invisible\r\n        stroke-color=\"green\"\r\n        stroke-weight=\"10\"\r\n        stroke-opacity=\"0.1\"\r\n        z-index=\"8\"\r\n      ></gmpx-route-polyline>\r\n    `);\r\n\r\n    expect(setOptionsSpy).toHaveBeenCalledOnceWith({\r\n      strokeColor: 'green',\r\n      strokeWeight: 10,\r\n      strokeOpacity: 0.1,\r\n      visible: false,\r\n      zIndex: 8,\r\n    });\r\n  });\r\n\r\n  it(`sets its path from a route's step`, async () => {\r\n    const {polyline, setPathSpy} = await prepareState();\r\n    const path: google.maps.LatLng[] = [];\r\n    polyline.route =\r\n        makeFakeRoute({legs: [makeFakeLeg({steps: [makeFakeStep({path})]})]});\r\n    await env.waitForStability();\r\n\r\n    expect(setPathSpy).toHaveBeenCalledOnceWith(path);\r\n  });\r\n\r\n  it('concatenates the paths from multiple steps', async () => {\r\n    const {polyline, setPathSpy} = await prepareState();\r\n    const [ll1, ll2, ll3, ll4] = [\r\n      new FakeLatLng(1, 1), new FakeLatLng(2, 2), new FakeLatLng(3, 3),\r\n      new FakeLatLng(4, 4)\r\n    ];\r\n    polyline.route = makeFakeRoute({\r\n      legs: [makeFakeLeg({\r\n        steps:\r\n            [makeFakeStep({path: [ll1, ll2]}), makeFakeStep({path: [ll3, ll4]})]\r\n      })]\r\n    });\r\n    await env.waitForStability();\r\n\r\n    expect(setPathSpy).toHaveBeenCalledOnceWith([ll1, ll2, ll3, ll4]);\r\n  });\r\n\r\n  it('concatenates the paths from multiple legs', async () => {\r\n    const {polyline, setPathSpy} = await prepareState();\r\n    const [ll1, ll2, ll3, ll4] = [\r\n      new FakeLatLng(1, 1), new FakeLatLng(2, 2), new FakeLatLng(3, 3),\r\n      new FakeLatLng(4, 4)\r\n    ];\r\n    polyline.route = makeFakeRoute({\r\n      legs: [\r\n        makeFakeLeg({steps: [makeFakeStep({path: [ll1, ll2]})]}),\r\n        makeFakeLeg({steps: [makeFakeStep({path: [ll3, ll4]})]})\r\n      ]\r\n    });\r\n    await env.waitForStability();\r\n\r\n    expect(setPathSpy).toHaveBeenCalledOnceWith([ll1, ll2, ll3, ll4]);\r\n  });\r\n\r\n  it('connects to a map', async () => {\r\n    const {map, setMapSpy} = await prepareState(html`\r\n      <gmp-map>\r\n        <gmpx-route-polyline></gmpx-route-polyline>\r\n      </gmp-map>\r\n    `);\r\n\r\n    expect(setMapSpy.calls.mostRecent().args[0]).toBe(map!.innerMap);\r\n  });\r\n\r\n  it('disconnects from a map', async () => {\r\n    const {polyline, map, setMapSpy} = await prepareState(html`\r\n      <gmp-map>\r\n        <gmpx-route-polyline></gmpx-route-polyline>\r\n      </gmp-map>\r\n    `);\r\n    map!.removeChild(polyline);\r\n    await env.waitForStability();\r\n\r\n    expect(setMapSpy.calls.mostRecent().args[0]).toBe(null);\r\n  });\r\n\r\n  it('is disconnected after a synchronous connect -> disconnect', async () => {\r\n    const {polyline, map, setMapSpy} = await prepareState(html`\r\n        <gmp-map></gmp-map>\r\n        <gmpx-route-polyline></gmpx-route-polyline>\r\n      `);\r\n    map!.appendChild(polyline);\r\n    map!.removeChild(polyline);\r\n    await env.waitForStability();\r\n\r\n    expect(setMapSpy.calls.mostRecent()?.args[0]).not.toBe(map!.innerMap);\r\n  });\r\n\r\n  describe('viewport management', () => {\r\n    it(`fits in the map's viewport`, async () => {\r\n      const bounds = new FakeLatLngBounds();\r\n      const route = makeFakeRoute({bounds});\r\n      const {fitBoundsSpy} = await prepareState(html`\r\n        <gmp-map>\r\n          <gmpx-route-polyline .route=${route} fit-in-viewport>\r\n          </gmpx-route-polyline>\r\n        </gmp-map>\r\n      `);\r\n\r\n      expect(fitBoundsSpy).toHaveBeenCalledWith(bounds);\r\n    });\r\n\r\n    it(`doesn't set the viewport if fit-in-viewport is false`, async () => {\r\n      const bounds = new FakeLatLngBounds();\r\n      const route = makeFakeRoute({bounds});\r\n      const {fitBoundsSpy} = await prepareState(html`\r\n        <gmp-map>\r\n          <gmpx-route-polyline .route=${route}></gmpx-route-polyline>\r\n        </gmp-map>\r\n      `);\r\n\r\n      expect(fitBoundsSpy).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it(`doesn't set the viewport if there's no route data`, async () => {\r\n      const {fitBoundsSpy} = await prepareState(html`\r\n        <gmp-map>\r\n          <gmpx-route-polyline fit-in-viewport></gmpx-route-polyline>\r\n        </gmp-map>\r\n      `);\r\n\r\n      expect(fitBoundsSpy).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it(`sets the viewport when connecting`, async () => {\r\n      const bounds = new FakeLatLngBounds();\r\n      const route = makeFakeRoute({bounds});\r\n      const {polyline, map, fitBoundsSpy} = await prepareState(html`\r\n        <gmp-map></gmp-map>\r\n        <gmpx-route-polyline .route=${route} fit-in-viewport>\r\n        </gmpx-route-polyline>\r\n      `);\r\n      map!.appendChild(polyline);\r\n      await env.waitForStability();\r\n\r\n      expect(fitBoundsSpy).toHaveBeenCalledWith(bounds);\r\n    });\r\n\r\n    it(`fits two polylines in the map's viewport`, async () => {\r\n      const route1 = makeFakeRoute({\r\n        bounds: new FakeLatLngBounds({north: 1, south: 0, east: 1, west: 0})\r\n      });\r\n      const route2 = makeFakeRoute({\r\n        bounds: new FakeLatLngBounds({north: 2, south: 1, east: 2, west: 1})\r\n      });\r\n      const {fitBoundsSpy} = await prepareState(html`\r\n        <gmp-map>\r\n          <gmpx-route-polyline .route=${route1} fit-in-viewport>\r\n          </gmpx-route-polyline>\r\n          <gmpx-route-polyline .route=${route2} fit-in-viewport>\r\n          </gmpx-route-polyline>\r\n        </gmp-map>\r\n      `);\r\n\r\n      expect(fitBoundsSpy!.calls.mostRecent()?.args[0])\r\n          .toEqual(\r\n              new FakeLatLngBounds({north: 2, south: 0, east: 2, west: 0}));\r\n    });\r\n\r\n    it(`adjusts the viewport when disconnecting a polyline`, async () => {\r\n      const route1 = makeFakeRoute({\r\n        bounds: new FakeLatLngBounds({north: 1, south: 0, east: 1, west: 0})\r\n      });\r\n      const route2 = makeFakeRoute({\r\n        bounds: new FakeLatLngBounds({north: 2, south: 1, east: 2, west: 1})\r\n      });\r\n      const {map, polyline, fitBoundsSpy} = await prepareState(html`\r\n        <gmp-map>\r\n          <gmpx-route-polyline .route=${route1} fit-in-viewport>\r\n          </gmpx-route-polyline>\r\n          <gmpx-route-polyline .route=${route2} fit-in-viewport>\r\n          </gmpx-route-polyline>\r\n        </gmp-map>\r\n      `);\r\n      map!.removeChild(polyline);\r\n      await env.waitForStability();\r\n\r\n      expect(fitBoundsSpy!.calls.mostRecent()?.args[0])\r\n          .toEqual(\r\n              new FakeLatLngBounds({north: 2, south: 1, east: 2, west: 1}));\r\n    });\r\n\r\n    it(`adjusts the viewport when unsetting fit-in-viewport`, async () => {\r\n      const route1 = makeFakeRoute({\r\n        bounds: new FakeLatLngBounds({north: 1, south: 0, east: 1, west: 0})\r\n      });\r\n      const route2 = makeFakeRoute({\r\n        bounds: new FakeLatLngBounds({north: 2, south: 1, east: 2, west: 1})\r\n      });\r\n      const {polyline, fitBoundsSpy} = await prepareState(html`\r\n        <gmp-map>\r\n          <gmpx-route-polyline .route=${route1} fit-in-viewport>\r\n          </gmpx-route-polyline>\r\n          <gmpx-route-polyline .route=${route2} fit-in-viewport>\r\n          </gmpx-route-polyline>\r\n        </gmp-map>\r\n      `);\r\n      polyline.fitInViewport = false;\r\n      await env.waitForStability();\r\n\r\n      expect(fitBoundsSpy!.calls.mostRecent()?.args[0])\r\n          .toEqual(\r\n              new FakeLatLngBounds({north: 2, south: 1, east: 2, west: 1}));\r\n    });\r\n\r\n    it(`adjusts the viewport when updating route data`, async () => {\r\n      const route = makeFakeRoute({\r\n        bounds: new FakeLatLngBounds({north: 1, south: 0, east: 1, west: 0})\r\n      });\r\n      const {polyline, fitBoundsSpy} = await prepareState(html`\r\n        <gmp-map>\r\n          <gmpx-route-polyline .route=${route} fit-in-viewport>\r\n          </gmpx-route-polyline>\r\n        </gmp-map>\r\n      `);\r\n      polyline.route = makeFakeRoute({\r\n        bounds: new FakeLatLngBounds({north: 3, south: 2, east: 3, west: 2})\r\n      });\r\n      await env.waitForStability();\r\n\r\n      expect(fitBoundsSpy!.calls.mostRecent()?.args[0])\r\n          .toEqual(\r\n              new FakeLatLngBounds({north: 3, south: 2, east: 3, west: 2}));\r\n    });\r\n  });\r\n});\r\n"]}