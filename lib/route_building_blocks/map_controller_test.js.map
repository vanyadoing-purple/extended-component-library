{"version":3,"file":"map_controller_test.js","sourceRoot":"","sources":["../../src/route_building_blocks/map_controller_test.ts"],"names":[],"mappings":"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","sourcesContent":["// import 'jasmine'; (google3-only)\r\n\r\nimport {html, LitElement} from 'lit';\r\nimport {customElement} from 'lit/decorators.js';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\nimport {FakeMapElement} from '../testing/fake_gmp_components.js';\r\nimport {Deferred} from '../utils/deferred.js';\r\n\r\nimport {MapController} from './map_controller.js';\r\n\r\n@customElement('gmpx-test-map-controller-host')\r\nclass TestMapControllerHost extends LitElement {\r\n  mapController = new MapController(this);\r\n}\r\n\r\ndescribe('MapController', () => {\r\n  const env = new Environment();\r\n\r\n  beforeAll(() => {\r\n    env.defineFakeMapElement();\r\n  });\r\n\r\n  async function prepareMapElement(): Promise<FakeMapElement> {\r\n    const root = env.render(html`<gmp-map></gmp-map>`);\r\n    await env.waitForStability();\r\n    return root.querySelector('gmp-map')!;\r\n  }\r\n\r\n  it('has the map undefined before connecting', async () => {\r\n    const host = new TestMapControllerHost();\r\n    expect(host.mapController.map).toBeUndefined();\r\n  });\r\n\r\n  it('has the map promise unresolved before connecting', async () => {\r\n    const host = new TestMapControllerHost();\r\n    await expectAsync(host.mapController.mapPromise).toBePending();\r\n  });\r\n\r\n  it('gets a direct parent map', async () => {\r\n    const mapElement = await prepareMapElement();\r\n    const host = mapElement.appendChild(new TestMapControllerHost());\r\n    expect(host.mapController.map).toBe(mapElement.innerMap);\r\n  });\r\n\r\n  it('gets a grandparent map', async () => {\r\n    const mapElement = await prepareMapElement();\r\n    const div = mapElement.appendChild(document.createElement('div'));\r\n    const host = div.appendChild(new TestMapControllerHost());\r\n    expect(host.mapController.map).toBe(mapElement.innerMap);\r\n  });\r\n\r\n  it('gets a map from inside a shadow DOM', async () => {\r\n    const mapElement = await prepareMapElement();\r\n    const div = mapElement.appendChild(document.createElement('div'));\r\n    const divShadow = div.attachShadow({mode: 'open'});\r\n    const host = divShadow.appendChild(new TestMapControllerHost());\r\n\r\n    expect(host.mapController.map).toBe(mapElement.innerMap);\r\n  });\r\n\r\n  it('gets a map from inside two shadow DOMs', async () => {\r\n    const mapElement = await prepareMapElement();\r\n    const div = mapElement.appendChild(document.createElement('div'));\r\n    const divShadow = div.attachShadow({mode: 'open'});\r\n    const span = divShadow.appendChild(document.createElement('span'));\r\n    const spanShadow = span.attachShadow({mode: 'open'});\r\n    const host = spanShadow.appendChild(new TestMapControllerHost());\r\n\r\n    expect(host.mapController.map).toBe(mapElement.innerMap);\r\n  });\r\n\r\n  it('resolves the promise', async () => {\r\n    const mapElement = await prepareMapElement();\r\n    const host = mapElement.appendChild(new TestMapControllerHost());\r\n    await expectAsync(host.mapController.mapPromise)\r\n        .toBeResolvedTo(mapElement.innerMap);\r\n  });\r\n\r\n  it('resets when disconnecting', async () => {\r\n    const mapElement = await prepareMapElement();\r\n    const host = mapElement.appendChild(new TestMapControllerHost());\r\n    mapElement.removeChild(host);\r\n\r\n    expect(host.mapController.map).toBeUndefined();\r\n    await expectAsync(host.mapController.mapPromise).toBePending();\r\n  });\r\n\r\n  it('gets the new map when moved to a different map', async () => {\r\n    const root = env.render(html`<gmp-map></gmp-map><gmp-map></gmp-map>`);\r\n    await env.waitForStability();\r\n    const [mapElement1, mapElement2] = root.querySelectorAll('gmp-map');\r\n    const host = mapElement1.appendChild(new TestMapControllerHost());\r\n    mapElement2.appendChild(host);\r\n\r\n    expect(host.mapController.map).toBe(mapElement2.innerMap);\r\n    await expectAsync(host.mapController.mapPromise)\r\n        .toBeResolvedTo(mapElement2.innerMap);\r\n  });\r\n\r\n  it('waits for <gmp-map> to be defined', async () => {\r\n    const whenGmpMapDefined = new Deferred<typeof FakeMapElement>();\r\n    spyOn(customElements, 'get').and.returnValue(undefined);\r\n    spyOn(customElements, 'whenDefined')\r\n        .and.returnValue(whenGmpMapDefined.promise);\r\n\r\n    const mapElement = await prepareMapElement();\r\n    const host = mapElement.appendChild(new TestMapControllerHost());\r\n    const mapPromise = host.mapController.mapPromise;\r\n    await env.waitForStability();\r\n    whenGmpMapDefined.resolve(FakeMapElement);\r\n    await env.waitForStability();\r\n\r\n    expect(host.mapController.map).toBe(mapElement.innerMap);\r\n    await expectAsync(mapPromise).toBeResolvedTo(mapElement.innerMap);\r\n  });\r\n\r\n  it('handles connect -> disconnect -> define <gmp-map>', async () => {\r\n    const whenGmpMapDefined = new Deferred<typeof FakeMapElement>();\r\n    spyOn(customElements, 'get').and.returnValue(undefined);\r\n    spyOn(customElements, 'whenDefined')\r\n        .and.returnValue(whenGmpMapDefined.promise);\r\n\r\n    const mapElement = await prepareMapElement();\r\n    const host = mapElement.appendChild(new TestMapControllerHost());\r\n    mapElement.removeChild(host);\r\n    await env.waitForStability();\r\n    whenGmpMapDefined.resolve(FakeMapElement);\r\n    await env.waitForStability();\r\n\r\n    expect(host.mapController.map).toBeUndefined();\r\n    await expectAsync(host.mapController.mapPromise).toBePending();\r\n  });\r\n\r\n  it('gets the map when the host is rendered in markup', async () => {\r\n    const root = env.render(html`\r\n      <gmp-map>\r\n        <gmpx-test-map-controller-host>\r\n        </gmpx-test-map-controller-host>\r\n      </gmp-map>\r\n    `);\r\n    await env.waitForStability();\r\n    const mapElement = root.querySelector<FakeMapElement>('gmp-map')!;\r\n    const host = root.querySelector<TestMapControllerHost>(\r\n        'gmpx-test-map-controller-host')!;\r\n\r\n    expect(host.mapController.map).toBe(mapElement.innerMap);\r\n  });\r\n\r\n  it('sets the viewport manager', async () => {\r\n    const mapElement = await prepareMapElement();\r\n    const host = mapElement.appendChild(new TestMapControllerHost());\r\n    const viewportManager = host.mapController.viewportManager;\r\n\r\n    expect(viewportManager).toBeDefined();\r\n    expect(viewportManager!.map)\r\n        .toBe(mapElement as unknown as google.maps.MapElement);\r\n  });\r\n\r\n  it('updates the viewport manager when moved to a different map', async () => {\r\n    const root = env.render(html`<gmp-map></gmp-map><gmp-map></gmp-map>`);\r\n    await env.waitForStability();\r\n    const [mapElement1, mapElement2] = root.querySelectorAll('gmp-map');\r\n    const host = mapElement1.appendChild(new TestMapControllerHost());\r\n    mapElement2.appendChild(host);\r\n\r\n    expect(host.mapController.viewportManager!.map)\r\n        .toBe(mapElement2 as unknown as google.maps.MapElement);\r\n  });\r\n});\r\n"]}