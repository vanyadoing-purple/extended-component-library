{"version":3,"file":"place_overview_test.js","sourceRoot":"","sources":["../../src/place_overview/place_overview_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, TemplateResult} from 'lit';\r\nimport {customElement} from 'lit/decorators.js';\r\nimport {ifDefined} from 'lit/directives/if-defined.js';\r\n\r\nimport {PlaceDataConsumer} from '../place_building_blocks/place_data_consumer.js';\r\nimport {PlaceDataProvider} from '../place_building_blocks/place_data_provider/place_data_provider.js';\r\nimport {Environment} from '../testing/environment.js';\r\nimport {makeFakePlace, SAMPLE_FAKE_PLACE} from '../testing/fake_place.js';\r\nimport type {Place} from '../utils/googlemaps_types.js';\r\n\r\nimport {PlaceOverview} from './place_overview.js';\r\n\r\n\r\n@customElement('gmpx-test-place-overview-child')\r\nclass TestPlaceOverviewChild extends PlaceDataConsumer {\r\n  getPlaceFromContext(): Place|undefined {\r\n    return this.contextPlace;\r\n  }\r\n\r\n  getRequiredFields(): Array<keyof Place> {\r\n    return ['viewport'];\r\n  }\r\n}\r\n\r\ndescribe('PlaceOverview', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(config: {\r\n    size?: PlaceOverview['size'],\r\n    slottedContent?: TemplateResult,\r\n  }): Promise<PlaceOverview> {\r\n    const root = env.render(html`\r\n      <gmpx-place-overview size=${ifDefined(config.size)}>\r\n        ${config.slottedContent}\r\n      </gmpx-place-overview>\r\n    `);\r\n    await env.waitForStability();\r\n    return root.querySelector<PlaceOverview>('gmpx-place-overview')!;\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-place-overview');\r\n    expect(el).toBeInstanceOf(PlaceOverview);\r\n  });\r\n\r\n  it('logs warning when a child is in the default slot', async () => {\r\n    const consoleWarnSpy = spyOn(console, 'warn');\r\n    const overview =\r\n        await prepareState({slottedContent: html`<div id=\"invalid\"></div>`});\r\n    await env.waitForStability();\r\n\r\n    const invalidChild = overview.querySelector<HTMLDivElement>('#invalid')!;\r\n    expect(consoleWarnSpy)\r\n        .toHaveBeenCalledWith(\r\n            '<gmpx-place-overview>: ' +\r\n                'Detected child element in unsupported default slot. ' +\r\n                'This component supports the following slots: \"action\".',\r\n            invalidChild);\r\n  });\r\n\r\n  it('logs error and resets when size is set to an invalid value', async () => {\r\n    const consoleErrorSpy = spyOn(console, 'error');\r\n    const overview = await prepareState({size: 'foo' as PlaceOverview['size']});\r\n    await env.waitForStability();\r\n\r\n    expect(consoleErrorSpy)\r\n        .toHaveBeenCalledWith(\r\n            '<gmpx-place-overview>: ' +\r\n            'Value \"foo\" for attribute \"size\" is invalid. Acceptable ' +\r\n            'choices are \"x-small\", \"small\", \"medium\", \"large\", \"x-large\".');\r\n    expect(overview.size).toBe('x-large');\r\n    expect(overview.getAttribute('size')).toBe('x-large');\r\n  });\r\n\r\n  it('does not reflect place property back to attribute', async () => {\r\n    const overview = await prepareState({});\r\n    overview.place = SAMPLE_FAKE_PLACE;\r\n    await env.waitForStability();\r\n\r\n    expect(overview.getAttribute('place')).toBeNull();\r\n  });\r\n\r\n  it('forwards Place data from outer provider to inner one', async () => {\r\n    const root = env.render(html`\r\n      <gmpx-place-data-provider .place=${SAMPLE_FAKE_PLACE}>\r\n        <gmpx-place-overview auto-fetch-disabled></gmpx-place-overview>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n    await env.waitForStability();\r\n    const overview = root.querySelector<PlaceOverview>('gmpx-place-overview')!;\r\n    const innerProvider = overview.renderRoot.querySelector<PlaceDataProvider>(\r\n        'gmpx-place-data-provider')!;\r\n\r\n    expect(innerProvider.autoFetchDisabled).toBeTrue();\r\n    expect(innerProvider.place).toBe(SAMPLE_FAKE_PLACE);\r\n  });\r\n\r\n  it(`doesn't forward Place from outer provider if overridden`, async () => {\r\n    const root = env.render(html`\r\n      <gmpx-place-data-provider .place=${SAMPLE_FAKE_PLACE}>\r\n        <gmpx-place-overview place=\"ANOTHER_PLACE_ID\"></gmpx-place-overview>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n    await env.waitForStability();\r\n    const overview = root.querySelector<PlaceOverview>('gmpx-place-overview')!;\r\n    const innerProvider = overview.renderRoot.querySelector<PlaceDataProvider>(\r\n        'gmpx-place-data-provider')!;\r\n\r\n    expect(innerProvider.autoFetchDisabled).toBeFalse();\r\n    expect(innerProvider.place).toBe('ANOTHER_PLACE_ID');\r\n  });\r\n\r\n  it(`provides Place data to slotted child element via context`, async () => {\r\n    const fetchFieldsSpy = spyOn(SAMPLE_FAKE_PLACE, 'fetchFields');\r\n    const root = env.render(html`\r\n      <gmpx-place-overview .place=${SAMPLE_FAKE_PLACE}>\r\n        <gmpx-test-place-overview-child slot=\"action\">\r\n        </gmpx-test-place-overview-child>\r\n      </gmpx-place-overview>\r\n    `);\r\n    await env.waitForStability();\r\n    const child = root.querySelector<TestPlaceOverviewChild>(\r\n        'gmpx-test-place-overview-child')!;\r\n\r\n    expect(child.getPlaceFromContext()).toBe(SAMPLE_FAKE_PLACE);\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({\r\n      fields: jasmine.arrayContaining(['viewport']),\r\n    });\r\n  });\r\n\r\n  it(`emits request error event when Directions request fails`, async () => {\r\n    const consoleErrorSpy = spyOn(console, 'error');\r\n    const error = new Error('no direction results');\r\n    spyOn(env.fakeGoogleMapsHarness!, 'routeHandler').and.rejectWith(error);\r\n    const overview = await prepareState({});\r\n    const dispatchEventSpy = spyOn(overview, 'dispatchEvent');\r\n    overview.place = SAMPLE_FAKE_PLACE;\r\n    overview.travelOrigin = {lat: 1, lng: 2};\r\n    await env.waitForStability();\r\n\r\n    expect(consoleErrorSpy).not.toHaveBeenCalled();\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            jasmine.objectContaining({type: 'gmpx-requesterror', error}));\r\n  });\r\n\r\n  it(`emits and logs error event when Place ID is invalid`, async () => {\r\n    const consoleErrorSpy = spyOn(console, 'error');\r\n    const error = new Error('INVALID_REQUEST');\r\n    const overview = await prepareState({});\r\n    const dispatchEventSpy = spyOn(overview, 'dispatchEvent');\r\n    overview.place = makeFakePlace({\r\n      id: 'INVALID_PLACE_ID',\r\n      fetchFields: () => Promise.reject(error),\r\n    });\r\n    await env.waitForStability();\r\n\r\n    expect(consoleErrorSpy).toHaveBeenCalledOnceWith(error);\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            jasmine.objectContaining({type: 'gmpx-requesterror', error}));\r\n  });\r\n\r\n  it(`contains an attribution component in all sizes`, async () => {\r\n    const root = env.render(html`\r\n      <gmpx-place-overview size=\"x-small\"></gmpx-place-overview>\r\n      <gmpx-place-overview size=\"small\"></gmpx-place-overview>\r\n      <gmpx-place-overview size=\"medium\"></gmpx-place-overview>\r\n      <gmpx-place-overview size=\"large\"></gmpx-place-overview>\r\n      <gmpx-place-overview size=\"x-large\"></gmpx-place-overview>\r\n    `);\r\n    await env.waitForStability();\r\n\r\n    const overviews =\r\n        root.querySelectorAll<PlaceOverview>('gmpx-place-overview');\r\n    expect(overviews.length).toBe(5);\r\n    for (const overview of overviews) {\r\n      expect(overview.renderRoot.querySelector('gmpx-place-attribution'))\r\n          .not.toBeNull();\r\n    }\r\n  });\r\n});\r\n"]}