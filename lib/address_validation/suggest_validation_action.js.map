{"version":3,"file":"suggest_validation_action.js","sourceRoot":"","sources":["../../src/address_validation/suggest_validation_action.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {Address, AddressValidationResponse, Granularity, ValidationResult} from '../utils/googlemaps_types.js';\r\n\r\n\r\n/** Suggested action to take for this validation result. */\r\nexport enum SuggestedAction {\r\n  ACCEPT = 'ACCEPT',\r\n  CONFIRM = 'CONFIRM',\r\n  FIX = 'FIX',\r\n  ADD_SUBPREMISES = 'ADD_SUBPREMISES'\r\n}\r\n\r\ninterface ValidationSuggestion {\r\n  suggestedAction: SuggestedAction;\r\n}\r\n\r\n// Some referenced area types.\r\nconst ADMINISTRATIVE_AREA_LEVEL_1 = 'administrative_area_level_1';\r\nconst ADMINISTRATIVE_AREA_LEVEL_2 = 'administrative_area_level_2';\r\nconst ADMINISTRATIVE_AREA_LEVEL_3 = 'administrative_area_level_3';\r\nconst POSTAL_CODE = 'postal_code';\r\nconst POSTAL_CODE_SUFFIX = 'postal_code_suffix';\r\nconst COUNTRY = 'country';\r\nconst SUBPREMISE = 'subpremise';\r\n\r\nfunction isUSA(address: Address): boolean {\r\n  return address.postalAddress?.regionCode === 'US';\r\n}\r\n\r\nfunction isMissingNonSubpremiseComponent(result: ValidationResult): boolean {\r\n  const missingComponents = result.address.missingComponentTypes || [];\r\n  return (missingComponents.length > 1) ||\r\n      ((missingComponents.length === 1) &&\r\n       (missingComponents[0] !== SUBPREMISE));\r\n}\r\n\r\n/**\r\n * Returns true if the validation granularity is `OTHER`, i.e. worse than\r\n * `ROUTE` level. `PREMISE`, `SUBPREMISE`, and `PREMISE_PROXIMITY` are all\r\n * considered as good as `ROUTE` or better.\r\n */\r\nfunction hasValidationGranularityOther(result: ValidationResult): boolean {\r\n  return !result.verdict?.validationGranularity ||\r\n      result.verdict.validationGranularity === Granularity.OTHER;\r\n}\r\n\r\nfunction hasSuspiciousComponent(result: ValidationResult): boolean {\r\n  return result.address.addressComponents.some(\r\n      c => c.confirmationLevel === 'UNCONFIRMED_AND_SUSPICIOUS');\r\n}\r\n\r\nfunction hasUnresolvedToken(result: ValidationResult): boolean {\r\n  return (result.address.unresolvedTokens || []).length > 0;\r\n}\r\n\r\n/**\r\n * Returns true if the result has an inference for a component other than the\r\n * postal code, administrative area (1, 2, or 3), or country.\r\n */\r\nfunction hasMajorInference(result: ValidationResult): boolean {\r\n  const minorComponents = new Set([\r\n    POSTAL_CODE, POSTAL_CODE_SUFFIX, ADMINISTRATIVE_AREA_LEVEL_1,\r\n    ADMINISTRATIVE_AREA_LEVEL_2, ADMINISTRATIVE_AREA_LEVEL_3, COUNTRY\r\n  ]);\r\n  return result.address.addressComponents.some(\r\n      c => c.isInferred && !minorComponents.has(c.componentType));\r\n}\r\n\r\nfunction hasReplacement(result: ValidationResult): boolean {\r\n  return !!result.verdict?.hasReplacedComponents;\r\n}\r\n\r\n/**\r\n * Returns true if this is a US address that is missing a subpremise component\r\n * (and nothing else).\r\n */\r\nfunction isMissingExactlyUSASubpremise(result: ValidationResult): boolean {\r\n  return isUSA(result.address) &&\r\n      (result.address.missingComponentTypes?.length === 1) &&\r\n      (result.address.missingComponentTypes[0] === SUBPREMISE);\r\n}\r\n\r\n/**\r\n * This is a JavaScript function that analyzes an Address Validation API\r\n * response and outputs a single recommended follow-up action you should take\r\n * based on the quality of the address.\r\n *\r\n * This function returns an object with a property `suggestedAction`, which can\r\n * be one of the following values:\r\n *\r\n * * `'FIX'`: the address returned by the API is low quality. You should prompt\r\n * your user for more information.\r\n *\r\n * * `'CONFIRM'`: the address returned by the API is high quality, but the API\r\n * had to make significant changes to the input address. You might prompt your\r\n * user for confirmation.\r\n *\r\n * * `'ACCEPT'`: the address returned by the API is high quality. There may be\r\n * small corrections made by the Address Validation API. You can accept the\r\n * address.\r\n *\r\n * * `'ADD_SUBPREMISES'`: The end user entered an address that should have a\r\n * subpremises (e.g. apartment number) but did not include one. Your app should\r\n * ask the end user for this extra information and try again.\r\n *\r\n * You should call this function after making a call to the Address Validation\r\n * API, providing the API response as its argument. Your system should either\r\n * accept the address or prompt the user, based on the response from this\r\n * function.\r\n *\r\n * The logic for converting the API response into a single recommended action is\r\n * based on the principles discussed in the [Build your validation\r\n * logic](https://developers.google.com/maps/documentation/address-validation/build-validation-logic).\r\n * There are many ways to analyze the API response; this function serves as\r\n * a suggested implementation.\r\n *\r\n * **Best Practices**\r\n *\r\n * * See [Workflow\r\n * overview](https://developers.google.com/maps/documentation/address-validation/build-validation-logic#workflow-overview)\r\n * for the recommended behavior your system should have for each recommended\r\n * action.\r\n *\r\n * * Allow your system to accept the entered address even if the user does\r\n * not respond to prompts to fix the address.\r\n *\r\n * * If you want to make your own modifications to the logic, we recommend\r\n * reading through [Build your validation\r\n * logic](https://developers.google.com/maps/documentation/address-validation/build-validation-logic)\r\n * for guidance.\r\n *\r\n * @param response - A response object from the Address Validation API in the\r\n *     Maps JS SDK.\r\n */\r\nexport function suggestValidationAction(response: AddressValidationResponse):\r\n    ValidationSuggestion {\r\n  const result = response.result;\r\n  if (isMissingNonSubpremiseComponent(result) ||\r\n      hasValidationGranularityOther(result) || hasSuspiciousComponent(result) ||\r\n      hasUnresolvedToken(result)) {\r\n    return {suggestedAction: SuggestedAction.FIX};\r\n  } else if (hasMajorInference(result) || hasReplacement(result)) {\r\n    return {suggestedAction: SuggestedAction.CONFIRM};\r\n  } else if (isMissingExactlyUSASubpremise(result)) {\r\n    return {suggestedAction: SuggestedAction.ADD_SUBPREMISES};\r\n  } else {\r\n    return {suggestedAction: SuggestedAction.ACCEPT};\r\n  }\r\n}"]}