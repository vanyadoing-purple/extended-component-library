{"version":3,"file":"place_picker_test.js","sourceRoot":"","sources":["../../src/place_picker/place_picker_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, TemplateResult} from 'lit';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\nimport {FakeMapElement} from '../testing/fake_gmp_components.js';\r\nimport {FakeLatLng} from '../testing/fake_lat_lng.js';\r\nimport {makeFakePlace} from '../testing/fake_place.js';\r\nimport {getDeepActiveElement} from '../utils/deep_element_access.js';\r\nimport type {PlaceResult} from '../utils/googlemaps_types.js';\r\n\r\nimport {PLACE_DATA_FIELDS, PLACE_RESULT_DATA_FIELDS, PlacePicker} from './place_picker.js';\r\n\r\nconst FAKE_LOCATION = new FakeLatLng(-1, 1);\r\n\r\nconst FAKE_BOUNDS = {\r\n  east: 1,\r\n  north: 1,\r\n  south: -1,\r\n  west: -1,\r\n} as unknown as google.maps.LatLngBounds;\r\n\r\nconst FAKE_PLACE_RESULT_FROM_AUTOCOMPLETE = {\r\n  place_id: 'FAKE_AUTOCOMPLETE_PLACE_ID',\r\n  geometry: {\r\n    location: FAKE_LOCATION,\r\n  },\r\n  name: 'Fake Place from Autocomplete',\r\n};\r\n\r\nconst FAKE_PLACE_FROM_QUERY = makeFakePlace({\r\n  id: 'FAKE_QUERY_PLACE_ID',\r\n  formattedAddress: '123 Main St, City Name, CA 00000',\r\n  displayName: '123 Main St'\r\n});\r\n\r\ndescribe('PlacePicker', () => {\r\n  const env = new Environment();\r\n\r\n  beforeAll(() => {\r\n    env.defineFakeMapElement();\r\n  });\r\n\r\n  beforeEach(() => {\r\n    // Create a custom stub for `Place.searchByText()`\r\n    spyOn(env.fakeGoogleMapsHarness!, 'searchByTextHandler').and.returnValue({\r\n      places: [FAKE_PLACE_FROM_QUERY]\r\n    });\r\n\r\n    // Define a fake Circle class\r\n    const fakeCircle = jasmine.createSpyObj('Circle', ['getBounds']);\r\n    env.fakeGoogleMapsHarness!.libraries['maps'].Circle =\r\n        jasmine.createSpy().and.returnValue(fakeCircle);\r\n  });\r\n\r\n  async function prepareState(template?: TemplateResult) {\r\n    const root =\r\n        env.render(template ?? html`<gmpx-place-picker></gmpx-place-picker>`);\r\n    const picker = root.querySelector<PlacePicker>('gmpx-place-picker')!;\r\n\r\n    await env.waitForStability();\r\n\r\n    const input = picker.renderRoot.querySelector('input')!;\r\n    const searchButton =\r\n        picker.renderRoot.querySelector<HTMLButtonElement>('.search-button')!;\r\n    const clearButton =\r\n        picker.renderRoot.querySelector<HTMLButtonElement>('.clear-button')!;\r\n    return {root, picker, input, searchButton, clearButton};\r\n  }\r\n\r\n  async function enterQueryText(input: HTMLInputElement, query = 'some text') {\r\n    input.value = query;\r\n    input.dispatchEvent(new InputEvent('input'));\r\n    await env.waitForStability();\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-place-picker');\r\n    expect(el).toBeInstanceOf(PlacePicker);\r\n  });\r\n\r\n  it('delegates focus to input element on focus()', async () => {\r\n    const {picker, input} = await prepareState();\r\n\r\n    picker.focus();\r\n\r\n    expect(getDeepActiveElement()).toBe(input);\r\n  });\r\n\r\n  it('initializes Autocomplete widget with minimum configs', async () => {\r\n    spyOn(env.fakeGoogleMapsHarness!, 'autocompleteConstructor')\r\n        .and.callThrough();\r\n    const {picker, input, searchButton, clearButton} = await prepareState();\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteConstructor)\r\n        .toHaveBeenCalledOnceWith(input, {\r\n          bounds: undefined,\r\n          componentRestrictions: undefined,\r\n          fields: [...PLACE_RESULT_DATA_FIELDS],\r\n          strictBounds: false,\r\n          types: [],\r\n        });\r\n    expect(input.placeholder).toBe('');\r\n    expect(picker.value).toBeUndefined();\r\n    expect(searchButton.disabled).toBeTrue();\r\n    expect(clearButton.hidden).toBeTrue();\r\n  });\r\n\r\n  it(`initializes Autocomplete widget based on attributes`, async () => {\r\n    spyOn(env.fakeGoogleMapsHarness!, 'autocompleteConstructor')\r\n        .and.callThrough();\r\n\r\n    // The call to `.Circle.and.exec()` grabs a reference to the Circle\r\n    // spy object without recording a call to the constructor spy (e.g.\r\n    // `.Circle()`)\r\n    env.fakeGoogleMapsHarness!.libraries['maps']\r\n        .Circle.and.exec()\r\n        .getBounds.and.returnValue(FAKE_BOUNDS);\r\n    const {input} = await prepareState(html`\r\n      <gmpx-place-picker\r\n        country=\"us ca\"\r\n        location-bias=\"12,34\"\r\n        placeholder=\"Search nearby places\"\r\n        radius=\"1000\"\r\n        type=\"street_address\"\r\n        strict-bounds\r\n      ></gmpx-place-picker>\r\n    `);\r\n\r\n    expect(env.fakeGoogleMapsHarness!.libraries['maps'].Circle)\r\n        .toHaveBeenCalledOnceWith({center: {lat: 12, lng: 34}, radius: 1000});\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteConstructor)\r\n        .toHaveBeenCalledOnceWith(input, {\r\n          bounds: FAKE_BOUNDS,\r\n          componentRestrictions: {country: ['us', 'ca']},\r\n          fields: [...PLACE_RESULT_DATA_FIELDS],\r\n          strictBounds: true,\r\n          types: ['street_address'],\r\n        });\r\n    expect(input.placeholder).toBe('Search nearby places');\r\n  });\r\n\r\n  it(`updates Autocomplete options when relevant props change`, async () => {\r\n    env.fakeGoogleMapsHarness!.libraries['maps']\r\n        .Circle.and.exec()\r\n        .getBounds.and.returnValue(FAKE_BOUNDS);\r\n    const {picker} = await prepareState();\r\n\r\n    picker.country = ['uk'];\r\n    picker.locationBias = {lat: 12, lng: 34};\r\n    picker.radius = 1000;\r\n    picker.strictBounds = true;\r\n    picker.type = 'restaurant';\r\n    await env.waitForStability();\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.setOptions)\r\n        .toHaveBeenCalledOnceWith({\r\n          bounds: FAKE_BOUNDS,\r\n          componentRestrictions: {country: ['uk']},\r\n          fields: [...PLACE_RESULT_DATA_FIELDS],\r\n          strictBounds: true,\r\n          types: ['restaurant'],\r\n        });\r\n  });\r\n\r\n  it(`resets the place type to none (= all) given a falsy value`, async () => {\r\n    const {picker} = await prepareState(\r\n        html`<gmpx-place-picker type=\"restaurant\"></gmpx-place-picker>`);\r\n\r\n    picker.type = '';\r\n    await env.waitForStability();\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.setOptions)\r\n        .toHaveBeenCalledOnceWith(jasmine.objectContaining({\r\n          types: [],\r\n        }));\r\n  });\r\n\r\n  it(`doesn't define bounds when only location bias is specified`, async () => {\r\n    const {picker} = await prepareState();\r\n\r\n    picker.locationBias = {lat: 12, lng: 34};\r\n    await env.waitForStability();\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.setOptions)\r\n        .toHaveBeenCalledOnceWith(jasmine.objectContaining({\r\n          bounds: undefined,\r\n        }));\r\n  });\r\n\r\n  it(`doesn't define bounds when only radius is specified`, async () => {\r\n    const {picker} = await prepareState();\r\n\r\n    picker.radius = 1000;\r\n    await env.waitForStability();\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.setOptions)\r\n        .toHaveBeenCalledOnceWith(jasmine.objectContaining({\r\n          bounds: undefined,\r\n        }));\r\n  });\r\n\r\n  it(`doesn't update Autocomplete when no relevant props change`, async () => {\r\n    const {picker} = await prepareState();\r\n\r\n    picker.placeholder = 'Search nearby places';\r\n    await env.waitForStability();\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.setOptions)\r\n        .not.toHaveBeenCalled();\r\n  });\r\n\r\n  it(`enables search & clear buttons on user input`, async () => {\r\n    const dispatchEventSpy = spyOn(PlacePicker.prototype, 'dispatchEvent');\r\n    const {picker, input, searchButton, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input);\r\n\r\n    expect(picker.value).toBeUndefined();\r\n    expect(searchButton.disabled).toBeFalse();\r\n    expect(clearButton.hidden).toBeFalse();\r\n    expect(dispatchEventSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it(`disables search & clear buttons when user deletes all text`, async () => {\r\n    const dispatchEventSpy = spyOn(PlacePicker.prototype, 'dispatchEvent');\r\n    const {picker, input, searchButton, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input);\r\n    await enterQueryText(input, '');\r\n\r\n    expect(picker.value).toBeUndefined();\r\n    expect(searchButton.disabled).toBeTrue();\r\n    expect(clearButton.hidden).toBeTrue();\r\n    expect(dispatchEventSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it(`sets value based on user selection and fires event`, async () => {\r\n    const dispatchEventSpy = spyOn(PlacePicker.prototype, 'dispatchEvent');\r\n    let autocompleteSelectionHandler: Function;\r\n    env.fakeGoogleMapsHarness!.autocompleteSpy.addListener\r\n        .withArgs('place_changed', jasmine.anything())\r\n        .and.callFake((eventName, handler) => {\r\n          autocompleteSelectionHandler = handler;\r\n          return {} as google.maps.MapsEventListener;\r\n        });\r\n    env.fakeGoogleMapsHarness!.autocompleteSpy.getPlace.and.returnValue(\r\n        FAKE_PLACE_RESULT_FROM_AUTOCOMPLETE);\r\n    const {picker, input, searchButton, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input);\r\n    autocompleteSelectionHandler!();\r\n    await env.waitForStability();\r\n\r\n    const place = picker.value;\r\n    expect(place).toBeDefined();\r\n    expect(place!.id).toBe('FAKE_AUTOCOMPLETE_PLACE_ID');\r\n    expect(place!.location).toBe(FAKE_LOCATION);\r\n    expect(place!.displayName).toBe('Fake Place from Autocomplete');\r\n    expect(searchButton.disabled).toBeTrue();\r\n    expect(clearButton.hidden).toBeFalse();\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(new Event('gmpx-placechange'));\r\n  });\r\n\r\n  it(`sets value to undefined when place's cleared & fires event`, async () => {\r\n    let autocompleteSelectionHandler: Function;\r\n    env.fakeGoogleMapsHarness!.autocompleteSpy.addListener\r\n        .withArgs('place_changed', jasmine.anything())\r\n        .and.callFake((eventName, handler) => {\r\n          autocompleteSelectionHandler = handler;\r\n          return {} as google.maps.MapsEventListener;\r\n        });\r\n    const {picker, input, searchButton, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input);\r\n    autocompleteSelectionHandler!();\r\n    await env.waitForStability();\r\n\r\n    const dispatchEventSpy = spyOn(PlacePicker.prototype, 'dispatchEvent');\r\n    clearButton.click();\r\n    await env.waitForStability();\r\n\r\n    expect(picker.value).toBeUndefined();\r\n    expect(searchButton.disabled).toBeTrue();\r\n    expect(clearButton.hidden).toBeTrue();\r\n    expect(input.value).toBe('');\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(new Event('gmpx-placechange'));\r\n  });\r\n\r\n  it(`sets value based on place returned by Find Place request`, async () => {\r\n    env.fakeGoogleMapsHarness!.autocompleteSpy.getBounds.and.returnValue(\r\n        FAKE_BOUNDS);\r\n    const {picker, input, searchButton, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input, '123 Main St');\r\n\r\n    const fetchFieldsSpy =\r\n        spyOn(FAKE_PLACE_FROM_QUERY, 'fetchFields').and.callThrough();\r\n    searchButton.click();\r\n    await env.waitForStability();\r\n\r\n    expect(env.fakeGoogleMapsHarness!.searchByTextHandler)\r\n        .toHaveBeenCalledOnceWith({\r\n          textQuery: '123 Main St',\r\n          fields: ['id'],\r\n          locationBias: FAKE_BOUNDS,\r\n        });\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({\r\n      fields: [...PLACE_DATA_FIELDS],\r\n    });\r\n    const place = picker.value;\r\n    expect(place!.id).toBe('FAKE_QUERY_PLACE_ID');\r\n    expect(searchButton.disabled).toBeTrue();\r\n    expect(clearButton.hidden).toBeFalse();\r\n    expect(input.value).toBe('123 Main St, City Name, CA 00000');\r\n  });\r\n\r\n  it('sets value from fallback GA API when Place.searchByText is not available',\r\n     async () => {\r\n       env.fakeGoogleMapsHarness!.autocompleteSpy.getBounds.and.returnValue(\r\n           FAKE_BOUNDS);\r\n       const {picker, input, searchButton, clearButton} = await prepareState();\r\n       (env.fakeGoogleMapsHarness!.searchByTextHandler as jasmine.Spy)\r\n           .and.throwError(new Error(\r\n               'google.maps.places.Place.searchByText() is not available in the SDK!'));\r\n       spyOn(env.fakeGoogleMapsHarness!, 'findPlaceFromQueryGAHandler')\r\n           .and.returnValue({\r\n             results: [{\r\n               place_id: 'ga123',\r\n               name: 'City Hall',\r\n               formatted_address: '123 Main St, City Name, CA 00000'\r\n             } as PlaceResult],\r\n             status: 'OK'\r\n           });\r\n\r\n       await enterQueryText(input, '123 Main St');\r\n       searchButton.click();\r\n       await env.waitForStability();\r\n       await env.waitForStability();  // Seems like this takes two updates\r\n\r\n       expect(env.fakeGoogleMapsHarness!.findPlaceFromQueryGAHandler)\r\n           .toHaveBeenCalledOnceWith({\r\n             query: '123 Main St',\r\n             fields: ['place_id'],\r\n             locationBias: FAKE_BOUNDS,\r\n           });\r\n\r\n       const place = picker.value;\r\n       expect(place!.id).toBe('ga123');\r\n       expect(searchButton.disabled).toBeTrue();\r\n       expect(clearButton.hidden).toBeFalse();\r\n       expect(input.value).toBe('City Hall, 123 Main St, City Name, CA 00000');\r\n     });\r\n\r\n  it(`sets value to null if no search results and fires event`, async () => {\r\n    const {picker, input, searchButton, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input, '123 Main St');\r\n\r\n    (env.fakeGoogleMapsHarness!.searchByTextHandler as jasmine.Spy)\r\n        .and.returnValue({\r\n          places: [],\r\n        });\r\n    const dispatchEventSpy = spyOn(PlacePicker.prototype, 'dispatchEvent');\r\n    searchButton.click();\r\n    await env.waitForStability();\r\n\r\n    expect(picker.value).toBeNull();\r\n    expect(searchButton.disabled).toBeTrue();\r\n    expect(clearButton.hidden).toBeFalse();\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(new Event('gmpx-placechange'));\r\n  });\r\n\r\n  it(`dispatches request error event when search is rejected`, async () => {\r\n    const {picker, input, searchButton, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input, '123 Main St');\r\n\r\n    const error = new Error('some network error');\r\n    (env.fakeGoogleMapsHarness!.searchByTextHandler as jasmine.Spy)\r\n        .and.throwError(error);\r\n    const dispatchEventSpy = spyOn(picker, 'dispatchEvent');\r\n    searchButton.click();\r\n    await env.waitForStability();\r\n\r\n    expect(picker.value).toBeUndefined();\r\n    expect(searchButton.disabled).toBeTrue();\r\n    expect(clearButton.hidden).toBeFalse();\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            jasmine.objectContaining({type: 'gmpx-requesterror', error}));\r\n  });\r\n\r\n  it(`moves focus to clear button when searching via keyboard`, async () => {\r\n    const {input, searchButton, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input);\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {key: 'Tab'}));\r\n    searchButton.focus();\r\n    searchButton.click();\r\n    await env.waitForStability();\r\n\r\n    expect(getDeepActiveElement()).toBe(clearButton);\r\n  });\r\n\r\n  it(`moves focus to input when clearing via keyboard`, async () => {\r\n    const {input, clearButton} = await prepareState();\r\n\r\n    await enterQueryText(input);\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {key: 'Tab'}));\r\n    clearButton.focus();\r\n    clearButton.click();\r\n    await env.waitForStability();\r\n\r\n    expect(getDeepActiveElement()).toBe(input);\r\n  });\r\n\r\n  it(`binds to map bounds imperatively via method`, async () => {\r\n    const {picker} = await prepareState();\r\n    const fakeMap = {} as google.maps.Map;\r\n\r\n    await picker.bindTo(fakeMap);\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.bindTo)\r\n        .toHaveBeenCalledOnceWith('bounds', fakeMap);\r\n  });\r\n\r\n  it(`binds to map bounds declaratively via attribute`, async () => {\r\n    const {root} = await prepareState(html`\r\n      <gmpx-place-picker for-map=\"my-map\"></gmpx-place-picker>\r\n      <gmp-map id=\"my-map\"></gmp-map>\r\n    `);\r\n    const mapElement = root.querySelector<FakeMapElement>('gmp-map')!;\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.bindTo)\r\n        .toHaveBeenCalledOnceWith('bounds', mapElement.innerMap);\r\n  });\r\n\r\n  it(`doesn't bind to map bounds when id matches no element`, async () => {\r\n    await prepareState(html`\r\n      <gmpx-place-picker for-map=\"my-map\"></gmpx-place-picker>\r\n    `);\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.bindTo)\r\n        .not.toHaveBeenCalled();\r\n  });\r\n\r\n  it(`doesn't bind to map bounds when id matches non-Map element`, async () => {\r\n    await prepareState(html`\r\n      <gmpx-place-picker for-map=\"my-map\"></gmpx-place-picker>\r\n      <div id=\"my-map\"></div>\r\n    `);\r\n\r\n    expect(env.fakeGoogleMapsHarness!.autocompleteSpy.bindTo)\r\n        .not.toHaveBeenCalled();\r\n  });\r\n});\r\n"]}