{"version":3,"file":"route_overview.js","sourceRoot":"","sources":["../../src/route_overview/route_overview.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport '../route_building_blocks/route_data_provider/route_data_provider.js';\r\nimport '../route_building_blocks/route_polyline/route_polyline.js';\r\nimport '../route_building_blocks/route_marker/route_marker.js';\r\n\r\nimport {html} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {when} from 'lit/directives/when.js';\r\n\r\nimport {BaseComponent} from '../base/base_component.js';\r\nimport {LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER} from '../utils/attribute_converters.js';\r\n\r\ntype DirectionsRoute = google.maps.DirectionsRoute;\r\ntype LatLng = google.maps.LatLng;\r\ntype LatLngLiteral = google.maps.LatLngLiteral;\r\n\r\nconst INNER_POLYLINE_BLUE = '#1faefb';\r\nconst OUTER_POLYLINE_BLUE = '#2565cd';\r\n\r\n/**\r\n * The route overview component renders a route on a `<gmp-map>` component,\r\n * including origin and destination markers, an outlined polyline, and viewport\r\n * management.\r\n *\r\n * This component can fetch route data from the Directions API, or use a\r\n * `DirectionsRoute` object provided from elsewhere in code. The component will\r\n * locally cache route data to avoid redundant API requests.\r\n *\r\n * @event {RequestErrorEvent} gmpx-requesterror - Indicates an error condition\r\n * in an underlying Google Maps JavaScript API call. (React: onRequestError)\r\n */\r\n@customElement('gmpx-route-overview')\r\nexport class RouteOverview extends BaseComponent {\r\n  /**\r\n   * The destination of the directions request as a lat/lng. When setting the\r\n   * destination, only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({\r\n    converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\r\n    attribute: 'destination-lat-lng',\r\n    reflect: true\r\n  })\r\n  destinationLatLng?: LatLng|LatLngLiteral;\r\n\r\n  /**\r\n   * The destination of the directions request as a Place ID. When setting the\r\n   * destination, only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({type: String, attribute: 'destination-place-id', reflect: true})\r\n  destinationPlaceId?: string;\r\n\r\n  /**\r\n   * The destination of the directions request as an address query. When setting\r\n   * the destination, only one of lat/lng, Place ID, or address should be\r\n   * specified.\r\n   */\r\n  @property({type: String, attribute: 'destination-address', reflect: true})\r\n  destinationAddress?: string;\r\n\r\n  /**\r\n   * The origin of the directions request as a lat/lng. When setting the origin,\r\n   * only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({\r\n    converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\r\n    attribute: 'origin-lat-lng',\r\n    reflect: true\r\n  })\r\n  originLatLng?: LatLng|LatLngLiteral;\r\n\r\n  /**\r\n   * The origin of the directions request as a Place ID. When setting the\r\n   * origin, only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({type: String, attribute: 'origin-place-id', reflect: true})\r\n  originPlaceId?: string;\r\n\r\n  /**\r\n   * The origin of the directions request as an address query. When setting the\r\n   * origin, only one of lat/lng, Place ID, or address should be specified.\r\n   */\r\n  @property({type: String, attribute: 'origin-address', reflect: true})\r\n  originAddress?: string;\r\n\r\n  /**\r\n   * Route data to render directly, instead of making an API call.\r\n   */\r\n  @property({attribute: false}) route?: DirectionsRoute;\r\n\r\n  /**\r\n   * The travel mode of the directions request.\r\n   */\r\n  @property({type: String, attribute: 'travel-mode', reflect: true})\r\n  travelMode: Lowercase<google.maps.TravelMode> = 'driving';\r\n\r\n  /**\r\n   * Hides the red pin displayed at the destination.\r\n   */\r\n  @property({type: Boolean, attribute: 'no-pin', reflect: true}) noPin = false;\r\n\r\n  private static numConstructed = 0;\r\n\r\n  private readonly zIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.zIndex = 10 * RouteOverview.numConstructed++;\r\n  }\r\n\r\n  protected override render() {\r\n    // clang-format off\r\n    return html`\r\n      <gmpx-route-data-provider\r\n          .destinationLatLng=${this.destinationLatLng}\r\n          .destinationPlaceId=${this.destinationPlaceId}\r\n          .destinationAddress=${this.destinationAddress}\r\n          .originLatLng=${this.originLatLng}\r\n          .originPlaceId=${this.originPlaceId}\r\n          .originAddress=${this.originAddress}\r\n          .route=${this.route}\r\n          .travelMode=${this.travelMode}>\r\n        <gmpx-route-polyline\r\n            fit-in-viewport\r\n            stroke-color=\"${OUTER_POLYLINE_BLUE}\"\r\n            stroke-weight=\"9\"\r\n            .zIndex=${this.zIndex}>\r\n        </gmpx-route-polyline>\r\n        <gmpx-route-polyline\r\n            stroke-color=\"${INNER_POLYLINE_BLUE}\"\r\n            stroke-weight=\"5\"\r\n            .zIndex=${this.zIndex + 1}>\r\n        </gmpx-route-polyline>\r\n        <gmpx-route-marker\r\n            waypoint=\"origin\"\r\n            .title=${this.originAddress ?? ''}\r\n            .zIndex=${this.zIndex}>\r\n          <svg width=\"20\" height=\"20\" style=\"position: relative; top: 13px;\">\r\n            <circle cx=\"10\" cy=\"10\" r=\"6\" stroke=\"black\" stroke-width=\"3\" \r\n                fill=\"white\"/>\r\n          </svg>\r\n        </gmpx-route-marker>\r\n        <gmpx-route-marker\r\n            waypoint=\"destination\"\r\n            .title=${this.destinationAddress ?? ''}\r\n            .zIndex=${this.zIndex + 1}>\r\n          <svg width=\"20\" height=\"20\" style=\"position: relative; top: 13px;\">\r\n            <circle cx=\"10\" cy=\"10\" r=\"7\" stroke=\"black\" stroke-width=\"3\" \r\n                fill=\"white\"/>\r\n            <circle cx=\"10\" cy=\"10\" r=\"1.8\" stroke=\"black\" stroke-width=\"3\" \r\n                fill=\"black\"/>\r\n          </svg>\r\n        </gmpx-route-marker>\r\n        ${when(!this.noPin, () => html`\r\n          <gmpx-route-marker\r\n              waypoint=\"destination\"\r\n              .title=${this.destinationAddress ?? ''}\r\n              .zIndex=${this.zIndex + 2}>\r\n          </gmpx-route-marker>`)}\r\n      </gmpx-route-data-provider>\r\n    `;\r\n    // clang-format on\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'gmpx-route-overview': RouteOverview;\r\n  }\r\n}\r\n"]}