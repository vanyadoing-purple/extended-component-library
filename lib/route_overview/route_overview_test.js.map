{"version":3,"file":"route_overview_test.js","sourceRoot":"","sources":["../../src/route_overview/route_overview_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, TemplateResult} from 'lit';\r\n\r\nimport {LoggingController} from '../base/logging_controller.js';\r\nimport {RouteDataProvider} from '../route_building_blocks/route_data_provider/route_data_provider.js';\r\nimport {RouteMarker} from '../route_building_blocks/route_marker/route_marker.js';\r\nimport {RoutePolyline} from '../route_building_blocks/route_polyline/route_polyline.js';\r\nimport {Environment} from '../testing/environment.js';\r\nimport {makeFakeRoute} from '../testing/fake_route.js';\r\n\r\nimport {RouteOverview} from './route_overview.js';\r\n\r\n\r\ndescribe('RouteOverview', () => {\r\n  const env = new Environment();\r\n\r\n  beforeEach(() => {\r\n    env.defineFakeAdvancedMarkerElement();\r\n  });\r\n\r\n  async function prepareState(template?: TemplateResult) {\r\n    const errorSpy = spyOn(LoggingController.prototype, 'error');\r\n    const root = env.render(\r\n        template ?? html`<gmpx-route-overview></gmpx-route-overview>`);\r\n    await env.waitForStability();\r\n    const overview = root.querySelector<RouteOverview>('gmpx-route-overview')!;\r\n    const provider = overview.shadowRoot!.querySelector<RouteDataProvider>(\r\n        'gmpx-route-data-provider')!;\r\n\r\n    return {errorSpy, root, overview, provider};\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-route-overview');\r\n    expect(el).toBeInstanceOf(RouteOverview);\r\n  });\r\n\r\n  it('passes request attributes to its data provider', async () => {\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-route-overview\r\n          destination-lat-lng=\"1,2\"\r\n          destination-place-id=\"abc\"\r\n          destination-address=\"def\"\r\n          origin-lat-lng=\"3,4\"\r\n          origin-place-id=\"123\"\r\n          origin-address=\"456\"\r\n          travel-mode=\"walking\"\r\n      ></gmpx-route-overview>`);\r\n\r\n    expect(provider.destinationLatLng).toEqual({lat: 1, lng: 2});\r\n    expect(provider.destinationPlaceId).toEqual('abc');\r\n    expect(provider.destinationAddress).toEqual('def');\r\n    expect(provider.originLatLng).toEqual({lat: 3, lng: 4});\r\n    expect(provider.originPlaceId).toEqual('123');\r\n    expect(provider.originAddress).toEqual('456');\r\n    expect(provider.travelMode).toEqual('walking');\r\n  });\r\n\r\n  it('passes request properties to its data provider', async () => {\r\n    const {overview, provider} = await prepareState();\r\n\r\n    overview.destinationLatLng = {lat: 1, lng: 2};\r\n    overview.destinationPlaceId = 'abc';\r\n    overview.destinationAddress = 'def';\r\n    overview.originLatLng = {lat: 3, lng: 4};\r\n    overview.originPlaceId = '123';\r\n    overview.originAddress = '456';\r\n    overview.travelMode = 'walking';\r\n    await env.waitForStability();\r\n\r\n    expect(provider.destinationLatLng).toEqual({lat: 1, lng: 2});\r\n    expect(provider.destinationPlaceId).toEqual('abc');\r\n    expect(provider.destinationAddress).toEqual('def');\r\n    expect(provider.originLatLng).toEqual({lat: 3, lng: 4});\r\n    expect(provider.originPlaceId).toEqual('123');\r\n    expect(provider.originAddress).toEqual('456');\r\n    expect(provider.travelMode).toEqual('walking');\r\n  });\r\n\r\n  it('logs an error when setting multiple origins', async () => {\r\n    const {errorSpy} = await prepareState(html`\r\n      <gmpx-route-overview\r\n          destination-lat-lng=\"1,2\"\r\n          origin-lat-lng=\"3,4\"\r\n          origin-place-id=\"123\"\r\n          origin-address=\"456\"\r\n      ></gmpx-route-overview>`);\r\n\r\n    expect(errorSpy).toHaveBeenCalledOnceWith(\r\n        'Too many origins. Only one of origin-lat-lng, ' +\r\n        'origin-place-id, or origin-address may be specified.');\r\n  });\r\n\r\n  it('logs an error when setting multiple destinations', async () => {\r\n    const {errorSpy} = await prepareState(html`\r\n      <gmpx-route-overview\r\n          destination-lat-lng=\"1,2\"\r\n          destination-place-id=\"abc\"\r\n          destination-address=\"def\"\r\n          origin-lat-lng=\"3,4\"\r\n      ></gmpx-route-overview> `);\r\n\r\n    expect(errorSpy).toHaveBeenCalledOnceWith(\r\n        'Too many destinations. Only one of destination-lat-lng, ' +\r\n        'destination-place-id, or destination-address may be specified.');\r\n  });\r\n\r\n  it('passes the route property to its data provider', async () => {\r\n    const {overview, provider} = await prepareState();\r\n\r\n    const route = makeFakeRoute();\r\n    overview.route = route;\r\n    await env.waitForStability();\r\n\r\n    expect(provider.route).toBe(route);\r\n  });\r\n\r\n  it('sets marker titles to the origin/destination queries', async () => {\r\n    const {overview} = await prepareState(html`\r\n      <gmpx-route-overview destination-address=\"abc\" origin-address=\"123\">\r\n      </gmpx-route-overview>`);\r\n    const originMarkers =\r\n        Array.from(overview.shadowRoot!.querySelectorAll<RouteMarker>(\r\n            'gmpx-route-marker[waypoint=\"origin\"]'));\r\n    const destinationMarkers =\r\n        Array.from(overview.shadowRoot!.querySelectorAll<RouteMarker>(\r\n            'gmpx-route-marker[waypoint=\"destination\"]'));\r\n\r\n    originMarkers.forEach((marker) => {\r\n      expect(marker.title).toEqual('123');\r\n    });\r\n    destinationMarkers.forEach((marker) => {\r\n      expect(marker.title).toEqual('abc');\r\n    });\r\n  });\r\n\r\n  it('creates successive overviews with increasing z-index', async () => {\r\n    const {root, overview} = await prepareState();\r\n    const secondOverview =\r\n        root.appendChild(document.createElement('gmpx-route-overview'));\r\n    const overviewMaxIndex = Math.max(...consumerZIndices(overview));\r\n    const secondOverviewMinIndex =\r\n        Math.min(...consumerZIndices(secondOverview));\r\n\r\n    expect(secondOverviewMinIndex).toBeGreaterThan(overviewMaxIndex);\r\n  });\r\n\r\n  it('renders the right number of markers and polylines', async () => {\r\n    const {overview} = await prepareState();\r\n    const originMarkers = overview.shadowRoot!.querySelectorAll<RouteMarker>(\r\n        'gmpx-route-marker[waypoint=\"origin\"]');\r\n    const destinationMarkers =\r\n        overview.shadowRoot!.querySelectorAll<RouteMarker>(\r\n            'gmpx-route-marker[waypoint=\"destination\"]');\r\n    const polylines = overview.shadowRoot!.querySelectorAll<RoutePolyline>(\r\n        'gmpx-route-polyline');\r\n\r\n    expect(originMarkers.length).toEqual(1);\r\n    expect(destinationMarkers.length).toEqual(2);\r\n    expect(polylines.length).toEqual(2);\r\n  });\r\n\r\n  it('omits the pin when no-pin is specified', async () => {\r\n    const {overview} = await prepareState(html`\r\n      <gmpx-route-overview no-pin destination-address=\"abc\" origin-address=\"123\">\r\n      </gmpx-route-overview>`);\r\n    const destinationMarkers =\r\n        overview.shadowRoot!.querySelectorAll<RouteMarker>(\r\n            'gmpx-route-marker[waypoint=\"destination\"]');\r\n\r\n    expect(destinationMarkers.length).toEqual(1);\r\n  });\r\n});\r\n\r\n/**\r\n * Returns an array containing the z-indices of all marker and polyline\r\n * components in the overview's shadow DOM.\r\n */\r\nfunction consumerZIndices(overview: RouteOverview): number[] {\r\n  const consumers = Array.from(\r\n      overview.shadowRoot!.querySelectorAll<RouteMarker|RoutePolyline>(\r\n          'gmpx-route-marker,gmpx-route-polyline'));\r\n  return consumers.map((el) => el.zIndex)\r\n      .filter((i): i is number => (typeof i === 'number'));\r\n}\r\n"]}