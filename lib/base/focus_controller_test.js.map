{"version":3,"file":"focus_controller_test.js","sourceRoot":"","sources":["../../src/base/focus_controller_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, LitElement} from 'lit';\r\nimport {customElement} from 'lit/decorators.js';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\n\r\nimport {FocusController} from './focus_controller.js';\r\n\r\n@customElement('gmpx-test-focus-controller-host')\r\nclass TestFocusControllerHost extends LitElement {\r\n  readonly callbackSpy = jasmine.createSpy('callback');\r\n  readonly focusController = new FocusController(this, this.callbackSpy);\r\n}\r\n\r\ndescribe('FocusController', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(): Promise<TestFocusControllerHost> {\r\n    const root = env.render(html`\r\n      <gmpx-test-focus-controller-host></gmpx-test-focus-controller-host>\r\n    `);\r\n    await env.waitForStability();\r\n    return root.querySelector<TestFocusControllerHost>(\r\n        'gmpx-test-focus-controller-host')!;\r\n  }\r\n\r\n  it('initializes isKeyboardNavigating to false', async () => {\r\n    const {focusController} = await prepareState();\r\n    expect(focusController.isKeyboardNavigating).toBeFalse();\r\n  });\r\n\r\n  it('sets isKeyboardNavigating to true on Tab', async () => {\r\n    const {focusController} = await prepareState();\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Tab'}));\r\n    expect(focusController.isKeyboardNavigating).toBeTrue();\r\n  });\r\n\r\n  it('sets isKeyboardNavigating to false on Enter', async () => {\r\n    const {focusController} = await prepareState();\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Enter'}));\r\n    expect(focusController.isKeyboardNavigating).toBeTrue();\r\n  });\r\n\r\n  it('does not set isKeyboardNavigating on other keys', async () => {\r\n    const {focusController} = await prepareState();\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Escape'}));\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'ArrowLeft'}));\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'ArrowRight'}));\r\n    expect(focusController.isKeyboardNavigating).toBeFalse();\r\n  });\r\n\r\n  it('sets isKeyboardNavigating back to false on mousedown', async () => {\r\n    const {focusController} = await prepareState();\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Tab'}));\r\n    document.dispatchEvent(new MouseEvent('mousedown'));\r\n    expect(focusController.isKeyboardNavigating).toBeFalse();\r\n  });\r\n\r\n  it('calls the callback with true on Tab', async () => {\r\n    const {callbackSpy} = await prepareState();\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Tab'}));\r\n    expect(callbackSpy).toHaveBeenCalledOnceWith(true);\r\n  });\r\n\r\n  it('calls the callback with true on Enter', async () => {\r\n    const {callbackSpy} = await prepareState();\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Tab'}));\r\n    expect(callbackSpy).toHaveBeenCalledOnceWith(true);\r\n  });\r\n\r\n  it('calls the callback with false on mousedown', async () => {\r\n    const {callbackSpy} = await prepareState();\r\n    document.dispatchEvent(new MouseEvent('mousedown'));\r\n    expect(callbackSpy).toHaveBeenCalledOnceWith(false);\r\n  });\r\n\r\n  it(`doesn't call the callback when state remains false`, async () => {\r\n    const {callbackSpy} = await prepareState();\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Tab'}));\r\n    document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Enter'}));\r\n    expect(callbackSpy).toHaveBeenCalledTimes(1);\r\n  });\r\n\r\n  it(`doesn't call the callback when state remains true`, async () => {\r\n    const {callbackSpy} = await prepareState();\r\n    document.dispatchEvent(new MouseEvent('mousedown'));\r\n    document.dispatchEvent(new MouseEvent('mousedown'));\r\n    expect(callbackSpy).toHaveBeenCalledTimes(1);\r\n  });\r\n});\r\n"]}