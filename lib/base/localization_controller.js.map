{"version":3,"file":"localization_controller.js","sourceRoot":"","sources":["../../src/base/localization_controller.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAIH,OAAO,EAAC,qBAAqB,EAAiC,MAAM,cAAc,CAAC;AAKnF;;;GAGG;AACH,MAAM,OAAO,sBAAsB;IAIjC,YAA6B,IAAuC;QAAvC,SAAI,GAAJ,IAAI,CAAmC;QAClE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,aAAa;QACX,sBAAsB,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;IAED,gBAAgB;QACd,sBAAsB,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CACZ,EAAK,EAAE,GAAG,IAA0C;QACtD,MAAM,OAAO,GAAG,sBAAsB,CAAC,wBAAwB,CAAC,EAAE,CAAC;YAC/D,qBAAqB,CAAC,EAAE,CAAC,CAAC;QAC9B,OAAO,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;IACpE,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,iBAAiB,CAAC,cAAuC;QAC9D,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YAC7C,sBAAsB,CAAC,wBAAwB,CAAC,GAAG,CAAC;gBAChD,cAAc,CAAC,GAAG,CAAC,CAAC;SACzB;QACD,KAAK,MAAM,SAAS,IAAI,sBAAsB,CAAC,mBAAmB,EAAE;YAClE,SAAS,CAAC,aAAa,EAAE,CAAC;SAC3B;IACH,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,cAAc,CAAC,aAAyB;QAC7C,MAAM,SAAS,GAAG,IAAI,sBAAsB,CAAC,aAAa,CAAC,CAAC;QAC5D,OAAO,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,KAAK;QACV,sBAAsB,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QACnD,sBAAsB,CAAC,wBAAwB,GAAG,EAAE,CAAC;IACvD,CAAC;;AA5DuB,0CAAmB,GAAG,IAAI,GAAG,EAAmB,CAAC;AAC1D,+CAAwB,GAA4B,EAAE,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {LitElement, ReactiveController, ReactiveControllerHost, ReactiveElement} from 'lit';\r\n\r\nimport {STRING_LITERALS_EN_US, StringFunction, StringLiterals} from './strings.js';\r\n\r\ntype ParametersOrEmpty<T extends string|StringFunction> =\r\n    T extends StringFunction ? Parameters<T>: [];\r\n\r\n/**\r\n * Controller that provides localized string literals (`en-US` by default)\r\n * for use in components of this library.\r\n */\r\nexport class LocalizationController implements ReactiveController {\r\n  private static readonly connectedComponents = new Set<ReactiveElement>();\r\n  private static translatedStringLiterals: Partial<StringLiterals> = {};\r\n\r\n  constructor(private readonly host: ReactiveControllerHost&LitElement) {\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.connectedComponents.add(this.host);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    LocalizationController.connectedComponents.delete(this.host);\r\n  }\r\n\r\n  /**\r\n   * Returns a localized string literal with the specified ID.\r\n   *\r\n   * @param args If the value keyed by that ID is a string function, provide\r\n   * one or more inputs as function arguments.\r\n   */\r\n  getStringLiteral<T extends keyof StringLiterals>(\r\n      id: T, ...args: ParametersOrEmpty<StringLiterals[T]>): string {\r\n    const literal = LocalizationController.translatedStringLiterals[id] ??\r\n        STRING_LITERALS_EN_US[id];\r\n    return (typeof literal === 'string') ? literal : literal(...args);\r\n  }\r\n\r\n  /**\r\n   * Sets one or many localized string literals in the new locale then\r\n   * requests an update for all currently connected components.\r\n   */\r\n  static setStringLiterals(stringLiterals: Partial<StringLiterals>) {\r\n    for (const key of Object.keys(stringLiterals)) {\r\n      LocalizationController.translatedStringLiterals[key] =\r\n          stringLiterals[key];\r\n    }\r\n    for (const component of LocalizationController.connectedComponents) {\r\n      component.requestUpdate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds instance of localizer controller to be used for getting string\r\n   * literal messages.\r\n   */\r\n  static buildLocalizer(baseComponent: LitElement) {\r\n    const localizer = new LocalizationController(baseComponent);\r\n    return localizer.getStringLiteral.bind(localizer);\r\n  }\r\n\r\n  /**\r\n   * Resets Localization Controller state by clearing its connected components\r\n   * and translated string literals. This method should be invoked for testing\r\n   * purposes only.\r\n   * @ignore\r\n   */\r\n  static reset() {\r\n    LocalizationController.connectedComponents.clear();\r\n    LocalizationController.translatedStringLiterals = {};\r\n  }\r\n}\r\n"]}