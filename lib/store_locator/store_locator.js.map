{"version":3,"file":"store_locator.js","sourceRoot":"","sources":["../../src/store_locator/store_locator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport '../split_layout/split_layout.js';\r\nimport '../overlay_layout/overlay_layout.js';\r\nimport '../route_overview/route_overview.js';\r\nimport '../place_overview/place_overview.js';\r\nimport '../place_picker/place_picker.js';\r\nimport '../icon_button/icon_button.js';\r\nimport '../place_building_blocks/place_directions_button/place_directions_button.js';\r\n\r\n// Placeholder for objectProperty (google3-only)\r\nimport {html, nothing} from 'lit';\r\nimport {customElement, property, query, state} from 'lit/decorators.js';\r\nimport {classMap} from 'lit/directives/class-map.js';\r\nimport {join} from 'lit/directives/join.js';\r\nimport {ref} from 'lit/directives/ref.js';\r\nimport {repeat} from 'lit/directives/repeat.js';\r\n\r\nimport {APILoader} from '../api_loader/api_loader.js';\r\nimport {BaseComponent} from '../base/base_component.js';\r\nimport {LocalizationController} from '../base/localization_controller.js';\r\nimport {WebFont, WebFontController} from '../base/web_font_controller.js';\r\nimport type {OverlayLayout} from '../overlay_layout/overlay_layout.js';\r\nimport type {PlacePicker} from '../place_picker/place_picker.js';\r\nimport type {LatLng, MapElement, Place, PlaceResult} from '../utils/googlemaps_types.js';\r\n\r\nimport {DistanceInfo, DistanceMeasurer, DistanceSource} from './distances.js';\r\nimport type {InternalListing, StoreLocatorListing} from './interfaces.js';\r\nimport {FeatureSet, QuickBuilderConfiguration} from './interfaces.js';\r\nimport {convertLocations, getFeatureSet, getMapOptions} from './quick_builder.js';\r\nimport {storeLocatorStyles} from './store_locator_styles.js';\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'gmpx-store-locator': StoreLocator;\r\n  }\r\n}\r\n\r\n// @ts-ignore - Unused interface, but required for type checking.\r\ninterface HTMLElementTagNameMap {\r\n  'gmp-map': google.maps.MapElement;\r\n  'gmp-advanced-marker': google.maps.marker.AdvancedMarkerElement;\r\n}\r\n\r\nconst DEFAULT_MAP_OPTIONS: Partial<google.maps.MapOptions> = {\r\n  mapTypeControl: false,\r\n  maxZoom: 17,\r\n  streetViewControl: false\r\n};\r\n\r\n/**\r\n * The store locator component displays an experience where your website's users\r\n * can browse a list of locations, find the nearest one, and view details.\r\n *\r\n * While store locations are the most common use case, you can use this\r\n * component to show many nearby points of interest like parks, ATMs, or gas\r\n * stations.\r\n *\r\n * To use `<gmpx-store-locator>`, pass it a JavaScript array containing the\r\n * locations you want to present. Each location, called a listing, is defined as\r\n * an object with the following properties:\r\n *\r\n * ```\r\n * interface StoreLocatorListing {\r\n *   // Name of the location or store\r\n *   title: string;\r\n *\r\n *   // Address lines, used when displaying the list.\r\n *   addressLines?: string[];\r\n *\r\n *   // Geographic coordinates of the location\r\n *   position: LatLng|LatLngLiteral;\r\n *\r\n *   // Place ID for this location, used to retrieve additional details\r\n *   placeId?: string;\r\n *\r\n *   // Optional list of additional actions to display with each location\r\n *   actions?: StoreLocatorAction[];\r\n * }\r\n *\r\n * interface StoreLocatorAction {\r\n *   // Button label for this action\r\n *   label: string;\r\n *\r\n *   // URI that will be opened in a new tab\r\n *   defaultUri?: string;\r\n * }\r\n * ```\r\n *\r\n * See below for a full example.\r\n *\r\n * @cssproperty [--gmpx-color-surface] - Background color.\r\n * @cssproperty [--gmpx-color-on-surface] - Main text color.\r\n * @cssproperty [--gmpx-color-on-surface-variant] - Color of less important text\r\n * such as captions.\r\n * @cssproperty [--gmpx-color-primary] - Color of buttons and icons.\r\n * @cssproperty [--gmpx-color-outline] - Button outline and divider color.\r\n * @cssproperty [--gmpx-fixed-panel-width-row-layout=28.5em] - Controls the side\r\n * panel width when the component is displayed in row direction. The map\r\n * width will adjust automatically to fill remaining space.\r\n * @cssproperty [--gmpx-fixed-panel-height-column-layout=65%] - Controls the\r\n * side panel height when the component is displayed in column direction. The\r\n * map height will adjust automatically to fill remaining space.\r\n * @cssproperty [--gmpx-font-family-base] - Font family for regular text.\r\n * @cssproperty [--gmpx-font-family-headings] - Font family for headings.\r\n * @cssproperty [--gmpx-font-size-base] - Text size, sets scale for the\r\n * component.\r\n * @cssproperty [--gmpx-hours-color-open] - Opening hours text color\r\n * when the place is open (`advanced` feature set only).\r\n * @cssproperty [--gmpx-hours-color-closed] - Opening hours text color\r\n * when the place is closed (`advanced` feature set only).\r\n * @cssproperty [--gmpx-rating-color] - Color of star rating icons in the\r\n * details view (`advanced` feature set only).\r\n * @cssproperty [--gmpx-rating-color-empty] - Background color of star\r\n * rating icons in the details view (`advanced` feature set only).\r\n */\r\n@customElement('gmpx-store-locator')\r\nexport class StoreLocator extends BaseComponent {\r\n  static override styles = storeLocatorStyles;\r\n\r\n  /**\r\n   * Chooses the capabilities of this store locator:\r\n   *\r\n   * * `'basic'` shows a list of locations with pins on a map.\r\n   *\r\n   * * `'intermediate'` adds a search input so users can find the location\r\n   * closest to them.\r\n   *\r\n   * * `'advanced'` brings in a Place details view to show photos, hours, and\r\n   * reviews for each location.\r\n   */\r\n  @property({attribute: 'feature-set', reflect: true})\r\n  featureSet: FeatureSet = FeatureSet.ADVANCED;\r\n\r\n  /**\r\n   * The Map ID of the map. See the [Map ID\r\n   * documentation](https://developers.google.com/maps/documentation/get-map-id)\r\n   * for more information.\r\n   */\r\n  @property({attribute: 'map-id', reflect: true}) mapId?: string;\r\n\r\n  /**\r\n   * List of locations to display in the store locator.\r\n   */\r\n  @property({attribute: false}) listings?: StoreLocatorListing[];\r\n\r\n  /**\r\n   * Overrides for the map options. Provide values for `center` and `zoom` to\r\n   * display a map when `listings` is empty.\r\n   */\r\n  @property({attribute: false})\r\n  mapOptions?: Partial<google.maps.MapOptions> = DEFAULT_MAP_OPTIONS;\r\n\r\n  @state() private internalListings: InternalListing[] = [];\r\n\r\n  @state() private selectedListing?: InternalListing;\r\n\r\n  @state() private searchLocation?: Place;\r\n\r\n  @state() private detailsPlaceId?: string;\r\n\r\n  @state() private initialized = false;\r\n\r\n  @query('gmpx-overlay-layout') private overlayLayout?: OverlayLayout;\r\n  @query('gmp-map') private mapElement?: MapElement;\r\n\r\n  protected readonly getMsg = LocalizationController.buildLocalizer(this);\r\n  protected readonly fontLoader = new WebFontController(\r\n      this, [WebFont.GOOGLE_SANS_TEXT, WebFont.MATERIAL_SYMBOLS_OUTLINED]);\r\n\r\n  private mapsCoreLibrary?: google.maps.CoreLibrary;\r\n  private userCountry?: string;\r\n  private readonly distanceMeasurer = new DistanceMeasurer(this);\r\n  private readonly listingDistances = new Map<InternalListing, DistanceInfo>();\r\n\r\n  constructor() {\r\n    super();\r\n    this.initialize();\r\n  }\r\n\r\n  /**\r\n   * Blocks Lit lifecycle methods until the component is async-initialized. All\r\n   * other component methods (except for the constructor) can expect that\r\n   * `this.initialized` is true.\r\n   */\r\n  protected override shouldUpdate(changedProperties: Map<string, unknown>) {\r\n    return this.initialized;\r\n  }\r\n\r\n  /**\r\n   * Notes on willUpdate():\r\n   * - This method will only be called when `this.initialized` is true.\r\n   * - Unable to use `PropertyValues<this>` as the TS type since we are checking\r\n   *   a private property.\r\n   * https://lit.dev/docs/components/lifecycle/#typescript-types-for-changedproperties\r\n   */\r\n  protected override willUpdate(changedProperties: Map<string, unknown>) {\r\n    if (changedProperties.has('listings') ||\r\n        changedProperties.has(/* @state */ 'initialized')) {\r\n      this.internalListings =\r\n          (this.listings ?? []).map((x) => this.createInternalListing(x));\r\n      this.listingDistances.clear();\r\n    }\r\n  }\r\n\r\n  protected override updated(changedProperties: Map<string, unknown>) {\r\n    // Perform map updates after the DOM has rendered, so the map element will exist.\r\n    if (changedProperties.has('listings') ||\r\n        changedProperties.has(/* @state */ 'initialized')) {\r\n      this.updateBounds();\r\n    }\r\n  \r\n    if ((changedProperties.has('mapOptions') ||\r\n         changedProperties.has(/* @state */ 'initialized')) && this.mapOptions) {\r\n  \r\n      // If styles are provided, try to reinitialize the map instance to force\r\n      // the styles to be applied from the start\r\n      if (this.mapOptions.styles && this.mapElement) {\r\n        // Remove any existing map instance (this is a hack; adjust as needed)\r\n        // Clear the map container.\r\n        while (this.mapElement.firstChild) {\r\n          this.mapElement.removeChild(this.mapElement.firstChild);\r\n        }\r\n        // Create a new map instance with your complete mapOptions.\r\n        const newMap = new google.maps.Map(this.mapElement, this.mapOptions);\r\n        // Replace the internal reference.\r\n        (this.mapElement as any).innerMap = newMap;\r\n      } else {\r\n        this.mapElement?.innerMap?.setOptions(this.mapOptions);\r\n      }\r\n    }\r\n  } // <-- Add this closing brace for updated() method.\r\n  \r\n  protected override render() {\r\n    if (!this.initialized) return nothing;\r\n    return html`\r\n      <gmpx-split-layout>\r\n        <gmpx-overlay-layout slot=\"fixed\">\r\n          ${this.renderSidePanelMain()}\r\n          ${this.renderSidePanelOverlay()}\r\n        </gmpx-overlay-layout>\r\n        ${this.renderMapPanel()}\r\n      </gmpx-split-layout>\r\n    `;\r\n  }\r\n  \r\n\r\n  /**\r\n   * Configures the Store Locator component from data generated by the [Quick\r\n   * Builder\r\n   * tool](https://console.cloud.google.com/google/maps-apis/build/locator-plus)\r\n   * in the Maps Console.\r\n   *\r\n   * @param configuration The configuration object generated by the Quick\r\n   *     Builder tool.\r\n   */\r\n  configureFromQuickBuilder(configuration: QuickBuilderConfiguration) {\r\n    this.listings = convertLocations(configuration);\r\n    this.featureSet = getFeatureSet(configuration);\r\n    this.mapOptions = getMapOptions(configuration);\r\n  }\r\n\r\n  /**\r\n   * Perform one-time initialization tasks; effectively an async constructor.\r\n   */\r\n  private async initialize() {\r\n    this.mapsCoreLibrary =\r\n        await APILoader.importLibrary('core', this) as google.maps.CoreLibrary;\r\n    this.initialized = true;\r\n  }\r\n\r\n  private createInternalListing(listing: StoreLocatorListing): InternalListing {\r\n    const placeResult: PlaceResult = {\r\n      place_id: listing.placeId,\r\n      name: listing.title,\r\n      formatted_address: listing.addressLines?.join(' '),\r\n      geometry: {location: new this.mapsCoreLibrary!.LatLng(listing.position)}\r\n    };\r\n    return {\r\n      ...listing,\r\n      placeResult,\r\n      uniqueKey: `${listing.placeId}:${listing.title}`\r\n    };\r\n  }\r\n\r\n  private isIntermediateOrBetter() {\r\n    return this.featureSet === FeatureSet.INTERMEDIATE ||\r\n        this.featureSet === FeatureSet.ADVANCED;\r\n  }\r\n\r\n  private async updateDistances(origin: LatLng|null|undefined) {\r\n    if (!this.isIntermediateOrBetter() || !origin ||\r\n        !this.internalListings.length) {\r\n      this.listingDistances.clear();\r\n    } else {\r\n      const units = (this.userCountry === 'US') ?\r\n          this.mapsCoreLibrary!.UnitSystem.IMPERIAL :\r\n          this.mapsCoreLibrary!.UnitSystem.METRIC;\r\n      const distances = await this.distanceMeasurer.computeDistances(\r\n          origin, this.internalListings.map(listing => listing.position),\r\n          units);\r\n      for (let i = 0; i < distances.length; i++) {\r\n        this.listingDistances.set(this.internalListings[i], distances[i]);\r\n      }\r\n    }\r\n    this.requestUpdate();\r\n  }\r\n\r\n  /** Updates the end user's location, used for travel times and sorting. */\r\n  private updateSearchLocation(event: Event) {\r\n    const place = (event.target as PlacePicker).value;\r\n    this.searchLocation = place ?? undefined;\r\n\r\n    // Update the locator's idea of the user's country, used for units.\r\n    if (place?.addressComponents) {\r\n      for (const component of place.addressComponents) {\r\n        if (component.types.indexOf('country') >= 0) {\r\n          this.userCountry = component.shortText ?? undefined;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Update map bounds to include the new location marker.\r\n    this.updateBounds();\r\n\r\n    // Update distances to this location\r\n    this.updateDistances(place?.location);\r\n  }\r\n\r\n  /**\r\n   * Updates the selected location.\r\n   *\r\n   * @returns true if the selected location was changed.\r\n   */\r\n  private selectLocation(listing: InternalListing|undefined): boolean {\r\n    if (this.selectedListing === listing) return false;\r\n    this.selectedListing = listing;\r\n    return true;\r\n  }\r\n\r\n  /** Updates the map bounds to markers. */\r\n  private async updateBounds() {\r\n    if (!this.internalListings.length) return;\r\n\r\n    const bounds = new this.mapsCoreLibrary!.LatLngBounds();\r\n    if (this.searchLocation?.location) {\r\n      bounds.extend(this.searchLocation.location);\r\n    }\r\n    for (const listing of this.internalListings) {\r\n      bounds.extend(listing.position);\r\n    }\r\n    this.mapElement?.innerMap?.fitBounds(bounds);\r\n  }\r\n\r\n  private renderSidePanelOverlay() {\r\n    if (this.featureSet === FeatureSet.ADVANCED) {\r\n      // clang-format off\r\n      return html`\r\n          <div slot=\"overlay\" id=\"details-panel\">\r\n            <button class=\"back-button\"\r\n                @click=${() => this.overlayLayout?.hideOverlay()}>\r\n              <span class=\"icon material-symbols-outlined\">arrow_back</span>\r\n              ${this.getMsg('LOCATOR_BACK_BUTTON_CTA')}\r\n            </button>\r\n            <gmpx-place-overview .place=${this.detailsPlaceId} google-logo-already-displayed>\r\n            </gmpx-place-overview>\r\n          </div>`;\r\n      // clang-format on\r\n    }\r\n    return nothing;\r\n  }\r\n\r\n  private renderListItem(listing: InternalListing) {\r\n    // UI display for travel distance.\r\n    const distanceInfo = this.listingDistances.get(listing);\r\n    const showDistance = distanceInfo?.text &&\r\n        distanceInfo.source === DistanceSource.DISTANCE_MATRIX;\r\n    const distanceHtml = showDistance ? distanceInfo.text : nothing;\r\n\r\n    // Action buttons.\r\n    const actionButtons = [];\r\n    if (this.featureSet === FeatureSet.ADVANCED) {\r\n      const showDetails = () => {\r\n        if (listing.placeId) {\r\n          this.detailsPlaceId = listing.placeId;\r\n          this.overlayLayout?.showOverlay();\r\n        }\r\n      };\r\n      actionButtons.push(html`\r\n          <gmpx-icon-button class=\"view-details\" @click=${showDetails}>\r\n            ${this.getMsg('LOCATOR_VIEW_DETAILS_CTA')}\r\n          </gmpx-icon-button>`);\r\n    }\r\n    for (const action of listing.actions ?? []) {\r\n      actionButtons.push(\r\n          html`\r\n          <gmpx-icon-button icon=\"open_in_new\" .href=${\r\n              action.defaultUri ?? nothing}>\r\n            ${action.label}\r\n          </gmpx-icon-button>`);\r\n    }\r\n\r\n    // Clicking anywhere on the item selects this location.\r\n    // Additionally, a hidden button element makes this behavior\r\n    // accessible under tab navigation.\r\n    const selectCallback = () => {\r\n      const wasSelection = this.selectLocation(listing);\r\n      if (wasSelection && this.selectedListing && !this.searchLocation) {\r\n        this.mapElement?.innerMap?.panTo(this.selectedListing.position);\r\n      }\r\n    };\r\n    const liClick = selectCallback;\r\n    const selectButtonClick = (e: Event) => {\r\n      selectCallback();\r\n      e.stopPropagation();\r\n    };\r\n\r\n    // clang-format off\r\n    return html`\r\n      <li @click=${liClick}\r\n          class=${classMap({'selected': listing === this.selectedListing})}\r\n          ${ref((el?: Element) => { listing.listingElement = el; })}>\r\n        <gmpx-place-data-provider auto-fetch-disabled\r\n            .place=${listing.placeResult}>\r\n          <div class=\"result-item\">\r\n            <button class=\"select-location\" @click=${selectButtonClick}>\r\n              <div class=\"name\">\r\n                <gmpx-place-field-text field=\"displayName\"></gmpx-place-field-text>\r\n              </div>\r\n            </button>\r\n            <div class=\"address\">\r\n              ${(listing.addressLines ?? []).map((line) => html`<p>${line}</p>`)}\r\n            </div>\r\n            <div class=\"actions\">\r\n              ${join(actionButtons, html``)}\r\n            </div>\r\n            <div class=\"distance\">${distanceHtml}</div>\r\n            <gmpx-place-directions-button condensed\r\n                .ariaLabel=${this.getMsg('LOCATOR_DIRECTIONS_BUTTON_LABEL', listing.title)}\r\n                .origin=${this.searchLocation?.location ?? undefined}>\r\n            </gmpx-place-directions-button>\r\n          </div>\r\n        </gmpx-place-data-provider>\r\n      </li>`;\r\n    // clang-format on\r\n  }\r\n\r\n  private renderSidePanelMain() {\r\n    let sortedListings = this.internalListings;\r\n    let headerText = this.getMsg('LOCATOR_LIST_SUBHEADING');\r\n    if (this.listingDistances.size > 0) {\r\n      headerText = this.getMsg('LOCATOR_LIST_SUBHEADING_WITH_SEARCH');\r\n\r\n      // Sort the listings with all Distance Matrix distances first, in order,\r\n      // then all geodesic distances, in order.\r\n      const distanceMatrixListings = this.internalListings.filter(\r\n          listing => this.listingDistances.get(listing)?.source ===\r\n              DistanceSource.DISTANCE_MATRIX);\r\n      const otherDistanceListings = this.internalListings.filter(\r\n          listing => this.listingDistances.get(listing)?.source !==\r\n              DistanceSource.DISTANCE_MATRIX);\r\n\r\n      const getDistance = (listing: InternalListing) =>\r\n          this.listingDistances.get(listing)?.value ?? Infinity;\r\n      const distanceSorter = (a: InternalListing, b: InternalListing) =>\r\n          getDistance(a) - getDistance(b);\r\n      sortedListings = [\r\n        ...distanceMatrixListings.sort(distanceSorter),\r\n        ...otherDistanceListings.sort(distanceSorter)\r\n      ];\r\n    }\r\n\r\n    // clang-format off\r\n    const header = this.featureSet === FeatureSet.BASIC ?\r\n        nothing :\r\n        html`\r\n        <div class=\"header\">\r\n          <div class=\"search-title\">\r\n            <span class=\"icon material-symbols-outlined\">distance</span>\r\n            ${this.getMsg('LOCATOR_LIST_HEADER')}\r\n          </div>\r\n          <gmpx-place-picker for-map=\"main-map\" type=\"geocode\"\r\n              .placeholder=${this.getMsg('LOCATOR_SEARCH_PROMPT')}\r\n              @gmpx-placechange=${this.updateSearchLocation}>\r\n          </gmpx-place-picker>\r\n        </div>\r\n    `;\r\n\r\n    return html`\r\n        <div slot=\"main\" id=\"locations-panel\">\r\n          <div id=\"locations-panel-list\">\r\n            ${header}\r\n            <div class=\"section-name\">\r\n              ${headerText} (${sortedListings.length})\r\n            </div>\r\n            <div class=\"results\">\r\n              <ul id=\"location-results-list\">\r\n                ${repeat(\r\n                    sortedListings,\r\n                    (x) => x.uniqueKey,\r\n                    (x) => this.renderListItem(x))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>`;\r\n    // clang-format on\r\n  }\r\n\r\n  private renderSearchMarker() {\r\n    if (this.isIntermediateOrBetter() && this.searchLocation?.location) {\r\n      return html`\r\n          <gmp-advanced-marker\r\n              .position=${this.searchLocation.location}\r\n              title=\"${this.getMsg('LOCATOR_SEARCH_LOCATION_MARKER_TITLE')}\">\r\n            <svg viewbox=\"0 0 100 100\" class=\"search-pin\">\r\n              <circle cx=\"50\" cy=\"50\" r=\"50\"></circle>\r\n            </svg>\r\n          </gmp-advanced-marker>`;\r\n    }\r\n    return nothing;\r\n  }\r\n\r\n  private renderMapMarker(listing: InternalListing) {\r\n    // Pick a z-index to have the marker on top of the Route Overview.\r\n    const zIndex = 100;\r\n\r\n    const clickHandler = () => {\r\n      this.selectLocation(listing);\r\n      const li = listing.listingElement;\r\n      if (li) {\r\n        li.scrollIntoView({behavior: 'smooth', block: 'nearest'});\r\n      }\r\n    };\r\n    return html`\r\n        <gmp-advanced-marker\r\n            .position=${listing.position}\r\n            .title=${listing.title}\r\n            .zIndex=${zIndex}\r\n            gmp-clickable @gmp-click=${clickHandler}></gmp-advanced-marker>`;\r\n  }\r\n\r\n  private renderMapDirections() {\r\n    const originLatLng = this.searchLocation?.location;\r\n    const destinationLatLng = this.selectedListing?.position;\r\n    if (this.featureSet === FeatureSet.ADVANCED && originLatLng &&\r\n        destinationLatLng) {\r\n      // clang-format off\r\n      return html`\r\n      <gmpx-route-overview no-pin\r\n          .originLatLng=${originLatLng}\r\n          .destinationLatLng=${destinationLatLng}>\r\n      </gmpx-route-overview>`;\r\n      // clang-format on\r\n    }\r\n    return nothing;\r\n  }\r\n\r\n  private renderMapPanel() {\r\n    // clang-format off\r\n    return html`\r\n        <gmp-map slot=\"main\" id=\"main-map\" .mapId=${this.mapId ?? nothing}>\r\n          ${this.renderMapDirections()}\r\n          ${repeat(\r\n              this.internalListings,\r\n              (x) => x.uniqueKey,\r\n              (x) => this.renderMapMarker(x))}\r\n          ${this.renderSearchMarker()}\r\n        </gmp-map>`;\r\n    // clang-format on\r\n  }\r\n}\r\n"]}