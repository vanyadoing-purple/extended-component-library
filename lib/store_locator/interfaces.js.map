{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../src/store_locator/interfaces.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAMH,kDAAkD;AAClD,iCAAiC;AACjC,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,QAAQ,EAAE,UAAU;IACpB,YAAY,EAAE,cAAc;IAC5B,KAAK,EAAE,OAAO;CACN,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport type {LatLng, LatLngLiteral, PlaceResult} from '../utils/googlemaps_types.js';\r\n\r\ntype ValuesOf<T> = T[keyof T];\r\n\r\n/** Capabilities for a Store Locator component. */\r\n// @ts-ignore:enforce-name-casing\r\nexport const FeatureSet = {\r\n  ADVANCED: 'advanced',\r\n  INTERMEDIATE: 'intermediate',\r\n  BASIC: 'basic'\r\n} as const;\r\nexport type FeatureSet = ValuesOf<typeof FeatureSet>;\r\n\r\n/**\r\n * Defines an individual location (store, business, etc) to be displayed in\r\n * `<gmpx-store-locator>`.\r\n */\r\nexport declare interface StoreLocatorListing {\r\n  /** Name of the location or store */\r\n  title: string;\r\n\r\n  /** Address lines, used when displaying the list. */\r\n  addressLines?: string[];\r\n\r\n  /** Geographic coordinates of the location */\r\n  position: LatLng|LatLngLiteral;\r\n\r\n  /** Place ID for this location, used to retrieve additional details */\r\n  placeId?: string;\r\n\r\n  /** Optional list of additional actions to display with each location */\r\n  actions?: StoreLocatorAction[];\r\n}\r\n\r\n/** Defines an action button for a `StoreLocatorListing`. */\r\nexport declare interface StoreLocatorAction {\r\n  /** Button label for this action */\r\n  label: string;\r\n\r\n  /**\r\n   * URI that will be opened in a new tab. If unspecified, it is\r\n   * up to the client code to implement behavior on click.\r\n   */\r\n  defaultUri?: string;\r\n}\r\n\r\n/**\r\n * Internal data structure to augment a `StoreLocatorListing` with additional\r\n * information.\r\n */\r\nexport interface InternalListing extends StoreLocatorListing {\r\n  /** Key for Lit to use when identifying a listing element. */\r\n  uniqueKey: string;\r\n\r\n  /**\r\n   * Listing expressed as a `google.maps.PlaceResult`, used with the Place\r\n   * Data Provider.\r\n   */\r\n  placeResult: PlaceResult;\r\n\r\n  /** Reference to the `<li>` DOM element for this listing in the left panel. */\r\n  listingElement?: Element;\r\n}\r\n\r\n/** A single action button as represented in Quick Builder Locator Plus. */\r\nexport declare interface QuickBuilderAction {\r\n  label?: string;\r\n  defaultUrl?: string;\r\n}\r\n\r\n/** A single listing as represented in Quick Builder Locator Plus. */\r\nexport declare interface QuickBuilderLocation {\r\n  title?: string;\r\n  address1?: string;\r\n  address2?: string;\r\n  coords?: LatLngLiteral;\r\n  placeId?: string;\r\n  actions?: QuickBuilderAction[];\r\n}\r\n\r\n/** Capabilities schema used by Quick Builder Locator Plus. */\r\nexport declare interface QuickBuilderCapabilities {\r\n  input?: boolean;\r\n  autocomplete?: boolean;\r\n  directions?: boolean;\r\n  distanceMatrix?: boolean;\r\n  details?: boolean;\r\n  actions?: boolean;\r\n}\r\n\r\n/** Configuration schema used by Quick Builder Locator Plus. */\r\nexport declare interface QuickBuilderConfiguration {\r\n  locations?: QuickBuilderLocation[];\r\n  mapOptions?: Partial<google.maps.MapOptions>;\r\n  mapsApiKey?: string;\r\n  capabilities?: QuickBuilderCapabilities;\r\n}\r\n"]}