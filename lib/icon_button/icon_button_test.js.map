{"version":3,"file":"icon_button_test.js","sourceRoot":"","sources":["../../src/icon_button/icon_button_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, TemplateResult} from 'lit';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\nimport {getDeepActiveElement} from '../utils/deep_element_access.js';\r\n\r\nimport {IconButton} from './icon_button.js';\r\n\r\ndescribe('IconButton', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(buttonHTML: TemplateResult): Promise<IconButton> {\r\n    const root = env.render(buttonHTML);\r\n\r\n    await env.waitForStability();\r\n\r\n    return root.querySelector<IconButton>('gmpx-icon-button')!;\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-icon-button');\r\n    expect(el).toBeInstanceOf(IconButton);\r\n  });\r\n\r\n  it('contains a <button> element when href is not specified', async () => {\r\n    const el = await prepareState(html`\r\n      <gmpx-icon-button aria-haspopup=\"menu\" aria-label=\"enter\">\r\n      </gmpx-icon-button>\r\n    `);\r\n\r\n    const button = el.renderRoot.querySelector('button');\r\n    expect(button).toBeDefined();\r\n    expect(button!.getAttribute('aria-haspopup')).toBe('menu');\r\n    expect(button!.getAttribute('aria-label')).toBe('enter');\r\n    expect(el.renderRoot.querySelector('a')).toBeNull();\r\n  });\r\n\r\n  it('contains an <a> element when href is specified', async () => {\r\n    const el = await prepareState(html`\r\n      <gmpx-icon-button aria-label=\"enter\" href=\"https://some.url/\">\r\n      </gmpx-icon-button>\r\n    `);\r\n\r\n    const a = el.renderRoot.querySelector('a');\r\n    expect(a).toBeDefined();\r\n    expect(a!.getAttribute('aria-label')).toBe('enter');\r\n    expect(a!.href).toBe('https://some.url/');\r\n    expect(a!.target).toBe('_blank');\r\n    expect(el.renderRoot.querySelector('button')).toBeNull();\r\n  });\r\n\r\n  it('delegates focus to shadow DOM element on focus()', async () => {\r\n    const el = await prepareState(html`<gmpx-icon-button></gmpx-icon-button>`);\r\n\r\n    el.focus();\r\n\r\n    const container = el.renderRoot.querySelector('.container');\r\n    expect(container).toBeDefined();\r\n    expect(getDeepActiveElement()).toBe(container);\r\n  });\r\n\r\n  it('shows add icon by default when there is no button label', async () => {\r\n    const el = await prepareState(html`<gmpx-icon-button></gmpx-icon-button>`);\r\n\r\n    const icon = el.renderRoot.querySelector('.icon');\r\n    expect(icon!.textContent!.trim()).toBe('add');\r\n  });\r\n\r\n  it('shows no icon when unspecified and there is button label', async () => {\r\n    const el = await prepareState(html`\r\n      <gmpx-icon-button>Some text</gmpx-icon-button>\r\n    `);\r\n\r\n    expect(el.renderRoot.querySelector('.icon')).toBeNull();\r\n  });\r\n\r\n  it('shows add icon by default in condensed layout with label', async () => {\r\n    const el = await prepareState(html`\r\n      <gmpx-icon-button condensed>Some text</gmpx-icon-button>\r\n    `);\r\n\r\n    const icon = el.renderRoot.querySelector('.icon');\r\n    expect(icon!.textContent!.trim()).toBe('add');\r\n  });\r\n\r\n  it('logs error and resets when variant is set to invalid value', async () => {\r\n    const consoleErrorSpy = spyOn(console, 'error');\r\n    const el = await prepareState(html`<gmpx-icon-button></gmpx-icon-button>`);\r\n    el.variant = 'foo' as IconButton['variant'];\r\n    await env.waitForStability();\r\n\r\n    expect(consoleErrorSpy)\r\n        .toHaveBeenCalledWith(\r\n            '<gmpx-icon-button>: ' +\r\n            'Value \"foo\" for attribute \"variant\" is invalid. Acceptable ' +\r\n            'choices are \"outlined\", \"filled\".');\r\n    expect(el.variant).toBe('outlined');\r\n    expect(el.getAttribute('variant')).toBe('outlined');\r\n  });\r\n\r\n  it('sets role=\"none\" on the host when aria-label is present', async () => {\r\n    const el = await prepareState(html`\r\n      <gmpx-icon-button aria-label=\"enter\">\r\n      </gmpx-icon-button>\r\n    `);\r\n\r\n    expect(el.role).toBe('none');\r\n  });\r\n});\r\n"]}