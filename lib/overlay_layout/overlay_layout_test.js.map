{"version":3,"file":"overlay_layout_test.js","sourceRoot":"","sources":["../../src/overlay_layout/overlay_layout_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html} from 'lit';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\n\r\nimport {OverlayLayout} from './overlay_layout.js';\r\n\r\ndescribe('OverlayLayout', () => {\r\n  describe('unit tests', () => {\r\n    const env = new Environment();\r\n\r\n    async function prepareState(): Promise<{\r\n      overlayLayout: OverlayLayout; mainButton: HTMLButtonElement;\r\n      overlayButton: HTMLButtonElement;\r\n      outsideButton: HTMLButtonElement;\r\n    }> {\r\n      const root = env.render(html`\r\n        <gmpx-overlay-layout>\r\n          <div slot=\"main\" class=\"main\">\r\n            <button></button>\r\n          </div>\r\n          <div slot=\"overlay\" class=\"overlay\">\r\n            <button autofocus></button>\r\n          </div>\r\n        </gmpx-overlay-layout>\r\n        <button class=\"outside\"></button>\r\n      `);\r\n\r\n      await env.waitForStability();\r\n\r\n      return {\r\n        overlayLayout: root.querySelector('gmpx-overlay-layout')!,\r\n        mainButton: root.querySelector('.main button')!,\r\n        overlayButton: root.querySelector('.overlay button')!,\r\n        outsideButton: root.querySelector('button.outside')!,\r\n      };\r\n    }\r\n\r\n    it('is defined', () => {\r\n      const el = document.createElement('gmpx-overlay-layout');\r\n      expect(el).toBeInstanceOf(OverlayLayout);\r\n    });\r\n\r\n    it('logs warning when a child is in the default slot', async () => {\r\n      const consoleWarnSpy = spyOn(console, 'warn');\r\n\r\n      const root = env.render(html`\r\n        <gmpx-overlay-layout>\r\n          <div id=\"invalid\"></div>\r\n        </gmpx-overlay-layout>\r\n      `);\r\n      await env.waitForStability();\r\n\r\n      const invalidChild = root.querySelector<HTMLDivElement>('#invalid')!;\r\n      expect(consoleWarnSpy)\r\n          .toHaveBeenCalledOnceWith(\r\n              '<gmpx-overlay-layout>: ' +\r\n                  'Detected child element in unsupported default slot. ' +\r\n                  'This component supports the following slots: ' +\r\n                  '\"main\", \"overlay\".',\r\n              invalidChild);\r\n    });\r\n\r\n    it('does not log warning when no child is in the default slot',\r\n       async () => {\r\n         const consoleWarnSpy = spyOn(console, 'warn');\r\n\r\n         await prepareState();\r\n\r\n         expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n       });\r\n\r\n    it('doesn\\'t set focus if no element is focused', async () => {\r\n      const {overlayLayout} = await prepareState();\r\n\r\n      await overlayLayout.showOverlay();\r\n      await overlayLayout.hideOverlay();\r\n\r\n      expect(document.activeElement).toBe(document.body);\r\n    });\r\n\r\n    it('doesn\\'t set focus if focus is outside the panel', async () => {\r\n      const {overlayLayout, outsideButton} = await prepareState();\r\n      outsideButton.focus();\r\n\r\n      await overlayLayout.showOverlay();\r\n      await overlayLayout.hideOverlay();\r\n\r\n      expect(document.activeElement).toBe(outsideButton);\r\n    });\r\n\r\n    it('moves focus from main content to the autofocus element', async () => {\r\n      const {overlayLayout, mainButton, overlayButton} = await prepareState();\r\n      mainButton.focus();\r\n\r\n      await overlayLayout.showOverlay();\r\n\r\n      expect(document.activeElement).toBe(overlayButton);\r\n    });\r\n\r\n    it('saves and restores focus in the main content', async () => {\r\n      const {overlayLayout, mainButton} = await prepareState();\r\n      mainButton.focus();\r\n\r\n      await overlayLayout.showOverlay();\r\n      await overlayLayout.hideOverlay();\r\n\r\n      expect(document.activeElement).toBe(mainButton);\r\n    });\r\n\r\n    it('hides on an escape keydown inside the overlay', async () => {\r\n      const {overlayLayout, overlayButton} = await prepareState();\r\n      spyOn(overlayLayout, 'hideOverlay');\r\n\r\n      await overlayLayout.showOverlay();\r\n      // In actual usage, the keydown event target will be the active element.\r\n      // So this simulates what happens when you press escape with focus inside\r\n      // the overlay.\r\n      overlayButton.dispatchEvent(\r\n          new KeyboardEvent('keydown', {'key': 'Escape', 'bubbles': true}));\r\n\r\n      expect(overlayLayout.hideOverlay).toHaveBeenCalledOnceWith();\r\n    });\r\n\r\n    it('does not hide on an escape keydown outside the overlay', async () => {\r\n      const {overlayLayout, outsideButton} = await prepareState();\r\n      spyOn(overlayLayout, 'hideOverlay');\r\n\r\n      await overlayLayout.showOverlay();\r\n      outsideButton.dispatchEvent(\r\n          new KeyboardEvent('keydown', {'key': 'Escape', 'bubbles': true}));\r\n\r\n      expect(overlayLayout.hideOverlay).not.toHaveBeenCalled();\r\n    });\r\n  });\r\n});\r\n"]}