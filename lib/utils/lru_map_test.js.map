{"version":3,"file":"lru_map_test.js","sourceRoot":"","sources":["../../src/utils/lru_map_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {LRUMap} from './lru_map.js';\r\n\r\ndescribe('LRUMap', () => {\r\n  it(`has a value that was set`, () => {\r\n    const m = new LRUMap<string, string>(10);\r\n    m.set('key', 'val');\r\n    expect(m.has('key')).toBeTrue();\r\n  });\r\n\r\n  it(`gets a value that was set`, () => {\r\n    const m = new LRUMap<string, string>(10);\r\n    m.set('key', 'val');\r\n    expect(m.get('key')).toBe('val');\r\n  });\r\n\r\n  it(`doesn't add anything with capacity 0`, () => {\r\n    const m = new LRUMap<string, string>(0);\r\n    m.set('key', 'val');\r\n    expect(m.get('key')).toBeUndefined();\r\n  });\r\n\r\n  it(`evicts the LRU entry after insertions`, () => {\r\n    const m = new LRUMap<string, number>(2);\r\n    m.set('a', 1);\r\n    m.set('b', 2);\r\n    m.set('c', 3);\r\n    expect(m.has('a')).toBeFalse();\r\n    expect(m.has('b')).toBeTrue();\r\n  });\r\n\r\n  it(`keeps an entry that was just accessed with \"has\"`, () => {\r\n    const m = new LRUMap<string, number>(2);\r\n    m.set('a', 1);\r\n    m.set('b', 2);\r\n    m.has('a');\r\n    m.set('c', 3);\r\n    expect(m.has('a')).toBeTrue();\r\n    expect(m.has('b')).toBeFalse();\r\n  });\r\n\r\n  it(`keeps an entry that was just accessed with \"get\"`, () => {\r\n    const m = new LRUMap<string, number>(2);\r\n    m.set('a', 1);\r\n    m.set('b', 2);\r\n    m.get('a');\r\n    m.set('c', 3);\r\n    expect(m.has('a')).toBeTrue();\r\n    expect(m.has('b')).toBeFalse();\r\n  });\r\n\r\n  it(`keeps an entry that was just reassigned with \"set\"`, () => {\r\n    const m = new LRUMap<string, number>(2);\r\n    m.set('a', 1);\r\n    m.set('b', 2);\r\n    m.set('a', 5);\r\n    m.set('c', 3);\r\n    expect(m.has('a')).toBeTrue();\r\n    expect(m.has('b')).toBeFalse();\r\n  });\r\n\r\n  it(`deletes a value that was set`, () => {\r\n    const m = new LRUMap<string, number>(2);\r\n    m.set('a', 1);\r\n    m.delete('a');\r\n    expect(m.has('a')).toBeFalse();\r\n  });\r\n});\r\n"]}