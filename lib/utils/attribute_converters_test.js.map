{"version":3,"file":"attribute_converters_test.js","sourceRoot":"","sources":["../../src/utils/attribute_converters_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {html, LitElement} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {ifDefined} from 'lit/directives/if-defined.js';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\n\r\nimport {LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER, STRING_ARRAY_ATTRIBUTE_CONVERTER} from './attribute_converters.js';\r\n\r\ndescribe('LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER', () => {\r\n  const env = new Environment();\r\n\r\n  @customElement('gmpx-test-lat-lng-attr-converter')\r\n  class TestLatLngAttrConverter extends LitElement {\r\n    @property({\r\n      converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\r\n      reflect: true,\r\n    })\r\n    testprop?: google.maps.LatLngLiteral;\r\n  }\r\n\r\n  async function prepareState(attrValue?: string):\r\n      Promise<TestLatLngAttrConverter> {\r\n    const root = env.render(html`\r\n      <gmpx-test-lat-lng-attr-converter testprop=${ifDefined(attrValue)}>\r\n      </gmpx-test-lat-lng-attr-converter>\r\n    `);\r\n\r\n    await env.waitForStability();\r\n\r\n    return root.querySelector<TestLatLngAttrConverter>(\r\n        'gmpx-test-lat-lng-attr-converter')!;\r\n  }\r\n\r\n  const attrsToProps = [\r\n    {attr: '12.34,-56.78', prop: {lat: 12.34, lng: -56.78}},\r\n    {attr: '  12.34,  -56.78  ', prop: {lat: 12.34, lng: -56.78}},\r\n    {attr: '12.34,-56.78,9', prop: {lat: 12.34, lng: -56.78}},\r\n    {attr: '', prop: {lat: 0, lng: 0}},\r\n    {attr: 'invalid value', prop: {lat: 0, lng: 0}},\r\n    {attr: '12.34', prop: {lat: 12.34, lng: 0}},\r\n    {attr: ',-56.78', prop: {lat: 0, lng: -56.78}},\r\n  ];\r\n  attrsToProps.forEach(({attr, prop}) => {\r\n    it(`converts attribute \"${attr}\" to property`, async () => {\r\n      const el = await prepareState(attr);\r\n\r\n      expect(el.testprop).toEqual(prop);\r\n    });\r\n  });\r\n\r\n  it('sets property to undefined when attribute is removed', async () => {\r\n    const el = await prepareState('12.34,-56.78');\r\n\r\n    el.removeAttribute('testprop');\r\n\r\n    expect(el.testprop).toBeUndefined();\r\n  });\r\n\r\n  it('converts property to attribute', async () => {\r\n    const el = await prepareState();\r\n\r\n    el.testprop = {lat: 12.34, lng: -56.78};\r\n    await env.waitForStability();\r\n\r\n    expect(el.getAttribute('testprop')).toBe('12.34,-56.78');\r\n  });\r\n\r\n  it('removes attribute when property is set to undefined', async () => {\r\n    const el = await prepareState('12.34,-56.78');\r\n\r\n    el.testprop = undefined;\r\n    await env.waitForStability();\r\n\r\n    expect(el.hasAttribute('testprop')).toBeFalse();\r\n  });\r\n});\r\n\r\ndescribe('STRING_ARRAY_ATTRIBUTE_CONVERTER', () => {\r\n  const env = new Environment();\r\n\r\n  @customElement('gmpx-test-string-array-attr-converter')\r\n  class TestStringArrayAttrConverter extends LitElement {\r\n    @property({\r\n      converter: STRING_ARRAY_ATTRIBUTE_CONVERTER,\r\n      reflect: true,\r\n    })\r\n    testprop?: string[];\r\n  }\r\n\r\n  async function prepareState(attrValue?: string):\r\n      Promise<TestStringArrayAttrConverter> {\r\n    const root = env.render(html`\r\n      <gmpx-test-string-array-attr-converter testprop=${ifDefined(attrValue)}>\r\n      </gmpx-test-string-array-attr-converter>\r\n    `);\r\n\r\n    await env.waitForStability();\r\n\r\n    return root.querySelector<TestStringArrayAttrConverter>(\r\n        'gmpx-test-string-array-attr-converter')!;\r\n  }\r\n\r\n  const attrsToProps = [\r\n    {attr: '', prop: []},\r\n    {attr: 'foo', prop: ['foo']},\r\n    {attr: 'foo bar baz', prop: ['foo', 'bar', 'baz']},\r\n    {attr: '  foo  bar  ', prop: ['foo', 'bar']},\r\n  ];\r\n  attrsToProps.forEach(({attr, prop}) => {\r\n    it(`converts attribute \"${attr}\" to property`, async () => {\r\n      const el = await prepareState(attr);\r\n\r\n      expect(el.testprop).toEqual(prop);\r\n    });\r\n  });\r\n\r\n  it('sets property to undefined when attribute is removed', async () => {\r\n    const el = await prepareState('foo');\r\n\r\n    el.removeAttribute('testprop');\r\n\r\n    expect(el.testprop).toBeUndefined();\r\n  });\r\n\r\n  const propsToAttrs = [\r\n    {prop: [], attr: ''},\r\n    {prop: ['foo'], attr: 'foo'},\r\n    {prop: ['foo', 'bar', 'baz'], attr: 'foo bar baz'},\r\n  ];\r\n  propsToAttrs.forEach(({prop, attr}) => {\r\n    it(`converts property [${prop}] to attribute`, async () => {\r\n      const el = await prepareState(attr);\r\n\r\n      expect(el.getAttribute('testprop')).toBe(attr);\r\n    });\r\n  });\r\n\r\n  it('removes attribute when property is set to undefined', async () => {\r\n    const el = await prepareState('foo');\r\n\r\n    el.testprop = undefined;\r\n    await env.waitForStability();\r\n\r\n    expect(el.hasAttribute('testprop')).toBeFalse();\r\n  });\r\n});\r\n"]}