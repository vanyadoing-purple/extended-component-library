{"version":3,"file":"deferred_test.js","sourceRoot":"","sources":["../../src/utils/deferred_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,mCAAmC;AAEnC,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvC,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAU,CAAC;QAExC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAE9B,MAAM,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAU,CAAC;QACxC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;QAErC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEvB,MAAM,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {Deferred} from './deferred.js';\r\n\r\ndescribe('Deferred', () => {\r\n  it('returns value when deferred promise is resolved', async () => {\r\n    const deferred = new Deferred<string>();\r\n\r\n    deferred.resolve('The Value');\r\n\r\n    await expectAsync(deferred.promise).toBeResolvedTo('The Value');\r\n  });\r\n\r\n  it('throws error when deferred promise is rejected', async () => {\r\n    const deferred = new Deferred<string>();\r\n    const error = new Error('The Error');\r\n\r\n    deferred.reject(error);\r\n\r\n    await expectAsync(deferred.promise).toBeRejectedWith(error);\r\n  });\r\n});\r\n"]}