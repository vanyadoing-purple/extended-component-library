{"version":3,"file":"place_utils_test.js","sourceRoot":"","sources":["../../src/utils/place_utils_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {render} from 'lit';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\nimport {FakeLatLng} from '../testing/fake_lat_lng.js';\r\nimport {makeFakePlace, SAMPLE_FAKE_PLACE, SAMPLE_FAKE_PLACE_RESULT} from '../testing/fake_place.js';\r\n\r\nimport type {PlaceResult} from './googlemaps_types.js';\r\nimport {isPlaceResult, makePlaceFromPlaceResult, makeWaypoint, numericToPriceLevel, priceLevelToNumeric, renderAttribution} from './place_utils.js';\r\n\r\ntype PriceLevel = google.maps.places.PriceLevel;\r\n\r\ndescribe('isPlaceResult', () => {\r\n  it('says that the empty object is a PlaceResult', () => {\r\n    expect(isPlaceResult({})).toBe(true);\r\n  });\r\n\r\n  it('says that a basic PlaceResult is a PlaceResult', () => {\r\n    const placeResult: PlaceResult = {place_id: 'some_id', name: 'Name'};\r\n    expect(isPlaceResult(placeResult)).toBe(true);\r\n  });\r\n\r\n  it('says that a fake Place is not a PlaceResult', () => {\r\n    const fakePlace = makeFakePlace({id: 'some_id', displayName: 'Name'});\r\n    expect(isPlaceResult(fakePlace)).toBe(false);\r\n  });\r\n});\r\n\r\ndescribe('priceLevelToNumeric', () => {\r\n  it('converts all price levels', () => {\r\n    expect(priceLevelToNumeric('FREE' as PriceLevel)).toEqual(0);\r\n    expect(priceLevelToNumeric('INEXPENSIVE' as PriceLevel)).toEqual(1);\r\n    expect(priceLevelToNumeric('MODERATE' as PriceLevel)).toEqual(2);\r\n    expect(priceLevelToNumeric('EXPENSIVE' as PriceLevel)).toEqual(3);\r\n    expect(priceLevelToNumeric('VERY_EXPENSIVE' as PriceLevel)).toEqual(4);\r\n  });\r\n\r\n  it('returns numbers unchanged', () => {\r\n    expect(priceLevelToNumeric(3)).toEqual(3);\r\n  });\r\n\r\n  it('returns null on invalid values', () => {\r\n    expect(priceLevelToNumeric('INVALID' as PriceLevel)).toEqual(null);\r\n  });\r\n});\r\n\r\ndescribe('numericToPriceLevel', () => {\r\n  it('converts all valid numbers', () => {\r\n    expect(numericToPriceLevel(0)).toEqual('FREE' as PriceLevel);\r\n    expect(numericToPriceLevel(1)).toEqual('INEXPENSIVE' as PriceLevel);\r\n    expect(numericToPriceLevel(2)).toEqual('MODERATE' as PriceLevel);\r\n    expect(numericToPriceLevel(3)).toEqual('EXPENSIVE' as PriceLevel);\r\n    expect(numericToPriceLevel(4)).toEqual('VERY_EXPENSIVE' as PriceLevel);\r\n  });\r\n\r\n  it('returns enum values unchanged', () => {\r\n    expect(numericToPriceLevel('FREE' as PriceLevel))\r\n        .toEqual('FREE' as PriceLevel);\r\n  });\r\n\r\n  it('returns null on invalid numbers', () => {\r\n    expect(numericToPriceLevel(5)).toEqual(null);\r\n  });\r\n});\r\n\r\ndescribe('makeWaypoint', () => {\r\n  it('makes waypoint from a LatLng object', () => {\r\n    expect(makeWaypoint(new FakeLatLng(-12.34, 56.78))).toEqual({\r\n      location: {lat: -12.34, lng: 56.78},\r\n    });\r\n  });\r\n\r\n  it('makes waypoint from a LatLngLiteral object', () => {\r\n    expect(makeWaypoint({lat: -12.34, lng: 56.78})).toEqual({\r\n      location: {lat: -12.34, lng: 56.78},\r\n    });\r\n  });\r\n\r\n  it('makes waypoint from a Place object with Place ID only', () => {\r\n    const place = makeFakePlace({id: 'FAKE_PLACE_ID'});\r\n    expect(makeWaypoint(place)).toEqual({\r\n      location: undefined,\r\n      placeId: 'FAKE_PLACE_ID',\r\n      query: undefined,\r\n    });\r\n  });\r\n\r\n  it('makes waypoint from a Place object with location and address', () => {\r\n    const place = makeFakePlace({\r\n      displayName: 'Fake Place',\r\n      formattedAddress: '123 Main Street',\r\n      id: 'FAKE_PLACE_ID',\r\n      location: new FakeLatLng(-12.34, 56.78),\r\n    });\r\n    expect(makeWaypoint(place)).toEqual({\r\n      location: {lat: -12.34, lng: 56.78},\r\n      placeId: 'FAKE_PLACE_ID',\r\n      query: '123 Main Street',\r\n    });\r\n  });\r\n\r\n  it('makes waypoint from a Place object with location and name', () => {\r\n    const place = makeFakePlace({\r\n      displayName: 'Fake Place',\r\n      id: 'FAKE_PLACE_ID',\r\n      location: new FakeLatLng(-12.34, 56.78),\r\n    });\r\n    expect(makeWaypoint(place)).toEqual({\r\n      location: {lat: -12.34, lng: 56.78},\r\n      placeId: 'FAKE_PLACE_ID',\r\n      query: 'Fake Place',\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('renderAttribution', () => {\r\n  it('renders <a> tag when URL is defined', () => {\r\n    render(\r\n        renderAttribution('Provider 1', 'https://www.someprovider.com/1'),\r\n        document.body);\r\n\r\n    const anchor = document.body.querySelector('a');\r\n    expect(anchor).toBeDefined();\r\n    expect(anchor!.href).toEqual('https://www.someprovider.com/1');\r\n    expect(anchor!.target).toEqual('_blank');\r\n    expect(anchor!.textContent).toEqual('Provider 1');\r\n  });\r\n\r\n  it('renders <span> tag when URL is null', () => {\r\n    render(renderAttribution('Provider 2', null), document.body);\r\n\r\n    const span = document.body.querySelector('span');\r\n    expect(span).toBeDefined();\r\n    expect(span!.textContent).toEqual('Provider 2');\r\n  });\r\n});\r\n\r\ndescribe('makePlaceFromPlaceResult', () => {\r\n  const env = new Environment();\r\n\r\n  beforeEach(async () => {\r\n    await env.waitForStability();\r\n  });\r\n\r\n  it('copies all equivalent fields from PlaceResult to Place', async () => {\r\n    const place = await makePlaceFromPlaceResult(SAMPLE_FAKE_PLACE_RESULT);\r\n\r\n    expect(place.addressComponents)\r\n        .toEqual(SAMPLE_FAKE_PLACE.addressComponents);\r\n    expect(place.adrFormatAddress).toEqual(SAMPLE_FAKE_PLACE.adrFormatAddress);\r\n    expect(place.attributions).toEqual(SAMPLE_FAKE_PLACE.attributions);\r\n    expect(place.businessStatus).toEqual(SAMPLE_FAKE_PLACE.businessStatus);\r\n    expect(place.displayName).toEqual(SAMPLE_FAKE_PLACE.displayName);\r\n    expect(place.googleMapsURI).toEqual(SAMPLE_FAKE_PLACE.googleMapsURI);\r\n    expect(place.formattedAddress).toEqual(SAMPLE_FAKE_PLACE.formattedAddress);\r\n    expect(place.iconBackgroundColor)\r\n        .toEqual(SAMPLE_FAKE_PLACE.iconBackgroundColor);\r\n    expect(place.id).toEqual(SAMPLE_FAKE_PLACE.id);\r\n    expect(place.internationalPhoneNumber)\r\n        .toEqual(SAMPLE_FAKE_PLACE.internationalPhoneNumber);\r\n    expect(place.location).toEqual(SAMPLE_FAKE_PLACE.location);\r\n    expect(place.nationalPhoneNumber)\r\n        .toEqual(SAMPLE_FAKE_PLACE.nationalPhoneNumber);\r\n    expect(place.plusCode).toEqual(SAMPLE_FAKE_PLACE.plusCode);\r\n    expect(place.priceLevel).toEqual(SAMPLE_FAKE_PLACE.priceLevel);\r\n    expect(place.rating).toEqual(SAMPLE_FAKE_PLACE.rating);\r\n    expect(place.svgIconMaskURI).toEqual(SAMPLE_FAKE_PLACE.svgIconMaskURI);\r\n    expect(place.types).toEqual(SAMPLE_FAKE_PLACE.types);\r\n    expect(place.userRatingCount).toEqual(SAMPLE_FAKE_PLACE.userRatingCount);\r\n    expect(place.utcOffsetMinutes).toEqual(SAMPLE_FAKE_PLACE.utcOffsetMinutes);\r\n    expect(place.websiteURI).toEqual(SAMPLE_FAKE_PLACE.websiteURI);\r\n\r\n    expect(place.reviews!.length).toEqual(SAMPLE_FAKE_PLACE.reviews!.length);\r\n    SAMPLE_FAKE_PLACE.reviews!.forEach((expectedReview, i) => {\r\n      const review = place.reviews![i];\r\n      expect(review.authorAttribution)\r\n          .toEqual(expectedReview.authorAttribution);\r\n      expect(review).toEqual(expectedReview);\r\n    });\r\n\r\n    expect(place.photos!.length).toEqual(SAMPLE_FAKE_PLACE.photos!.length);\r\n    SAMPLE_FAKE_PLACE.photos!.forEach((expectedPhoto, i) => {\r\n      const photo = place.photos![i];\r\n      expect(photo.authorAttributions)\r\n          .toEqual(expectedPhoto.authorAttributions);\r\n      expect(photo.heightPx).toEqual(expectedPhoto.heightPx);\r\n      expect(photo.widthPx).toEqual(expectedPhoto.widthPx);\r\n      expect(photo.getURI()).toEqual(expectedPhoto.getURI());\r\n    });\r\n  });\r\n\r\n  it('treats fields missing from PlaceResult as undefined', async () => {\r\n    const place =\r\n        await makePlaceFromPlaceResult({geometry: {}, photos: undefined});\r\n\r\n    expect(place.addressComponents).toBeUndefined();\r\n    expect(place.adrFormatAddress).toBeUndefined();\r\n    expect(place.attributions).toBeUndefined();\r\n    expect(place.businessStatus).toBeUndefined();\r\n    expect(place.displayName).toBeUndefined();\r\n    expect(place.googleMapsURI).toBeUndefined();\r\n    expect(place.formattedAddress).toBeUndefined();\r\n    expect(place.hasCurbsidePickup).toBeUndefined();\r\n    expect(place.iconBackgroundColor).toBeUndefined();\r\n    expect(place.id).toBe('PLACE_ID_MISSING');  // Place ID must be non-empty.\r\n    expect(place.internationalPhoneNumber).toBeUndefined();\r\n    expect(place.location).toBeUndefined();\r\n    expect(place.nationalPhoneNumber).toBeUndefined();\r\n    expect(place.plusCode).toBeUndefined();\r\n    expect(place.priceLevel).toBeUndefined();\r\n    expect(place.rating).toBeUndefined();\r\n    expect(place.reviews).toBeUndefined();\r\n    expect(place.servesLunch).toBeUndefined();\r\n    expect(place.types).toBeUndefined();\r\n    expect(place.types).toBeUndefined();\r\n    expect(place.userRatingCount).toBeUndefined();\r\n    expect(place.utcOffsetMinutes).toBeUndefined();\r\n    expect(place.viewport).toBeUndefined();\r\n    expect(place.websiteURI).toBeUndefined();\r\n  });\r\n\r\n  it('fetches only fields that are not defined by PlaceResult', async () => {\r\n    const fetchFieldsSpy = jasmine.createSpy('fetchFields');\r\n    const fakePlacesLibrary = {\r\n      Place: class {\r\n        constructor(options: google.maps.places.PlaceOptions) {\r\n          return makeFakePlace({id: options.id, fetchFields: fetchFieldsSpy});\r\n        }\r\n      },\r\n    };\r\n    env.importLibrarySpy?.and.returnValue(Promise.resolve(fakePlacesLibrary));\r\n    const place = await makePlaceFromPlaceResult(SAMPLE_FAKE_PLACE_RESULT);\r\n\r\n    await place.fetchFields(\r\n        {fields: ['displayName', 'location', 'photos', 'servesLunch']});\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({fields: ['servesLunch']});\r\n  });\r\n\r\n  it('uses the Places Details API when Place doesn\\'t support fetchFields',\r\n     async () => {\r\n       const fetchFieldsSpy =\r\n           jasmine.createSpy('fetchFields')\r\n               .and.rejectWith(new Error(\r\n                   'Place.prototype.fetchFields() is not available, try the beta channel.'));\r\n       const fakeGetDetails =\r\n           (options: google.maps.places.PlaceDetailsRequest,\r\n            callback: (\r\n                a: PlaceResult|null,\r\n                b: google.maps.places.PlacesServiceStatus) => void) => {\r\n             callback(\r\n                 {price_level: 2},\r\n                 'OK' as google.maps.places.PlacesServiceStatus);\r\n           };\r\n       const placeDetailsSpy =\r\n           jasmine.createSpy('placeDetails').and.callFake(fakeGetDetails);\r\n       const fakePlacesLibrary = {\r\n         Place: class {\r\n           constructor(options: google.maps.places.PlaceOptions) {\r\n             return makeFakePlace(\r\n                 {id: options.id, fetchFields: fetchFieldsSpy});\r\n           }\r\n         },\r\n\r\n         PlacesService: class {\r\n           getDetails = placeDetailsSpy;\r\n         }\r\n       };\r\n       env.importLibrarySpy?.and.resolveTo(fakePlacesLibrary);\r\n\r\n       const place = await makePlaceFromPlaceResult(\r\n           {place_id: '123', url: 'http://foo/bar', rating: 3.5});\r\n\r\n       // NOTE: `attributions` -> `html_attributions` should *not* be requested,\r\n       // as the Places Details API considers it an invalid field mask.\r\n       await place.fetchFields(\r\n           {fields: ['rating', 'priceLevel', 'attributions']});\r\n       expect(placeDetailsSpy)\r\n           .toHaveBeenCalledOnceWith(\r\n               {placeId: '123', fields: ['price_level']},\r\n               jasmine.any(Function));\r\n       expect(place.priceLevel)\r\n           .toEqual('MODERATE' as google.maps.places.PriceLevel);\r\n     });\r\n\r\n  it('calls the built-in isOpen method when available on Place', async () => {\r\n    const isOpenSpy = jasmine.createSpy('isOpen').and.resolveTo(true);\r\n    const fakePlacesLibrary = {\r\n      Place: class {\r\n        constructor(options: google.maps.places.PlaceOptions) {\r\n          return makeFakePlace({id: options.id, isOpen: isOpenSpy});\r\n        }\r\n      },\r\n    };\r\n    env.importLibrarySpy?.and.resolveTo(fakePlacesLibrary);\r\n    const place = await makePlaceFromPlaceResult({place_id: '123'});\r\n\r\n    expect(await place.isOpen()).toBe(true);\r\n  });\r\n\r\n  it('calls the utility isOpen function when isOpen() isn\\'t implemented on Place',\r\n     async () => {\r\n       const isOpenSpy = jasmine.createSpy('isOpen').and.rejectWith(new Error(\r\n           'Place.prototype.isOpen() is not available, try the beta channel.'));\r\n       const fakePlacesLibrary = {\r\n         Place: class {\r\n           constructor(options: google.maps.places.PlaceOptions) {\r\n             return makeFakePlace({id: options.id, isOpen: isOpenSpy});\r\n           }\r\n         },\r\n       };\r\n       env.importLibrarySpy?.and.resolveTo(fakePlacesLibrary);\r\n       const place = await makePlaceFromPlaceResult({place_id: '123'});\r\n\r\n       expect(await place.isOpen()).toBe(undefined);\r\n     });\r\n});\r\n"]}