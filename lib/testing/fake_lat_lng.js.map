{"version":3,"file":"fake_lat_lng.js","sourceRoot":"","sources":["../../src/testing/fake_lat_lng.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\ntype LatLng = google.maps.LatLng;\r\ntype LatLngLiteral = google.maps.LatLngLiteral;\r\ntype LatLngBounds = google.maps.LatLngBounds;\r\ntype LatLngBoundsLiteral = google.maps.LatLngBoundsLiteral;\r\n\r\n/**\r\n * A fake `LatLng` class for testing purposes, that does not depend on the\r\n * `google.maps.LatLng` constructor loaded by the API.\r\n */\r\nexport class FakeLatLng implements LatLng {\r\n  constructor(\r\n      private readonly latitude: number,\r\n      private readonly longitude: number,\r\n  ) {}\r\n\r\n  lat(): number {\r\n    return this.latitude;\r\n  }\r\n  lng(): number {\r\n    return this.longitude;\r\n  }\r\n\r\n  equals(other: LatLng): boolean {\r\n    return this.lat() === other.lat() && this.lng() === other.lng();\r\n  }\r\n  toUrlValue(): string {\r\n    throw new Error('toUrlValue is not implemented');\r\n  }\r\n  toJSON(): LatLngLiteral {\r\n    return {'lat': this.latitude, 'lng': this.longitude};\r\n  }\r\n  toString(): string {\r\n    return `(${this.latitude},${this.longitude})`;\r\n  }\r\n}\r\n\r\nfunction isLatLngBoundsLiteral(bounds: LatLngBounds|LatLngBoundsLiteral):\r\n    bounds is LatLngBoundsLiteral {\r\n  return (typeof (bounds as LatLngBoundsLiteral).north === 'number');\r\n}\r\n\r\n/**\r\n * A fake `LatLngBounds` class for testing purposes, that does not depend on the\r\n * `google.maps.LatLngBounds` constructor loaded by the API.\r\n */\r\nexport class FakeLatLngBounds implements LatLngBounds {\r\n  constructor(private readonly boundsLiteral: LatLngBoundsLiteral = {\r\n    north: -90,\r\n    south: 90,\r\n    east: -180,\r\n    west: 180\r\n  }) {}\r\n\r\n  getNorthEast(): LatLng {\r\n    return new FakeLatLng(this.boundsLiteral.north, this.boundsLiteral.east);\r\n  }\r\n  getSouthWest(): LatLng {\r\n    return new FakeLatLng(this.boundsLiteral.south, this.boundsLiteral.west);\r\n  }\r\n  toJSON(): LatLngBoundsLiteral {\r\n    return this.boundsLiteral;\r\n  }\r\n  union(other: LatLngBounds|LatLngBoundsLiteral): LatLngBounds {\r\n    const {north, south, east, west} = this.boundsLiteral;\r\n    const otherLiteral = isLatLngBoundsLiteral(other) ? other : other.toJSON();\r\n    this.boundsLiteral.north = Math.max(north, otherLiteral.north);\r\n    this.boundsLiteral.south = Math.min(south, otherLiteral.south);\r\n    this.boundsLiteral.east = Math.max(east, otherLiteral.east);\r\n    this.boundsLiteral.west = Math.min(west, otherLiteral.west);\r\n    return this;\r\n  }\r\n\r\n  contains(latLng: LatLng|LatLngLiteral): boolean {\r\n    throw new Error('contains is not implemented');\r\n  }\r\n  equals(other: LatLngBounds|LatLngBoundsLiteral): boolean {\r\n    throw new Error('equals is not implemented');\r\n  }\r\n  extend(point: LatLng|LatLngLiteral): LatLngBounds {\r\n    const lat = typeof point.lat === 'function' ? point.lat() : point.lat;\r\n    const lng = typeof point.lng === 'function' ? point.lng() : point.lng;\r\n    return this.union({north: lat, south: lat, east: lng, west: lng});\r\n  }\r\n  getCenter(): LatLng {\r\n    throw new Error('getCenter is not implemented');\r\n  }\r\n  intersects(other: LatLngBounds|LatLngBoundsLiteral): boolean {\r\n    throw new Error('intersects is not implemented');\r\n  }\r\n  isEmpty(): boolean {\r\n    throw new Error('isEmpty is not implemented');\r\n  }\r\n  toSpan(): LatLng {\r\n    throw new Error('toSpan is not implemented');\r\n  }\r\n  toUrlValue(precision?: number): string {\r\n    throw new Error('toUrlValue is not implemented');\r\n  }\r\n}\r\n"]}