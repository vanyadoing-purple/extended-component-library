{"version":3,"file":"fake_route.js","sourceRoot":"","sources":["../../src/testing/fake_route.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,UAAU,EAAE,gBAAgB,EAAC,MAAM,mBAAmB,CAAC;AAM/D,MAAM,gBAAgB,GAAoB;IACxC,MAAM,EAAE,IAAI,gBAAgB,EAAE;IAC9B,UAAU,EAAE,EAAE;IACd,IAAI,EAAE,EAAE;IACR,aAAa,EAAE,EAAE;IACjB,iBAAiB,EAAE,EAAE;IACrB,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE,EAAE;IACZ,cAAc,EAAE,EAAE;CACnB,CAAC;AAEF,MAAM,cAAc,GAAkB;IACpC,WAAW,EAAE,EAAE;IACf,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IAClC,aAAa,EAAE,EAAE;IACjB,cAAc,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IACpC,KAAK,EAAE,EAAE;IACT,mBAAmB,EAAE,EAAE;IACvB,aAAa,EAAE,EAAE;CAClB,CAAC;AAEF,MAAM,eAAe,GAAmB;IACtC,gBAAgB,EAAE,EAAE;IACpB,IAAI,EAAE,EAAE;IACR,YAAY,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IAClC,SAAS,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/B,YAAY,EAAE,EAAE;IAChB,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,EAAE;IACZ,cAAc,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IACpC,WAAW,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IACjC,WAAW,EAAE,SAAmC;CACjD,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,UAAU,aAAa,CAAC,SAAmC,EAAE;IAEjE,OAAO,EAAC,GAAG,gBAAgB,EAAE,GAAG,MAAM,EAAC,CAAC;AAC1C,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,WAAW,CAAC,SAAiC,EAAE;IAE7D,OAAO,EAAC,GAAG,cAAc,EAAE,GAAG,MAAM,EAAC,CAAC;AACxC,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,YAAY,CAAC,SAAkC,EAAE;IAE/D,OAAO,EAAC,GAAG,eAAe,EAAE,GAAG,MAAM,EAAC,CAAC;AACzC,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {FakeLatLng, FakeLatLngBounds} from './fake_lat_lng.js';\r\n\r\ntype DirectionsRoute = google.maps.DirectionsRoute;\r\ntype DirectionsLeg = google.maps.DirectionsLeg;\r\ntype DirectionsStep = google.maps.DirectionsStep;\r\n\r\nconst EMPTY_FAKE_ROUTE: DirectionsRoute = {\r\n  bounds: new FakeLatLngBounds(),\r\n  copyrights: '',\r\n  legs: [],\r\n  overview_path: [],\r\n  overview_polyline: '',\r\n  summary: '',\r\n  warnings: [],\r\n  waypoint_order: [],\r\n};\r\n\r\nconst EMPTY_FAKE_LEG: DirectionsLeg = {\r\n  end_address: '',\r\n  end_location: new FakeLatLng(0, 0),\r\n  start_address: '',\r\n  start_location: new FakeLatLng(0, 0),\r\n  steps: [],\r\n  traffic_speed_entry: [],\r\n  via_waypoints: [],\r\n};\r\n\r\nconst EMPTY_FAKE_STEP: DirectionsStep = {\r\n  encoded_lat_lngs: '',\r\n  path: [],\r\n  end_location: new FakeLatLng(0, 0),\r\n  end_point: new FakeLatLng(0, 0),\r\n  instructions: '',\r\n  lat_lngs: [],\r\n  maneuver: '',\r\n  start_location: new FakeLatLng(0, 0),\r\n  start_point: new FakeLatLng(0, 0),\r\n  travel_mode: 'DRIVING' as google.maps.TravelMode,\r\n};\r\n\r\n/**\r\n * Makes a fake `google.maps.DirectionsRoute` object for testing purposes.\r\n *\r\n * @param fields - An object of fields of the `DirectionsRoute`. Any fields not\r\n *     provided will default to empty strings, empty arrays, or an empty\r\n *     LatLngBounds.\r\n */\r\nexport function makeFakeRoute(fields: Partial<DirectionsRoute> = {}):\r\n    DirectionsRoute {\r\n  return {...EMPTY_FAKE_ROUTE, ...fields};\r\n}\r\n\r\n/**\r\n * Makes a fake `google.maps.DirectionsLeg` object for testing purposes.\r\n *\r\n * @param fields - An object of fields of the `DirectionsLeg`. Any fields not\r\n *     provided will default to empty strings, empty arrays, or the LatLng\r\n *     (0, 0).\r\n */\r\nexport function makeFakeLeg(fields: Partial<DirectionsLeg> = {}):\r\n    DirectionsLeg {\r\n  return {...EMPTY_FAKE_LEG, ...fields};\r\n}\r\n\r\n/**\r\n * Makes a fake `google.maps.DirectionsStep` object for testing purposes.\r\n *\r\n * @param fields - An object of fields of the `DirectionsStep`. Any fields\r\n *     not provided will default to empty strings, empty arrays, the LatLng\r\n *     (0, 0), or the 'DRIVING' travel mode.\r\n */\r\nexport function makeFakeStep(fields: Partial<DirectionsStep> = {}):\r\n    DirectionsStep {\r\n  return {...EMPTY_FAKE_STEP, ...fields};\r\n}\r\n"]}