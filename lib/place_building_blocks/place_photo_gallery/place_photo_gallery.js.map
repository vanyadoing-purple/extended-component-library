{"version":3,"file":"place_photo_gallery.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_photo_gallery/place_photo_gallery.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {css, html} from 'lit';\r\nimport {customElement, property, query, state} from 'lit/decorators.js';\r\nimport {ifDefined} from 'lit/directives/if-defined.js';\r\nimport {map} from 'lit/directives/map.js';\r\nimport {styleMap} from 'lit/directives/style-map.js';\r\nimport {when} from 'lit/directives/when.js';\r\n\r\nimport {GMPX_FONT_CAPTION, GMPX_FONT_SIZE_BASE, GMPX_FONT_TITLE_MEDIUM} from '../../base/common_styles.js';\r\nimport {FocusController} from '../../base/focus_controller.js';\r\nimport {LocalizationController} from '../../base/localization_controller.js';\r\nimport {WebFont, WebFontController} from '../../base/web_font_controller.js';\r\nimport type {AuthorAttribution, Photo, Place} from '../../utils/googlemaps_types.js';\r\nimport {renderAttribution} from '../../utils/place_utils.js';\r\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\r\n\r\n/**\r\n * Maximum width/height of a Place Photo that can be requested, in pixels; see:\r\n * https://developers.google.com/maps/documentation/places/web-service/place-photos#maxheightpx-and-maxwidthpx.\r\n */\r\nconst MAX_PHOTO_SIZE_PX = 4800;\r\n\r\n/** Maximum width/height of a Place Photo to display as tile, in pixels. */\r\nconst MAX_TILE_PHOTO_SIZE_PX = 1200;\r\n\r\n/** Spacing for margins and paddings based on baseline font size. */\r\nconst SPACING_BASE = css`calc(${GMPX_FONT_SIZE_BASE} * 0.5)`;\r\n\r\ninterface FormattedPhoto {\r\n  uri: string;\r\n  tileUri: string;\r\n  attributions: AuthorAttribution[];\r\n}\r\n\r\ninterface TileSize {\r\n  widthPx: number;\r\n  heightPx: number;\r\n}\r\n\r\n/**\r\n * Returns the desired photo size in pixels based on CSS pixels and max size,\r\n * accounting for diff between physical and CSS pixels on current device; see:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio.\r\n */\r\nfunction getPhotoSize(cssPx: number, max: number) {\r\n  const devicePx = Math.ceil(cssPx * window.devicePixelRatio);\r\n  return Math.min(devicePx, max);\r\n}\r\n\r\n/**\r\n * Formats a `google.maps.places.Photo` object for display based on tile size.\r\n *\r\n * If photo is wider relative to its height compared to the tile, then its\r\n * height should be capped at the tile's height; vice versa for tile width.\r\n *\r\n *                                            ┌┄┄┄┄┄┄┄┄┄┄┄┄┐\r\n *                                            ┆            ┆  PHOTO\r\n *    ┌┄┄┄┄┄┌────────────┐┄┄┄┄┄┐              ├────────────┤\r\n *    ┆     │            │     ┆              │            │\r\n *    ┆     │    TILE    │     ┆  PHOTO       │    TILE    │\r\n *    ┆     │            │     ┆              │            │\r\n *    └┄┄┄┄┄└────────────┘┄┄┄┄┄┘              ├────────────┤\r\n *                                            ┆            ┆\r\n *                                            └┄┄┄┄┄┄┄┄┄┄┄┄┘\r\n */\r\nfunction formatPhoto(photo: Photo, tileSize: TileSize): FormattedPhoto {\r\n  const photoSizeRatio = photo.widthPx / photo.heightPx;\r\n  const windowSizeRatio = window.innerWidth / window.innerHeight;\r\n  const tileSizeRatio = tileSize.widthPx / tileSize.heightPx;\r\n\r\n  const lightboxPhotoOptions = photoSizeRatio > windowSizeRatio ?\r\n      {maxHeight: getPhotoSize(window.innerHeight, MAX_PHOTO_SIZE_PX)} :\r\n      {maxWidth: getPhotoSize(window.innerWidth, MAX_PHOTO_SIZE_PX)};\r\n  const tilePhotoOptions = photoSizeRatio > tileSizeRatio ?\r\n      {maxHeight: getPhotoSize(tileSize.heightPx, MAX_TILE_PHOTO_SIZE_PX)} :\r\n      {maxWidth: getPhotoSize(tileSize.widthPx, MAX_TILE_PHOTO_SIZE_PX)};\r\n\r\n  return {\r\n    uri: photo.getURI(lightboxPhotoOptions),\r\n    tileUri: photo.getURI(tilePhotoOptions),\r\n    attributions: photo.authorAttributions,\r\n  };\r\n}\r\n\r\nfunction stopEscapePropagation(event: KeyboardEvent) {\r\n  if (event.key === 'Escape') event.stopPropagation();\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'gmpx-place-photo-gallery': PlacePhotoGallery;\r\n  }\r\n}\r\n\r\n/**\r\n * Component that displays photos of this place as tiles, with a lightbox view\r\n * when a photo is clicked. The lightbox includes proper photo attribution.\r\n *\r\n * @csspart tile - Styles each individual photo tile, including border radius,\r\n * width/height, margin, background color before image is loaded, etc.\r\n * \r\n * @cssproperty [--gmpx-font-family-base] - Font family used for captions in the lightbox.\r\n * @cssproperty [--gmpx-font-family-headings] - Font family of the place title in the lightbox.\r\n * @cssproperty [--gmpx-font-size-base] - Used to scale the component.\r\n */\r\n@customElement('gmpx-place-photo-gallery')\r\nexport class PlacePhotoGallery extends PlaceDataConsumer {\r\n  static override styles = css`\r\n    :host(:not([hidden])) {\r\n      display: block;\r\n    }\r\n\r\n    .container.hide-focus-ring button:focus {\r\n      outline: none;\r\n    }\r\n\r\n    a {\r\n      color: inherit;\r\n    }\r\n\r\n    button {\r\n      background: none;\r\n      border: none;\r\n      color: inherit;\r\n      cursor: pointer;\r\n      padding: 0;\r\n    }\r\n\r\n    button[disabled] {\r\n      cursor: default;\r\n    }\r\n\r\n    [part=\"tile\"] {\r\n      background-color: #f5f5f5;\r\n      background-position: center;\r\n      background-size: cover;\r\n      border-radius: 8px;\r\n      display: inline-block;\r\n      height: 134px;\r\n      width: 142px;\r\n    }\r\n\r\n    /* The dialog element has a default border-width: initial (3px),\r\n       padding: 1em, and max-height/width: calc((100% - 6px) - 2em). We remove\r\n       the border and take the corresponding 6px out of the height/width\r\n       calculation so it still fills the screen. */\r\n    .lightbox {\r\n      border-width: 0;\r\n      color: white;\r\n      height: 100%;\r\n      max-height: calc(100% - 2em);\r\n      max-width: calc(100% - 2em);\r\n      width: 100%;\r\n    }\r\n\r\n    .backdrop {\r\n      background: black;\r\n      inset: 0;\r\n      position: absolute;\r\n    }\r\n\r\n    .photo {\r\n      inset: 0;\r\n      margin: auto;\r\n      max-height: 100%;\r\n      max-width: 100%;\r\n      position: absolute;\r\n    }\r\n\r\n    .icon {\r\n      font-size: calc(${GMPX_FONT_SIZE_BASE} * 2);\r\n      vertical-align: middle;\r\n    }\r\n\r\n    .info-card {\r\n      background: rgba(32, 33, 36, 0.7);\r\n      border-radius: 8px;\r\n      display: flex;\r\n      padding: ${GMPX_FONT_SIZE_BASE};\r\n      position: absolute;\r\n    }\r\n\r\n    .info-card .text-container {\r\n      flex-direction: column;\r\n      padding: 0 ${SPACING_BASE};\r\n    }\r\n\r\n    .info-card .title {\r\n      font: ${GMPX_FONT_TITLE_MEDIUM};\r\n    }\r\n\r\n    .info-card .caption {\r\n      font : ${GMPX_FONT_CAPTION};\r\n    }\r\n\r\n    .nav-controls {\r\n      bottom: ${GMPX_FONT_SIZE_BASE};\r\n      left: 0;\r\n      margin: 0 auto;\r\n      position: absolute;\r\n      right: 0;\r\n      width: fit-content;\r\n    }\r\n\r\n    .nav-controls button {\r\n      background-color: rgba(32, 33, 36, 0.7);\r\n      border-radius: calc(${GMPX_FONT_SIZE_BASE} * 2);\r\n      padding: ${SPACING_BASE};\r\n      margin: ${SPACING_BASE};\r\n    }\r\n\r\n    .nav-controls button[disabled] {\r\n      opacity: 0.5;\r\n    }\r\n  `;\r\n\r\n  /**\r\n   * The maximum number of photos to display as tiles. If undefined, all\r\n   * available photos from the Place object will be displayed.\r\n   *\r\n   * Note that the Places API can fetch up to ten photos of a place.\r\n   */\r\n  @property({attribute: 'max-tiles', reflect: true, type: Number})\r\n  maxTiles?: number;\r\n\r\n  @state() private selectedIndex = 0;\r\n  @state() private tileSize?: TileSize;\r\n\r\n  @query('.container') private readonly containerElement?: HTMLDivElement;\r\n  @query('.lightbox') private readonly lightboxElement?: HTMLDialogElement;\r\n  @query('[part=\"tile\"]') private readonly firstTileElement?: HTMLButtonElement;\r\n\r\n  protected readonly focusController =\r\n      new FocusController(this, (isKeyboardNavigating) => {\r\n        if (isKeyboardNavigating) {\r\n          this.containerElement?.classList.remove('hide-focus-ring');\r\n        } else {\r\n          this.containerElement?.classList.add('hide-focus-ring');\r\n        }\r\n      });\r\n\r\n  protected readonly fontLoader = new WebFontController(\r\n      this, [WebFont.GOOGLE_SANS_TEXT, WebFont.MATERIAL_SYMBOLS_OUTLINED]);\r\n\r\n  private readonly keydownEventListener = ({key}: KeyboardEvent) => {\r\n    if (!this.lightboxElement?.open) return;\r\n    switch (key) {\r\n      case 'ArrowLeft':\r\n        this.isRTL() ? this.navigateToNext() : this.navigateToPrevious();\r\n        break;\r\n      case 'ArrowRight':\r\n        this.isRTL() ? this.navigateToPrevious() : this.navigateToNext();\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  override connectedCallback() {\r\n    super.connectedCallback();\r\n    document.addEventListener('keydown', this.keydownEventListener);\r\n  }\r\n\r\n  override disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    document.removeEventListener('keydown', this.keydownEventListener);\r\n  }\r\n\r\n  protected readonly getMsg = LocalizationController.buildLocalizer(this);\r\n\r\n  protected override render() {\r\n    const photos = this.getFormattedPhotos();\r\n    const selectedPhoto = photos[this.selectedIndex];\r\n    const placeName = this.getPlace()?.displayName;\r\n\r\n    // clang-format off\r\n    const captionCard = html`\r\n      <div class=\"info-card\">\r\n        <button\r\n          aria-label=${this.getMsg('PLACE_PHOTO_BACK_ARIA_LABEL')}\r\n          autofocus\r\n          @click=${this.closeLightbox}\r\n        >\r\n          <span aria-hidden=\"true\" class=\"icon material-symbols-outlined\">\r\n            ${this.isRTL() ? 'arrow_forward' : 'arrow_back'}\r\n          </span>\r\n        </button>\r\n        <div class=\"text-container\">\r\n          ${when(placeName, () => html`<div class=\"title\">${placeName}</div>`)}\r\n          ${when(selectedPhoto?.attributions.length, () => html`\r\n            <div class=\"caption\">\r\n              <span>${this.getMsg('PLACE_PHOTO_ATTRIBUTION_PREFIX')}</span>\r\n              ${map(selectedPhoto!.attributions,\r\n                    ({displayName, uri}) =>\r\n                        html`${renderAttribution(displayName, uri ?? null)} `)}\r\n            </div>\r\n          `)}\r\n        </div>\r\n      </div>\r\n    `;\r\n    // clang-format on\r\n\r\n    const navControls = html`\r\n      <div class=\"nav-controls\">\r\n        <button\r\n          aria-label=${this.getMsg('PLACE_PHOTO_PREV_ARIA_LABEL')}\r\n          @click=${this.navigateToPrevious}\r\n          .disabled=${this.selectedIndex === 0}\r\n        >\r\n          <span aria-hidden=\"true\" class=\"icon material-symbols-outlined\">\r\n            ${this.isRTL() ? 'chevron_right' : 'chevron_left'}\r\n          </span>\r\n        </button>\r\n        <button\r\n          aria-label=${this.getMsg('PLACE_PHOTO_NEXT_ARIA_LABEL')}\r\n          @click=${this.navigateToNext}\r\n          .disabled=${this.selectedIndex === photos.length - 1}\r\n        >\r\n          <span aria-hidden=\"true\" class=\"icon material-symbols-outlined\">\r\n            ${this.isRTL() ? 'chevron_left' : 'chevron_right'}\r\n          </span>\r\n        </button>\r\n      </div>\r\n    `;\r\n\r\n    // clang-format off\r\n    const renderTileButton = (photo: FormattedPhoto|null, i: number) => html`\r\n      <button\r\n        aria-label=${this.getMsg('PLACE_PHOTO_TILE_ARIA_LABEL', i + 1)}\r\n        @click=${() => void this.openLightbox(i)}\r\n        .disabled=${!photo}\r\n        part=\"tile\"\r\n        style=${styleMap({\r\n          'background-image': photo && `url(${photo.tileUri})`,\r\n        })}\r\n      ></button>\r\n    `;\r\n    // clang-format on\r\n\r\n    // Note on the <dialog>'s keydown listener: Prevent escape keydowns from\r\n    // propagating beyond the lightbox so that they don't cause things like\r\n    // closing an overlay layout. The <dialog> will close automatically on\r\n    // escape, so we don't have to worry about catching the event ourselves.\r\n    return html`\r\n      <div class=\"container\">\r\n        <div>${map(photos.slice(0, this.maxTiles), renderTileButton)}</div>\r\n        <dialog class=\"lightbox\" @keydown=${stopEscapePropagation}>\r\n          <div class=\"backdrop\" @click=${this.closeLightbox}></div>\r\n          <img\r\n            alt=${this.getMsg('PLACE_PHOTO_ALT', placeName ?? '')}\r\n            class=\"photo\"\r\n            src=${ifDefined(selectedPhoto?.uri)}\r\n          />\r\n          ${captionCard}\r\n          ${navControls}\r\n        </dialog>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  protected override updated() {\r\n    if (!this.tileSize && this.firstTileElement) {\r\n      // Note that sometimes a tile's BoundingClientRect becomes defined outside\r\n      // Lit's reactive update cycle. In such cases the tile size will be zero,\r\n      // and we cap width/height at `MAX_TILE_PHOTO_SIZE_PX` to avoid requesting\r\n      // an overly large image.\r\n      this.tileSize = {\r\n        widthPx: this.firstTileElement.clientWidth || MAX_TILE_PHOTO_SIZE_PX,\r\n        heightPx: this.firstTileElement.clientHeight || MAX_TILE_PHOTO_SIZE_PX,\r\n      };\r\n    }\r\n  }\r\n\r\n  /** @ignore */\r\n  getRequiredFields(): Array<keyof Place> {\r\n    return ['displayName', 'photos'];\r\n  }\r\n\r\n  protected override placeHasData(place: Place): boolean {\r\n    return !!(place.photos && place.photos.length > 0);\r\n  }\r\n\r\n  private getFormattedPhotos(): Array<FormattedPhoto|null> {\r\n    const place = this.getPlace();\r\n    // If Place data is not yet available or the tile elements have not been\r\n    // rendered, then return a list of null values as placeholders.\r\n    if (place === undefined || !this.tileSize) {\r\n      return new Array(10).fill(null);\r\n    }\r\n    if (!place?.photos) return [];\r\n    return place.photos.map((photo) => formatPhoto(photo, this.tileSize!));\r\n  }\r\n\r\n  private isRTL(): boolean {\r\n    return getComputedStyle(this).direction.toLowerCase() === 'rtl';\r\n  }\r\n\r\n  private async openLightbox(index: number) {\r\n    this.selectedIndex = index;\r\n    await this.updateComplete;\r\n    this.lightboxElement?.showModal();\r\n  }\r\n\r\n  private closeLightbox() {\r\n    this.lightboxElement?.close();\r\n  }\r\n\r\n  private navigateToPrevious() {\r\n    if (this.selectedIndex > 0) this.selectedIndex--;\r\n  }\r\n\r\n  private navigateToNext() {\r\n    const numPhotos = this.getPlace()?.photos?.length;\r\n    if (numPhotos && this.selectedIndex < numPhotos - 1) this.selectedIndex++;\r\n  }\r\n}\r\n"]}