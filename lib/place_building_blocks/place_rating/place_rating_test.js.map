{"version":3,"file":"place_rating_test.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_rating/place_rating_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, TemplateResult} from 'lit';\r\n\r\nimport {Environment} from '../../testing/environment.js';\r\nimport {makeFakePlace} from '../../testing/fake_place.js';\r\nimport type {PlaceResult} from '../../utils/googlemaps_types.js';\r\n\r\nimport {PlaceRating} from './place_rating.js';\r\n\r\n\r\nfunction getTextComponents(rating: PlaceRating): string[] {\r\n  return rating.renderRoot.textContent!.trim().split(/[\\s]+/);\r\n}\r\n\r\ndescribe('PlaceRating', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(template: TemplateResult):\r\n      Promise<PlaceRating[]> {\r\n    const root = env.render(template);\r\n    await env.waitForStability();\r\n    return Array.from(root.querySelectorAll('gmpx-place-rating'));\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-place-rating');\r\n    expect(el).toBeInstanceOf(PlaceRating);\r\n  });\r\n\r\n  it('renders various ratings with a Place', async () => {\r\n    // clang-format off\r\n    const ratings = await prepareState(html`\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 1})}>\r\n      </gmpx-place-rating>\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 2})}>\r\n      </gmpx-place-rating>\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 3})}>\r\n      </gmpx-place-rating>\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 4})}>\r\n      </gmpx-place-rating>\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 4.5})}>\r\n      </gmpx-place-rating>\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 5})}>\r\n      </gmpx-place-rating>\r\n    `);\r\n    // clang-format on\r\n\r\n    expect(getTextComponents(ratings[0])).toEqual(['1.0', '★★★★★']);\r\n    expect(getTextComponents(ratings[1])).toEqual(['2.0', '★★★★★']);\r\n    expect(getTextComponents(ratings[2])).toEqual(['3.0', '★★★★★']);\r\n    expect(getTextComponents(ratings[3])).toEqual(['4.0', '★★★★★']);\r\n    expect(getTextComponents(ratings[4])).toEqual(['4.5', '★★★★★']);\r\n    expect(getTextComponents(ratings[5])).toEqual(['5.0', '★★★★★']);\r\n  });\r\n\r\n  it('renders with a PlaceResult', async () => {\r\n    const placeResult: PlaceResult = {rating: 4.5};\r\n    // clang-format off\r\n    const [rating] = await prepareState(html`\r\n      <gmpx-place-rating .place=${placeResult}></gmpx-place-rating>\r\n    `);\r\n    // clang-format on\r\n\r\n    expect(getTextComponents(rating)).toEqual(['4.5', '★★★★★']);\r\n  });\r\n\r\n  it('renders in condensed form', async () => {\r\n    // clang-format off\r\n    const [rating] = await prepareState(html`\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 4.5})}\r\n                         condensed>\r\n      </gmpx-place-rating>\r\n    `);\r\n    // clang-format on\r\n\r\n    expect(getTextComponents(rating)).toEqual(['4.5', '★']);\r\n  });\r\n\r\n  it('renders nothing with no place', async () => {\r\n    const [rating] = await prepareState(html`\r\n      <gmpx-place-rating></gmpx-place-rating>\r\n    `);\r\n\r\n    expect(rating.renderRoot.textContent).toBe('');\r\n  });\r\n\r\n  it('renders nothing with a null/undefined rating', async () => {\r\n    // clang-format off\r\n    const [nullRating, undefinedRating] = await prepareState(html`\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: null})}>\r\n      </gmpx-place-rating>\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: undefined})}>\r\n      </gmpx-place-rating>\r\n    `);\r\n    // clang-format on\r\n\r\n    expect(nullRating.renderRoot.textContent).toBe('');\r\n    expect(undefinedRating.renderRoot.textContent).toBe('');\r\n  });\r\n\r\n  it('renders nothing with a rating outside the valid range', async () => {\r\n    // clang-format off\r\n    const ratings = await prepareState(html`\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 0})}>\r\n      </gmpx-place-rating>\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 0.9})}>\r\n      </gmpx-place-rating>\r\n      <gmpx-place-rating .place=${makeFakePlace({id: '', rating: 5.1})}>\r\n      </gmpx-place-rating>\r\n    `);\r\n    // clang-format on\r\n\r\n    expect(ratings[0].renderRoot.textContent).toBe('');\r\n    expect(ratings[1].renderRoot.textContent).toBe('');\r\n    expect(ratings[2].renderRoot.textContent).toBe('');\r\n  });\r\n});\r\n"]}