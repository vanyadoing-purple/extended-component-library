{"version":3,"file":"place_data_provider_test.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_data_provider/place_data_provider_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,mCAAmC;AACnC,OAAO,2CAA2C,CAAC;AAEnD,OAAO,EAAC,IAAI,EAAiB,MAAM,KAAK,CAAC;AACzC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE1D,OAAO,EAAC,WAAW,EAAC,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAC,aAAa,EAAC,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAC,QAAQ,EAAC,MAAM,yBAAyB,CAAC;AAEjD,OAAO,EAAC,iBAAiB,EAAC,MAAM,2BAA2B,CAAC;AAE5D,OAAO,EAAC,iBAAiB,EAAC,MAAM,0BAA0B,CAAC;AAI3D,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,iBAAiB;IAA5C;;QAGU,gBAAW,GAAG,CAAC,CAAC;IA+B1B,CAAC;IA7BoB,MAAM;QACvB,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;IAClD,CAAC;IAEkB,OAAO;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACvB,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxC,CAAC;IAEkB,YAAY,CAAC,KAAY;QAC1C,IAAI,IAAI,CAAC,KAAK,KAAK,aAAa,EAAE;YAChC,OAAO,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC;SAClC;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;YAClC,OAAO,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC;SAC7B;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;CACF,CAAA;AAjC2B;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;;2CAAgC;AADrD,YAAY;IADjB,aAAa,CAAC,oBAAoB,CAAC;GAC9B,YAAY,CAkCjB;AAED,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,MAAM,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC;IAE9B,SAAS,oBAAoB,CAAC,KAAY,EAAE,cAA2B;QACrE,cAAc,CAAC,GAAG,CAAC,QAAQ,CACvB,KAAK,EAAE,EAAC,MAAM,EAAwC,EAAE,EAAE;YACxD,IAAI,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;gBAClC,KAAK,CAAC,WAAW,GAAG,YAAY,CAAC;aAClC;YACD,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC7B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;aAClB;YACD,OAAO,EAAC,KAAK,EAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACP,KAAK,CAAC,WAAW,GAAG,cAAc,CAAC;IACrC,CAAC;IAED,KAAK,UAAU,YAAY,CACvB,QAAwB,EAAE,WAA2C;QAEvE,MAAM,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACxD,GAAG,CAAC,qBAAsB,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,EAAE;YACxD,MAAM,KAAK,GAAG,aAAa,CAAC;gBAC1B,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,WAAW;aACZ,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,EAAE;gBAChB,oBAAoB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;aAC7C;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC7B,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAE;YACzD,cAAc;SACf,CAAC;IACJ,CAAC;IAED,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;QACpB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC;QAC9D,MAAM,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;KAEzC,CAAC,CAAC;QACH,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;KAG/C,CAAC,CAAC;QAEH,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC;YAC9C,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;SAC7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;KAK/C,CAAC,CAAC;QAEH,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,EAAC,MAAM,EAAE,CAAC,aAAa,CAAC,EAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;;;KAO/C,CAAC,CAAC;QAEH,MAAM,CAAC,cAAc,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,GAAG,GAAG,cAAc,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACxD,MAAM,KAAK,GAAG,aAAa,CAAC;YAC1B,EAAE,EAAE,KAAK;YACT,MAAM,EAAE,GAAG;SACZ,CAAC,CAAC;QACH,oBAAoB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QAE5C,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;yCACL,KAAK;;;;KAIzC,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEtC,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,EAAC,MAAM,EAAE,CAAC,aAAa,CAAC,EAAC,CAAC,CAAC;QAC3E,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,WAAW,GAAgB;YAC/B,QAAQ,EAAE,KAAK;YACf,MAAM,EAAE,GAAG;SACZ,CAAC;QACF,MAAM,EAAC,QAAQ,EAAE,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;yCACrB,WAAW;;;;KAI/C,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEtC,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,EAAC,MAAM,EAAE,CAAC,aAAa,CAAC,EAAC,CAAC,CAAC;QAC3E,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACxD,MAAM,KAAK,GAAG,aAAa,CAAC;YAC1B,EAAE,EAAE,KAAK;YACT,MAAM,EAAE,GAAG;YACX,WAAW,EAAE,cAAc;SAC5B,CAAC,CAAC;QACH,oBAAoB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QAE5C,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;yCACL,KAAK;;;;KAIzC,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEtC,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9C,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;KAK/C,CAAC,CAAC;QAEH,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,EAAC,MAAM,EAAE,CAAC,aAAa,CAAC,EAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,EAAC,QAAQ,EAAE,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;KAKzD,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QACpC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC/B,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC,EAAC,MAAM,EAAE,CAAC,aAAa,CAAC,EAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,EAAC,QAAQ,EAAE,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;KAKzD,CAAC,CAAC;QAEH,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC7B,MAAM,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QACpC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC/B,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAChC,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC;YAC9C,MAAM,EAAE,CAAC,aAAa,EAAE,cAAc,EAAE,QAAQ,CAAC;SAClD,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACxD,MAAM,KAAK,GAAG,aAAa,CAAC,EAAC,EAAE,EAAE,OAAO,EAAC,CAAC,CAAC;QAC3C,oBAAoB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QAE5C,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;yCACL,KAAK;;;;KAIzC,CAAC,CAAC;QAEH,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC7B,MAAM,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QACpC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC/B,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAChC,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC;YAC9C,MAAM,EAAE,CAAC,aAAa,EAAE,cAAc,EAAE,QAAQ,CAAC;SAClD,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,KAAK,GAAG,aAAa,CAAC,EAAC,EAAE,EAAE,OAAO,EAAC,CAAC,CAAC;QAE3C,mEAAmE;QACnE,0EAA0E;QAC1E,qBAAqB;QACrB,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;yCACL,KAAK;;;;KAIzC,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QACpC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC/B,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC7B,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC5B,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAChC,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,EAAC,QAAQ,EAAE,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;KAKzD,CAAC,CAAC;QACH,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAE7B,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;QACxB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC;YAC9C,MAAM,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC;SACxC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,EAAC,QAAQ,EAAE,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;KAKzD,CAAC,CAAC;QACH,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAE7B,MAAM,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QACpC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC/B,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;QACxB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC;YAC9C,MAAM,EAAE,CAAC,aAAa,EAAE,cAAc,EAAE,QAAQ,CAAC;SAClD,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,EAAC,QAAQ,EAAE,cAAc,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;;;KAOzD,CAAC,CAAC;QACH,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAE7B,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;QACxB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,cAAc,CAAC,CAAC,wBAAwB,CAAC;YAC9C,MAAM,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC;SACxC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;KAKzC,CAAC,CAAC;QAEH,MAAM,QAAQ,GACV,QAAQ,CAAC,aAAa,CAAe,oBAAoB,CAAE,CAAC;QAChE,MAAM,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;QAEpC,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;QACxB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC7B,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;QACxB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAkB,CAAC;QAChD,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CACjC,IAAI,CAAA;;SAEH,EACD,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CACzB,CAAC;QAEF,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC;aAClD,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,KAAK,IAAI,EAAE;QACxE,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAkB,CAAC;QAChD,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CACjC,IAAI,CAAA;;;;;SAKH,EACD,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CACzB,CAAC;QAEF,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC1D,QAAQ,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,aAAa,CAAC,EAAC,EAAE,EAAE,EAAE,EAAC,CAAC,EAAC,CAAC,CAAC;QACnD,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjE,MAAM,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAkB,CAAC;QAChD,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CACjC,IAAI,CAAA;;;;;SAKH,EACD,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CACzB,CAAC;QAEF,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC1D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC9C,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACvB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtE,MAAM,CAAC,gBAAgB,CAAC;aACnB,wBAAwB,CACrB,OAAO,CAAC,gBAAgB,CAAC,EAAC,IAAI,EAAE,mBAAmB,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACtE,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxD,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;;KAKzC,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC1D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QACzC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACvB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtE,MAAM,CAAC,gBAAgB,CAAC;aACnB,wBAAwB,CACrB,OAAO,CAAC,gBAAgB,CAAC,EAAC,IAAI,EAAE,mBAAmB,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxD,MAAM,WAAW,GAAgB,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC;QACtD,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;yCACL,WAAW;;;;KAI/C,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC1D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QACzC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACvB,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtE,MAAM,CAAC,gBAAgB,CAAC;aACnB,wBAAwB,CACrB,OAAO,CAAC,gBAAgB,CAAC,EAAC,IAAI,EAAE,mBAAmB,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;KAEzC,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;;;KAIzC,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,CAAA;;KAEzC,CAAC,CAAC;QAEH,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE7B,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sEAAsE,EACtE,KAAK,IAAI,EAAE;QACT,KAAK,CAAC,GAAG,CAAC,qBAAsB,EAAE,mBAAmB,CAAC;aACjD,GAAG,CAAC,WAAW,CAAC,EAAC,MAAM,EAAE,EAAC,IAAI,EAAE,SAAS,EAAC,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;QAEhE,MAAM,EAAC,QAAQ,EAAC,GAAG,MAAM,YAAY,CACjC,IAAI,CAAA;;;;wCAIyB,EAC7B,GAAG,EAAE;YACH,MAAM,IAAI,KAAK,CACX,4DAA4D,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEP,MAAM,CAAC,GAAG,CAAC,qBAAsB,CAAC,iBAAiB,CAAC;aAC/C,wBAAwB,CAAC,EAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;QACnE,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAiB,CAAC;QACtD,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\nimport '../place_attribution/place_attribution.js';\r\n\r\nimport {html, TemplateResult} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\nimport {Environment} from '../../testing/environment.js';\r\nimport {makeFakePlace} from '../../testing/fake_place.js';\r\nimport {Deferred} from '../../utils/deferred.js';\r\nimport type {Place, PlaceResult} from '../../utils/googlemaps_types.js';\r\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\r\n\r\nimport {PlaceDataProvider} from './place_data_provider.js';\r\n\r\n\r\n@customElement('gmpx-test-consumer')\r\nclass TestConsumer extends PlaceDataConsumer {\r\n  @property({type: String}) field?: 'displayName'|'rating';\r\n\r\n  private updateCount = 0;\r\n\r\n  protected override render() {\r\n    return html`${JSON.stringify(this.getPlace())}`;\r\n  }\r\n\r\n  protected override updated() {\r\n    this.updateCount++;\r\n  }\r\n\r\n  resetUpdateCount() {\r\n    this.updateCount = 0;\r\n  }\r\n\r\n  getUpdateCount(): number {\r\n    return this.updateCount;\r\n  }\r\n\r\n  getRequiredFields(): Array<keyof Place> {\r\n    return this.field ? [this.field] : [];\r\n  }\r\n\r\n  protected override placeHasData(place: Place): boolean {\r\n    if (this.field === 'displayName') {\r\n      return place.displayName != null;\r\n    } else if (this.field === 'rating') {\r\n      return place.rating != null;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\ndescribe('PlaceDataProvider', () => {\r\n  const env = new Environment();\r\n\r\n  function attachFetchFieldsSpy(place: Place, fetchFieldsSpy: jasmine.Spy) {\r\n    fetchFieldsSpy.and.callFake(\r\n        async ({fields}: google.maps.places.FetchFieldsRequest) => {\r\n          if (fields.includes('displayName')) {\r\n            place.displayName = 'Fake Place';\r\n          }\r\n          if (fields.includes('rating')) {\r\n            place.rating = 5;\r\n          }\r\n          return {place};\r\n        });\r\n    place.fetchFields = fetchFieldsSpy;\r\n  }\r\n\r\n  async function prepareState(\r\n      template: TemplateResult, fetchFields?: () => Promise<{place: Place}>):\r\n      Promise<{provider: PlaceDataProvider, fetchFieldsSpy: jasmine.Spy}> {\r\n    const fetchFieldsSpy = jasmine.createSpy('fetchFields');\r\n    env.fakeGoogleMapsHarness!.placeConstructor = (options) => {\r\n      const place = makeFakePlace({\r\n        id: options.id,\r\n        fetchFields,\r\n      });\r\n      if (!fetchFields) {\r\n        attachFetchFieldsSpy(place, fetchFieldsSpy);\r\n      }\r\n      return place;\r\n    };\r\n\r\n    const root = env.render(template);\r\n    await env.waitForStability();\r\n    return {\r\n      provider: root.querySelector('gmpx-place-data-provider')!,\r\n      fetchFieldsSpy,\r\n    };\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-place-data-provider');\r\n    expect(el).toBeInstanceOf(PlaceDataProvider);\r\n  });\r\n\r\n  it('does not reflect place property back to attribute', async () => {\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider></gmpx-place-data-provider>\r\n    `);\r\n    provider.place = 'id0';\r\n    await env.waitForStability();\r\n\r\n    expect(provider.getAttribute('place')).toBeNull();\r\n  });\r\n\r\n  it('fetches fields provided by attribute', async () => {\r\n    const {fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id1\" fields=\"field1 field2\">\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({\r\n      fields: ['field1', 'field2']\r\n    });\r\n  });\r\n\r\n  it('fetches fields from one child', async () => {\r\n    const {fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id2\">\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({fields: ['displayName']});\r\n  });\r\n\r\n  it('fetches fields from multiple children', async () => {\r\n    const {fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id3\">\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n        <gmpx-test-consumer field=\"rating\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledTimes(1);\r\n    const arg = fetchFieldsSpy.calls.mostRecent().args[0];\r\n    expect(arg.fields.sort()).toEqual(['displayName', 'rating']);\r\n  });\r\n\r\n  it('fetches missing fields on a Place', async () => {\r\n    const fetchFieldsSpy = jasmine.createSpy('fetchFields');\r\n    const place = makeFakePlace({\r\n      id: 'id4',\r\n      rating: 4.5,\r\n    });\r\n    attachFetchFieldsSpy(place, fetchFieldsSpy);\r\n\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider .place=${place}>\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n    const consumer = provider.children[0];\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({fields: ['displayName']});\r\n    expect(consumer.matches('[no-data]')).toBeFalse();\r\n  });\r\n\r\n  it('fetches missing fields on a PlaceResult', async () => {\r\n    const placeResult: PlaceResult = {\r\n      place_id: 'id5',\r\n      rating: 4.5,\r\n    };\r\n    const {provider, fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider .place=${placeResult}>\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n    const consumer = provider.children[0];\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({fields: ['displayName']});\r\n    expect(consumer.matches('[no-data]')).toBeFalse();\r\n  });\r\n\r\n  it(`doesn't fetch missing fields with auto-fetch-disabled`, async () => {\r\n    const fetchFieldsSpy = jasmine.createSpy('fetchFields');\r\n    const place = makeFakePlace({\r\n      id: 'id6',\r\n      rating: 4.5,\r\n      fetchFields: fetchFieldsSpy,\r\n    });\r\n    attachFetchFieldsSpy(place, fetchFieldsSpy);\r\n\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider .place=${place} auto-fetch-disabled>\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n    const consumer = provider.children[0];\r\n\r\n    expect(fetchFieldsSpy).not.toHaveBeenCalled();\r\n    expect(consumer.matches('[no-data]')).toBeTrue();\r\n  });\r\n\r\n  it('ignores auto-fetch-disabled when using a place ID', async () => {\r\n    const {fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id7\" auto-fetch-disabled>\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({fields: ['displayName']});\r\n  });\r\n\r\n  it(`doesn't fetch when a new child is attached`, async () => {\r\n    const {provider, fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id8-A\">\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    const consumer = new TestConsumer();\r\n    consumer.field = 'rating';\r\n    provider.appendChild(consumer);\r\n    await env.waitForStability();\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({fields: ['displayName']});\r\n  });\r\n\r\n  it(`fetches new child's field when same place id is set again`, async () => {\r\n    const {provider, fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id8-B\">\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    fetchFieldsSpy.calls.reset();\r\n    const consumer = new TestConsumer();\r\n    consumer.field = 'rating';\r\n    provider.appendChild(consumer);\r\n    provider.place = provider.place;\r\n    await env.waitForStability();\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({\r\n      fields: ['displayName', 'attributions', 'rating'],\r\n    });\r\n  });\r\n\r\n  it(`fetches new child's field when same place obj is set again`, async () => {\r\n    const fetchFieldsSpy = jasmine.createSpy('fetchFields');\r\n    const place = makeFakePlace({id: 'id8-C'});\r\n    attachFetchFieldsSpy(place, fetchFieldsSpy);\r\n\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider .place=${place}>\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    fetchFieldsSpy.calls.reset();\r\n    const consumer = new TestConsumer();\r\n    consumer.field = 'rating';\r\n    provider.appendChild(consumer);\r\n    provider.place = provider.place;\r\n    await env.waitForStability();\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({\r\n      fields: ['displayName', 'attributions', 'rating'],\r\n    });\r\n  });\r\n\r\n  it(`updates a consumer when the same place object is set again`, async () => {\r\n    const place = makeFakePlace({id: 'id8-D'});\r\n\r\n    // Use auto-fetch-disabled so the fetch callback doesn't update the\r\n    // consumer. We're testing that setting the place property will trigger an\r\n    // update on its own.\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider .place=${place} auto-fetch-disabled>\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    const consumer = new TestConsumer();\r\n    consumer.field = 'rating';\r\n    provider.appendChild(consumer);\r\n    await env.waitForStability();\r\n    consumer.resetUpdateCount();\r\n    provider.place = provider.place;\r\n    await env.waitForStability();\r\n\r\n    expect(consumer.getUpdateCount()).toEqual(1);\r\n  });\r\n\r\n  it('fetches when the place is changed', async () => {\r\n    const {provider, fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id9\">\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n    fetchFieldsSpy.calls.reset();\r\n\r\n    provider.place = 'id10';\r\n    await env.waitForStability();\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({\r\n      fields: ['displayName', 'attributions'],\r\n    });\r\n  });\r\n\r\n  it(`fetches new children's fields when the place is changed`, async () => {\r\n    const {provider, fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id11\">\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n    fetchFieldsSpy.calls.reset();\r\n\r\n    const consumer = new TestConsumer();\r\n    consumer.field = 'rating';\r\n    provider.appendChild(consumer);\r\n    provider.place = 'id12';\r\n    await env.waitForStability();\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({\r\n      fields: ['displayName', 'attributions', 'rating'],\r\n    });\r\n  });\r\n\r\n  it(`stops fetching the fields from a removed node`, async () => {\r\n    const {provider, fetchFieldsSpy} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id13\">\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n        <gmpx-test-consumer field=\"rating\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n    fetchFieldsSpy.calls.reset();\r\n\r\n    provider.removeChild(provider.children[1]);\r\n    provider.place = 'id14';\r\n    await env.waitForStability();\r\n\r\n    expect(fetchFieldsSpy).toHaveBeenCalledOnceWith({\r\n      fields: ['displayName', 'attributions'],\r\n    });\r\n  });\r\n\r\n  it(`caches Place objects`, async () => {\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id15\">\r\n        <gmpx-test-consumer field=\"displayName\">\r\n        </gmpx-test-consumer>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    const consumer =\r\n        provider.querySelector<TestConsumer>('gmpx-test-consumer')!;\r\n    const place = consumer.contextPlace;\r\n\r\n    provider.place = 'id16';\r\n    await env.waitForStability();\r\n    provider.place = 'id15';\r\n    await env.waitForStability();\r\n\r\n    expect(consumer.contextPlace).toBe(place);\r\n  });\r\n\r\n  it('shows the loading slot while loading', async () => {\r\n    const deferred = new Deferred<{place: Place}>();\r\n    const {provider} = await prepareState(\r\n        html`\r\n          <gmpx-place-data-provider place=\"id17\"></gmpx-place-data-provider>\r\n        `,\r\n        () => deferred.promise,\r\n    );\r\n\r\n    expect(provider.renderRoot.querySelector('slot')?.name)\r\n        .toBe('initial-loading');\r\n  });\r\n\r\n  it('shows the default slot, emits no error event when loaded', async () => {\r\n    const deferred = new Deferred<{place: Place}>();\r\n    const {provider} = await prepareState(\r\n        html`\r\n          <gmpx-place-data-provider place=\"id18\">\r\n            <span slot=\"initial-loading\">Loading</span>\r\n            Loaded\r\n          </gmpx-place-data-provider>\r\n        `,\r\n        () => deferred.promise,\r\n    );\r\n\r\n    const dispatchEventSpy = spyOn(provider, 'dispatchEvent');\r\n    deferred.resolve({place: makeFakePlace({id: ''})});\r\n    await env.waitForStability();\r\n\r\n    expect(provider.renderRoot.querySelector('slot')?.name).toBe('');\r\n    expect(dispatchEventSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('shows the error slot, emits event when fetchFields rejects', async () => {\r\n    const deferred = new Deferred<{place: Place}>();\r\n    const {provider} = await prepareState(\r\n        html`\r\n          <gmpx-place-data-provider place=\"id19-A\">\r\n            <span slot=\"initial-loading\">Loading</span>\r\n            Loaded\r\n          </gmpx-place-data-provider>\r\n        `,\r\n        () => deferred.promise,\r\n    );\r\n\r\n    const dispatchEventSpy = spyOn(provider, 'dispatchEvent');\r\n    const error = new Error('some network error');\r\n    deferred.reject(error);\r\n    await env.waitForStability();\r\n\r\n    expect(provider.renderRoot.querySelector('slot')?.name).toBe('error');\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            jasmine.objectContaining({type: 'gmpx-requesterror', error}));\r\n  });\r\n\r\n  it('shows error slot when API loading fails, with Place ID', async () => {\r\n    const deferred = new Deferred();\r\n    env.importLibrarySpy?.and.returnValue(deferred.promise);\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id19-B\">\r\n        <span slot=\"initial-loading\">Loading</span>\r\n        Loaded\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    const dispatchEventSpy = spyOn(provider, 'dispatchEvent');\r\n    const error = new Error('API not found');\r\n    deferred.reject(error);\r\n    await env.waitForStability();\r\n\r\n    expect(provider.renderRoot.querySelector('slot')?.name).toBe('error');\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            jasmine.objectContaining({type: 'gmpx-requesterror', error}));\r\n  });\r\n\r\n  it('shows error slot when API loading fails, with PlaceResult', async () => {\r\n    const deferred = new Deferred();\r\n    env.importLibrarySpy?.and.returnValue(deferred.promise);\r\n    const placeResult: PlaceResult = {place_id: 'id19-C'};\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider .place=${placeResult}>\r\n        <span slot=\"initial-loading\">Loading</span>\r\n        Loaded\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    const dispatchEventSpy = spyOn(provider, 'dispatchEvent');\r\n    const error = new Error('API not found');\r\n    deferred.reject(error);\r\n    await env.waitForStability();\r\n\r\n    expect(provider.renderRoot.querySelector('slot')?.name).toBe('error');\r\n    expect(dispatchEventSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            jasmine.objectContaining({type: 'gmpx-requesterror', error}));\r\n  });\r\n\r\n  it('appends Place Attribution as child if none exists', async () => {\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id20-A\"></gmpx-place-data-provider>\r\n    `);\r\n\r\n    expect(provider.querySelectorAll('gmpx-place-attribution')).toHaveSize(1);\r\n  });\r\n\r\n  it('does not append Place Attribution if one already exists', async () => {\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id20-B\">\r\n        <gmpx-place-attribution></gmpx-place-attribution>\r\n      </gmpx-place-data-provider>\r\n    `);\r\n\r\n    expect(provider.querySelectorAll('gmpx-place-attribution')).toHaveSize(1);\r\n  });\r\n\r\n  it('does not append Place Attribution again when place changes', async () => {\r\n    const {provider} = await prepareState(html`\r\n      <gmpx-place-data-provider place=\"id20-C\"></gmpx-place-data-provider>\r\n    `);\r\n\r\n    provider.place = 'id20-D';\r\n    await env.waitForStability();\r\n\r\n    expect(provider.querySelectorAll('gmpx-place-attribution')).toHaveSize(1);\r\n  });\r\n\r\n  it('fetches from Place Details when Place.fetchFields() is not available',\r\n     async () => {\r\n       spyOn(env.fakeGoogleMapsHarness!, 'getDetailsHandler')\r\n           .and.returnValue({result: {name: 'Foo Inc'}, status: 'OK'});\r\n\r\n       const {provider} = await prepareState(\r\n           html`\r\n            <gmpx-place-data-provider place=\"id21\">\r\n              <gmpx-test-consumer field=\"displayName\">\r\n              </gmpx-test-consumer>\r\n            </gmpx-place-data-provider>`,\r\n           () => {\r\n             throw new Error(\r\n                 'Place.prototype.fetchFields() is not available in the SDK!');\r\n           });\r\n\r\n       expect(env.fakeGoogleMapsHarness!.getDetailsHandler)\r\n           .toHaveBeenCalledOnceWith({placeId: 'id21', fields: ['name']});\r\n       const consumer = provider.children[0] as TestConsumer;\r\n       expect(consumer.contextPlace?.displayName).toBe('Foo Inc');\r\n     });\r\n});\r\n"]}