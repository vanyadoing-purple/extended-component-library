{"version":3,"file":"place_field_text.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_field_text/place_field_text.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {html} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\nimport {LocalizationController} from '../../base/localization_controller.js';\r\nimport type {Place} from '../../utils/googlemaps_types.js';\r\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\r\n\r\n\r\n/**\r\n * Supported field names for `PlaceFieldText`, formatted as `Place` fields.\r\n */\r\nexport const PLACE_TEXT_FIELDS = [\r\n  'businessStatus',\r\n  'displayName',\r\n  'formattedAddress',\r\n  'id',\r\n  'internationalPhoneNumber',\r\n  'location',\r\n  'location.lat',\r\n  'location.lng',\r\n  'nationalPhoneNumber',\r\n  'plusCode.compoundCode',\r\n  'plusCode.globalCode',\r\n  'rating',\r\n  'types',\r\n  'userRatingCount',\r\n] as const;\r\n\r\n/**\r\n * Supported field names for `PlaceFieldText`, formatted as `PlaceResult`\r\n * fields.\r\n */\r\nexport const PLACE_RESULT_TEXT_FIELDS = [\r\n  'business_status',\r\n  'name',\r\n  'formatted_address',\r\n  'place_id',\r\n  'international_phone_number',\r\n  'geometry.location',\r\n  'geometry.location.lat',\r\n  'geometry.location.lng',\r\n  'formatted_phone_number',\r\n  'plus_code.compound_code',\r\n  'plus_code.global_code',\r\n  'rating',\r\n  'types',\r\n  'user_ratings_total',\r\n] as const;\r\n\r\ntype PlaceTextField = typeof PLACE_TEXT_FIELDS[number];\r\ntype PlaceResultTextField = typeof PLACE_RESULT_TEXT_FIELDS[number];\r\n/**\r\n * String union type of all supported field names for `PlaceFieldText`.\r\n */\r\nexport type TextField = PlaceTextField|PlaceResultTextField;\r\n\r\n/**\r\n * Place types that can be rendered by PlaceFieldText. These are the \"Table 1\"\r\n * place types documented at:\r\n *\r\n * https://developers.google.com/maps/documentation/places/web-service/supported_types\r\n */\r\nconst ALLOWED_PLACE_TYPES = new Set([\r\n  'accounting',\r\n  'airport',\r\n  'amusement_park',\r\n  'aquarium',\r\n  'art_gallery',\r\n  'atm',\r\n  'bakery',\r\n  'bank',\r\n  'bar',\r\n  'beauty_salon',\r\n  'bicycle_store',\r\n  'book_store',\r\n  'bowling_alley',\r\n  'bus_station',\r\n  'cafe',\r\n  'campground',\r\n  'car_dealer',\r\n  'car_rental',\r\n  'car_repair',\r\n  'car_wash',\r\n  'casino',\r\n  'cemetery',\r\n  'church',\r\n  'city_hall',\r\n  'clothing_store',\r\n  'convenience_store',\r\n  'courthouse',\r\n  'dentist',\r\n  'department_store',\r\n  'doctor',\r\n  'drugstore',\r\n  'electrician',\r\n  'electronics_store',\r\n  'embassy',\r\n  'fire_station',\r\n  'florist',\r\n  'funeral_home',\r\n  'furniture_store',\r\n  'gas_station',\r\n  'gym',\r\n  'hair_care',\r\n  'hardware_store',\r\n  'hindu_temple',\r\n  'home_goods_store',\r\n  'hospital',\r\n  'insurance_agency',\r\n  'jewelry_store',\r\n  'laundry',\r\n  'lawyer',\r\n  'library',\r\n  'light_rail_station',\r\n  'liquor_store',\r\n  'local_government_office',\r\n  'locksmith',\r\n  'lodging',\r\n  'meal_delivery',\r\n  'meal_takeaway',\r\n  'mosque',\r\n  'movie_rental',\r\n  'movie_theater',\r\n  'moving_company',\r\n  'museum',\r\n  'night_club',\r\n  'painter',\r\n  'park',\r\n  'parking',\r\n  'pet_store',\r\n  'pharmacy',\r\n  'physiotherapist',\r\n  'plumber',\r\n  'police',\r\n  'post_office',\r\n  'primary_school',\r\n  'real_estate_agency',\r\n  'restaurant',\r\n  'roofing_contractor',\r\n  'rv_park',\r\n  'school',\r\n  'secondary_school',\r\n  'shoe_store',\r\n  'shopping_mall',\r\n  'spa',\r\n  'stadium',\r\n  'storage',\r\n  'store',\r\n  'subway_station',\r\n  'supermarket',\r\n  'synagogue',\r\n  'taxi_stand',\r\n  'tourist_attraction',\r\n  'train_station',\r\n  'transit_station',\r\n  'travel_agency',\r\n  'university',\r\n  'veterinary_care',\r\n  'zoo',\r\n]);\r\n\r\nfunction toPlaceTextField(field: TextField): PlaceTextField {\r\n  switch (field) {\r\n    case 'business_status':\r\n      return 'businessStatus';\r\n    case 'name':\r\n      return 'displayName';\r\n    case 'formatted_address':\r\n      return 'formattedAddress';\r\n    case 'place_id':\r\n      return 'id';\r\n    case 'international_phone_number':\r\n      return 'internationalPhoneNumber';\r\n    case 'geometry.location':\r\n      return 'location';\r\n    case 'geometry.location.lat':\r\n      return 'location.lat';\r\n    case 'geometry.location.lng':\r\n      return 'location.lng';\r\n    case 'formatted_phone_number':\r\n      return 'nationalPhoneNumber';\r\n    case 'plus_code.compound_code':\r\n      return 'plusCode.compoundCode';\r\n    case 'plus_code.global_code':\r\n      return 'plusCode.globalCode';\r\n    case 'rating':\r\n      return 'rating';\r\n    case 'user_ratings_total':\r\n      return 'userRatingCount';\r\n    default:\r\n      return field;\r\n  }\r\n}\r\n\r\nfunction getTopLevelPlaceField(field: TextField): keyof Place {\r\n  return toPlaceTextField(field).split('.')[0] as keyof Place;\r\n}\r\n\r\n/**\r\n * Component that renders a string or numeric field of a `Place` or\r\n * `PlaceResult` as text. It can also render the field \"types\", in which case it\r\n * will show only the most applicable place type, if available.\r\n */\r\n@customElement('gmpx-place-field-text')\r\nexport class PlaceFieldText extends PlaceDataConsumer {\r\n  /**\r\n   * The field to display, formatted as it is on either a `Place` or\r\n   * `PlaceResult`.\r\n   *\r\n   * Allowed [`Place`\r\n   * fields](https://developers.google.com/maps/documentation/javascript/reference/place)\r\n   * are: `businessStatus`, `displayName`, `formattedAddress`, `id`,\r\n   * `internationalPhoneNumber`, `location`, `location.lat`, `location.lng`,\r\n   * `nationalPhoneNumber`, `plusCode.compoundCode`, `plusCode.globalCode`,\r\n   * `rating`, `types`, and `userRatingCount`.\r\n   *\r\n   * You may also specify one of the equivalent [`PlaceResult` field\r\n   * names](https://developers.google.com/maps/documentation/javascript/reference/places-service#PlaceResult):\r\n   * `business_status`, `name`, `formatted_address`, `place_id`,\r\n   * `international_phone_number`, `geometry.location`, `geometry.location.lat`,\r\n   * `geometry.location.lng`, `formatted_phone_number`,\r\n   * `plus_code.compound_code`, `plus_code.global_code`, `rating`, `types`,\r\n   * and `user_ratings_total`.\r\n   */\r\n  @property({type: String, reflect: true}) field?: TextField;\r\n\r\n  protected readonly getMsg = LocalizationController.buildLocalizer(this);\r\n\r\n  protected override render() {\r\n    return html`<span>${this.getDisplayText()}</span>`;\r\n  }\r\n\r\n  /** @ignore */\r\n  getRequiredFields(): Array<keyof Place> {\r\n    return this.field ? [getTopLevelPlaceField(this.field)] : [];\r\n  }\r\n\r\n  protected override placeHasData(place: Place): boolean {\r\n    return !!(this.field && this.getFieldValue(place, this.field) != null);\r\n  }\r\n\r\n  private getDisplayText(): string {\r\n    const place = this.getPlace();\r\n    if (!place || !this.field) return '';\r\n    return this.getFieldValue(place, this.field) ?? '';\r\n  }\r\n\r\n  private getFieldValue(place: Place, field: TextField): string|null|undefined {\r\n    switch (toPlaceTextField(field)) {\r\n      case 'businessStatus':\r\n        return this.renderBusinessStatus(place.businessStatus);\r\n      case 'displayName':\r\n        return place.displayName;\r\n      case 'formattedAddress':\r\n        return place.formattedAddress;\r\n      case 'id':\r\n        return place.id;\r\n      case 'internationalPhoneNumber':\r\n        return place.internationalPhoneNumber;\r\n      case 'location':\r\n        return place.location?.toString();\r\n      case 'location.lat':\r\n        return place.location?.lat().toString();\r\n      case 'location.lng':\r\n        return place.location?.lng().toString();\r\n      case 'nationalPhoneNumber':\r\n        return place.nationalPhoneNumber;\r\n      case 'plusCode.compoundCode':\r\n        return place.plusCode?.compoundCode;\r\n      case 'plusCode.globalCode':\r\n        return place.plusCode?.globalCode;\r\n      case 'rating':\r\n        return place.rating?.toString();\r\n      case 'types':\r\n        return place.types && this.getDisplayType(place.types);\r\n      case 'userRatingCount':\r\n        return place.userRatingCount?.toString();\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  private renderBusinessStatus(status: google.maps.places.BusinessStatus|null|\r\n                               undefined): string|null|undefined {\r\n    if (!status) return status;\r\n    switch (status) {\r\n      case 'CLOSED_PERMANENTLY' as google.maps.places.BusinessStatus:\r\n        return this.getMsg('PLACE_CLOSED_PERMANENTLY');\r\n      case 'CLOSED_TEMPORARILY' as google.maps.places.BusinessStatus:\r\n        return this.getMsg('PLACE_CLOSED_TEMPORARILY');\r\n      case 'OPERATIONAL' as google.maps.places.BusinessStatus:\r\n        return this.getMsg('PLACE_OPERATIONAL');\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * From a list of multiple place types, returns the formatted type to be\r\n   * rendered by PlaceFieldText.\r\n   *\r\n   * @param placeTypes - A list of place types\r\n   * @return The first allowed place type in the list, formatted for display,\r\n   *     or null if there is no allowed type.\r\n   */\r\n  private getDisplayType(placeTypes: string[]): string|null {\r\n    for (const placeType of placeTypes) {\r\n      if (ALLOWED_PLACE_TYPES.has(placeType)) {\r\n        return this.getMsg('PLACE_TYPE', placeType);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'gmpx-place-field-text': PlaceFieldText;\r\n  }\r\n}\r\n"]}