{"version":3,"file":"place_distance_label_test.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_distance_label/place_distance_label_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html} from 'lit';\r\n\r\nimport {Environment} from '../../testing/environment.js';\r\nimport {FakeLatLng} from '../../testing/fake_lat_lng.js';\r\nimport {makeFakePlace} from '../../testing/fake_place.js';\r\nimport type {LatLng, LatLngLiteral, Place} from '../../utils/googlemaps_types.js';\r\n\r\nimport {DirectionsController} from './directions_controller.js';\r\nimport {PlaceDistanceLabel} from './place_distance_label.js';\r\n\r\n\r\ntype TravelMode = google.maps.TravelMode;\r\n\r\nconst FAKE_ORIGIN_LAT_LNG = new FakeLatLng(-1.23, 1.23);\r\nconst FAKE_ORIGIN_LAT_LNG_LITERAL = {\r\n  lat: -1.23,\r\n  lng: 1.23,\r\n};\r\nconst FAKE_PLACE = makeFakePlace({\r\n  id: 'FAKE_PLACE_ID',\r\n  location: new FakeLatLng(-4.56, 4.56),\r\n});\r\nconst FAKE_DIRECTIONS_RESULT = {\r\n  routes: [{\r\n    legs: [{\r\n      distance: {text: '1.5 mi', value: 2414},\r\n      duration: {text: '15 mins', value: 900},\r\n    }]\r\n  }]\r\n} as unknown as google.maps.DirectionsResult;\r\n\r\ndescribe('PlaceDistanceLabel', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(config?: {\r\n    place?: Place|null,\r\n    origin?: LatLng|LatLngLiteral|Place,\r\n    travelMode?: Lowercase<TravelMode>,\r\n  }): Promise<PlaceDistanceLabel> {\r\n    const root = env.render(html`\r\n      <gmpx-place-distance-label-internal\r\n        .place=${config?.place}\r\n        .origin=${config?.origin}\r\n        .travelMode=${config?.travelMode}\r\n      ></gmpx-place-distance-label-internal>\r\n    `);\r\n    await env.waitForStability();\r\n    return root.querySelector<PlaceDistanceLabel>(\r\n        'gmpx-place-distance-label-internal')!;\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-place-distance-label-internal');\r\n    expect(el).toBeInstanceOf(PlaceDistanceLabel);\r\n  });\r\n\r\n  it('renders nothing when Place data is not provided', async () => {\r\n    const routeSpy = spyOn(DirectionsController.prototype, 'route');\r\n    const label =\r\n        await prepareState({place: null, origin: FAKE_ORIGIN_LAT_LNG});\r\n\r\n    expect(routeSpy).not.toHaveBeenCalled();\r\n    expect(label.renderRoot.textContent).toBe('');\r\n    expect(label.noData).toBeTrue();\r\n  });\r\n\r\n  it('renders nothing when travel origin is not provided', async () => {\r\n    const routeSpy = spyOn(DirectionsController.prototype, 'route');\r\n    const label = await prepareState({place: FAKE_PLACE, origin: undefined});\r\n\r\n    expect(routeSpy).not.toHaveBeenCalled();\r\n    expect(label.renderRoot.textContent).toBe('');\r\n    expect(label.noData).toBeTrue();\r\n  });\r\n\r\n  it('renders distance with origin specified by LatLng', async () => {\r\n    const routeSpy = spyOn(DirectionsController.prototype, 'route')\r\n                         .and.resolveTo(FAKE_DIRECTIONS_RESULT);\r\n    const label =\r\n        await prepareState({place: FAKE_PLACE, origin: FAKE_ORIGIN_LAT_LNG});\r\n\r\n    expect(routeSpy).toHaveBeenCalledWith(jasmine.objectContaining({\r\n      origin: {location: FAKE_ORIGIN_LAT_LNG_LITERAL},\r\n      destination: {placeId: 'FAKE_PLACE_ID'},\r\n    }));\r\n    expect(label.renderRoot.textContent).toBe('1.5 mi');\r\n    expect(label.noData).toBeFalse();\r\n  });\r\n\r\n  it('renders distance with origin specified by LatLngLiteral', async () => {\r\n    const routeSpy = spyOn(DirectionsController.prototype, 'route')\r\n                         .and.resolveTo(FAKE_DIRECTIONS_RESULT);\r\n    const label = await prepareState(\r\n        {place: FAKE_PLACE, origin: FAKE_ORIGIN_LAT_LNG_LITERAL});\r\n\r\n    expect(routeSpy).toHaveBeenCalledWith(jasmine.objectContaining({\r\n      origin: {location: FAKE_ORIGIN_LAT_LNG_LITERAL},\r\n      destination: {placeId: 'FAKE_PLACE_ID'},\r\n    }));\r\n    expect(label.renderRoot.textContent).toBe('1.5 mi');\r\n    expect(label.noData).toBeFalse();\r\n  });\r\n\r\n  it('renders distance with origin specified by Place object', async () => {\r\n    const routeSpy = spyOn(DirectionsController.prototype, 'route')\r\n                         .and.resolveTo(FAKE_DIRECTIONS_RESULT);\r\n    const label = await prepareState(\r\n        {place: FAKE_PLACE, origin: makeFakePlace({id: 'ORIGIN_ID'})});\r\n\r\n    expect(routeSpy).toHaveBeenCalledWith(jasmine.objectContaining({\r\n      origin: {placeId: 'ORIGIN_ID'},\r\n      destination: {placeId: 'FAKE_PLACE_ID'},\r\n    }));\r\n    expect(label.renderRoot.textContent).toBe('1.5 mi');\r\n    expect(label.noData).toBeFalse();\r\n  });\r\n\r\n  const travelModeParams: Array<{\r\n    attrValue: Lowercase<TravelMode>,\r\n    enumValue: string,\r\n    iconName: string,\r\n  }> =\r\n      [\r\n        {\r\n          attrValue: 'bicycling',\r\n          enumValue: 'BICYCLING',\r\n          iconName: 'directions_bike',\r\n        },\r\n        {\r\n          attrValue: 'driving',\r\n          enumValue: 'DRIVING',\r\n          iconName: 'directions_car',\r\n        },\r\n        {\r\n          attrValue: 'transit',\r\n          enumValue: 'TRANSIT',\r\n          iconName: 'directions_subway',\r\n        },\r\n        {\r\n          attrValue: 'walking',\r\n          enumValue: 'WALKING',\r\n          iconName: 'directions_walk',\r\n        }\r\n      ];\r\n  travelModeParams.forEach(({attrValue, enumValue, iconName}) => {\r\n    it(`renders duration & icon when travel mode is ${attrValue}`, async () => {\r\n      const routeSpy = spyOn(DirectionsController.prototype, 'route')\r\n                           .and.resolveTo(FAKE_DIRECTIONS_RESULT);\r\n      const label = await prepareState({\r\n        place: FAKE_PLACE,\r\n        origin: FAKE_ORIGIN_LAT_LNG,\r\n        travelMode: attrValue,\r\n      });\r\n\r\n      expect(routeSpy).toHaveBeenCalledWith({\r\n        origin: {location: FAKE_ORIGIN_LAT_LNG_LITERAL},\r\n        destination: {placeId: 'FAKE_PLACE_ID'},\r\n        travelMode: enumValue as TravelMode,\r\n      });\r\n      expect(label.renderRoot.textContent).toContain('15 mins');\r\n      const icon = label.renderRoot.querySelector<HTMLSpanElement>('.icon');\r\n      expect(icon?.textContent).toHaveNormalizedText(iconName);\r\n      expect(label.noData).toBeFalse();\r\n    });\r\n  });\r\n\r\n  it(`updates on new travel mode and same directions data`, async () => {\r\n    spyOn(DirectionsController.prototype, 'route')\r\n        .and.resolveTo(FAKE_DIRECTIONS_RESULT);\r\n    const label = await prepareState({\r\n      place: FAKE_PLACE,\r\n      origin: FAKE_ORIGIN_LAT_LNG,\r\n    });\r\n\r\n    label.travelMode = 'driving';\r\n    await env.waitForStability();\r\n\r\n    expect(label.renderRoot.textContent).toContain('15 mins');\r\n  });\r\n\r\n  it(`doesn't make Directions request when Place ID is unchanged`, async () => {\r\n    const routeSpy = spyOn(DirectionsController.prototype, 'route')\r\n                         .and.resolveTo(FAKE_DIRECTIONS_RESULT);\r\n    const label = await prepareState(\r\n        {place: FAKE_PLACE, origin: FAKE_ORIGIN_LAT_LNG_LITERAL});\r\n\r\n    label.place = makeFakePlace({id: 'FAKE_PLACE_ID', displayName: 'Foo Bar'});\r\n    await env.waitForStability();\r\n\r\n    expect(routeSpy).toHaveBeenCalledTimes(1);\r\n  });\r\n});\r\n"]}