{"version":3,"file":"place_data_consumer_test.js","sourceRoot":"","sources":["../../src/place_building_blocks/place_data_consumer_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\nimport './place_data_provider/place_data_provider.js';\r\n\r\nimport {html} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\nimport {makeFakePlace} from '../testing/fake_place.js';\r\nimport type {Place} from '../utils/googlemaps_types.js';\r\n\r\nimport {PlaceDataConsumer} from './place_data_consumer.js';\r\nimport {PlaceDataProvider} from './place_data_provider/place_data_provider.js';\r\n\r\n\r\nconst FAKE_PLACE =\r\n    makeFakePlace({id: 'FAKE_PLACE_ID', displayName: 'Fake Place'});\r\nconst FAKE_CONTEXT_PLACE = makeFakePlace(\r\n    {id: 'FAKE_CONTEXT_PLACE_ID', displayName: 'Fake Context Place'});\r\n\r\n@customElement('gmpx-test-place-data-consumer-concrete')\r\nclass TestPlaceDataConsumerConcrete extends PlaceDataConsumer {\r\n  @property({attribute: false}) isDisplayNameOptional = false;\r\n\r\n  protected override placeHasData(place: Place|null|undefined): place is Place {\r\n    return (this.isDisplayNameOptional || !!place?.displayName);\r\n  }\r\n\r\n  getRequiredFields(): Array<keyof Place> {\r\n    return ['displayName'];\r\n  }\r\n\r\n  override getPlace() {\r\n    return super.getPlace();\r\n  }\r\n\r\n  override placeChangedCallback(value?: Place|null, oldValue?: Place|null) {\r\n    super.placeChangedCallback(value, oldValue);\r\n  }\r\n\r\n  protected override render() {\r\n    const place = this.getPlace();\r\n    if (!this.placeHasData(place)) return html``;\r\n    return html`<h1>${place.displayName}</h1>`;\r\n  }\r\n}\r\n\r\ndescribe('Place Data Consumer base class', () => {\r\n  const env = new Environment();\r\n\r\n  async function preparePlaceConsumer(place?: Place|null, contextPlace?: Place):\r\n      Promise<TestPlaceDataConsumerConcrete> {\r\n    const template = contextPlace === undefined ? html`\r\n      <gmpx-test-place-data-consumer-concrete .place=${place}>\r\n      </gmpx-test-place-data-consumer-concrete>\r\n    ` :\r\n                                                  html`\r\n      <gmpx-place-data-provider .place=${contextPlace}>\r\n        <gmpx-test-place-data-consumer-concrete .place=${place}>\r\n        </gmpx-test-place-data-consumer-concrete>\r\n      </gmpx-place-data-provider>\r\n    `;\r\n    const root = env.render(template);\r\n    await env.waitForStability();\r\n    return root.querySelector<TestPlaceDataConsumerConcrete>(\r\n        'gmpx-test-place-data-consumer-concrete')!;\r\n  }\r\n\r\n  it('does not show a no-data attribute or property when it has data',\r\n     async () => {\r\n       const element = await preparePlaceConsumer(FAKE_PLACE);\r\n\r\n       expect(element.noData).toBeFalse();\r\n       expect(element.matches('[no-data]')).toBeFalse();\r\n     });\r\n\r\n  it('does not show a no-data attribute or property when context has data',\r\n     async () => {\r\n       const element =\r\n           await preparePlaceConsumer(/* place= */ null, FAKE_CONTEXT_PLACE);\r\n\r\n       expect(element.noData).toBeFalse();\r\n       expect(element.matches('[no-data]')).toBeFalse();\r\n     });\r\n\r\n  it('shows a no-data attribute and property when it does not have data',\r\n     async () => {\r\n       const element = await preparePlaceConsumer({\r\n         ...FAKE_PLACE,\r\n         displayName: undefined,\r\n       } as Place);\r\n\r\n       expect(element.noData).toBeTrue();\r\n       expect(element.matches('[no-data]')).toBeTrue();\r\n     });\r\n\r\n  it('refreshes the state of no-data when a property changes', async () => {\r\n    const element = await preparePlaceConsumer({\r\n      ...FAKE_PLACE,\r\n      displayName: undefined,\r\n    } as Place);\r\n    element.isDisplayNameOptional = true;\r\n    await element.updateComplete;\r\n\r\n    expect(element.noData).toBeFalse();\r\n    expect(element.matches('[no-data]')).toBeFalse();\r\n  });\r\n\r\n  it('resets the no-data attribute if something external changes it from false to true',\r\n     async () => {\r\n       const element = await preparePlaceConsumer(FAKE_PLACE);\r\n       element.setAttribute('no-data', '');\r\n       await element.updateComplete;\r\n       expect(element.matches('[no-data]')).toBeFalse();\r\n     });\r\n\r\n  it('resets the no-data attribute if something external changes it from true to false',\r\n     async () => {\r\n       const element = await preparePlaceConsumer(null);\r\n       element.removeAttribute('no-data');\r\n       await element.updateComplete;\r\n       expect(element.matches('[no-data]')).toBeTrue();\r\n     });\r\n\r\n  it('invokes callback when place is set directly', async () => {\r\n    const placeChangedSpy =\r\n        spyOn(TestPlaceDataConsumerConcrete.prototype, 'placeChangedCallback');\r\n    const consumer = await preparePlaceConsumer(FAKE_PLACE);\r\n\r\n    expect(consumer.getPlace()).toBe(FAKE_PLACE);\r\n    expect(placeChangedSpy).toHaveBeenCalledOnceWith(FAKE_PLACE, undefined);\r\n  });\r\n\r\n  it('invokes callback when place is received via context', async () => {\r\n    const placeChangedSpy =\r\n        spyOn(TestPlaceDataConsumerConcrete.prototype, 'placeChangedCallback');\r\n    const consumer =\r\n        await preparePlaceConsumer(/* place= */ undefined, FAKE_CONTEXT_PLACE);\r\n\r\n    expect(consumer.getPlace()).toBe(FAKE_CONTEXT_PLACE);\r\n    expect(placeChangedSpy).toHaveBeenCalledWith(FAKE_CONTEXT_PLACE, undefined);\r\n  });\r\n\r\n  it('invokes callback when place from context is updated', async () => {\r\n    const consumer =\r\n        await preparePlaceConsumer(/* place= */ undefined, FAKE_CONTEXT_PLACE);\r\n    const provider = consumer.parentElement as PlaceDataProvider;\r\n    const placeChangedSpy =\r\n        spyOn(TestPlaceDataConsumerConcrete.prototype, 'placeChangedCallback');\r\n\r\n    provider.place = FAKE_CONTEXT_PLACE;\r\n    await env.waitForStability();\r\n\r\n    expect(consumer.getPlace()).toBe(FAKE_CONTEXT_PLACE);\r\n    expect(placeChangedSpy)\r\n        .toHaveBeenCalledOnceWith(FAKE_CONTEXT_PLACE, FAKE_CONTEXT_PLACE);\r\n  });\r\n\r\n  it('invokes callback when context place is overridden', async () => {\r\n    const consumer =\r\n        await preparePlaceConsumer(/* place= */ undefined, FAKE_CONTEXT_PLACE);\r\n    const placeChangedSpy =\r\n        spyOn(TestPlaceDataConsumerConcrete.prototype, 'placeChangedCallback');\r\n\r\n    consumer.place = FAKE_PLACE;\r\n    await consumer.updateComplete;\r\n\r\n    expect(consumer.getPlace()).toBe(FAKE_PLACE);\r\n    expect(placeChangedSpy)\r\n        .toHaveBeenCalledOnceWith(FAKE_PLACE, FAKE_CONTEXT_PLACE);\r\n  });\r\n\r\n  it('does not invoke callback when context place changes ' +\r\n         'but is overridden by place set on the consumer directly',\r\n     async () => {\r\n       const consumer =\r\n           await preparePlaceConsumer(FAKE_PLACE, FAKE_CONTEXT_PLACE);\r\n       const provider = consumer.parentElement as PlaceDataProvider;\r\n       const placeChangedSpy = spyOn(\r\n           TestPlaceDataConsumerConcrete.prototype, 'placeChangedCallback');\r\n\r\n       provider.place = FAKE_CONTEXT_PLACE;\r\n       await env.waitForStability();\r\n\r\n       expect(consumer.getPlace()).toBe(FAKE_PLACE);\r\n       expect(placeChangedSpy).not.toHaveBeenCalled();\r\n     });\r\n});\r\n"]}