{"version":3,"file":"place_field_boolean.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_field_boolean/place_field_boolean.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport {html, PropertyValues} from 'lit';\r\nimport {customElement, property, state} from 'lit/decorators.js';\r\nimport {choose} from 'lit/directives/choose.js';\r\n\r\nimport {Deferred} from '../../utils/deferred.js';\r\nimport type {Place} from '../../utils/googlemaps_types.js';\r\nimport {hasDataForOpeningCalculations} from '../../utils/place_utils.js';\r\nimport {Poll} from '../../utils/poll.js';\r\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\r\n\r\nconst PLACE_BOOLEAN_FIELDS_SYNC_ACCESS = [\r\n  'hasCurbsidePickup',\r\n  'hasDelivery',\r\n  'hasDineIn',\r\n  'hasTakeout',\r\n  'hasWheelchairAccessibleEntrance',\r\n  'isReservable',\r\n  'servesBeer',\r\n  'servesBreakfast',\r\n  'servesBrunch',\r\n  'servesDinner',\r\n  'servesLunch',\r\n  'servesVegetarianFood',\r\n  'servesWine',\r\n] as const;\r\n\r\nconst PLACE_BOOLEAN_FIELDS_ASYNC_ACCESS = [\r\n  'isOpen()',\r\n] as const;\r\n\r\n/**\r\n * Supported field names for `PlaceFieldBoolean`, formatted as `Place` fields.\r\n */\r\nexport const PLACE_BOOLEAN_FIELDS = [\r\n  ...PLACE_BOOLEAN_FIELDS_SYNC_ACCESS,\r\n  ...PLACE_BOOLEAN_FIELDS_ASYNC_ACCESS,\r\n] as const;\r\n\r\n/**\r\n * Supported field names for `PlaceFieldBoolean`, formatted as `PlaceResult`\r\n * fields.\r\n */\r\nexport const PLACE_RESULT_BOOLEAN_FIELDS = [\r\n  'opening_hours.isOpen()',\r\n] as const;\r\n\r\ntype AsyncPlaceBooleanField = typeof PLACE_BOOLEAN_FIELDS_ASYNC_ACCESS[number];\r\ntype SyncPlaceBooleanField = typeof PLACE_BOOLEAN_FIELDS_SYNC_ACCESS[number];\r\ntype PlaceBooleanField = AsyncPlaceBooleanField|SyncPlaceBooleanField;\r\ntype PlaceResultBooleanField = typeof PLACE_RESULT_BOOLEAN_FIELDS[number];\r\n\r\n/**\r\n * String union type of all supported field names for `PlaceFieldBoolean`.\r\n */\r\nexport type BooleanField = PlaceBooleanField|PlaceResultBooleanField;\r\n\r\n// Fields representing methods can request polled updates.\r\nconst FIELD_TO_POLLING_INTERVAL_MS: {[field: string]: number} = {\r\n  'isOpen()': 60 * 1000\r\n};\r\n\r\nfunction toPlaceBooleanField(field: BooleanField): PlaceBooleanField {\r\n  return (field === 'opening_hours.isOpen()') ? 'isOpen()' : field;\r\n}\r\n\r\nasync function isOpenWithoutFetching(place: Place): Promise<boolean|undefined> {\r\n  // On a `Place`, `isOpen()` will asynchronously fetch these three fields. If\r\n  // we don't have all three already, then we treat `isOpen` is missing data\r\n  // instead of making an unintended API call.\r\n  //\r\n  // When using the Place Data Provider component, these fields will be\r\n  // automatically fetched in advance.\r\n  if (place && hasDataForOpeningCalculations(place)) {\r\n    return await place.isOpen();\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * This function retrieves a static value from a `Place` by its string name.\r\n * Note that it does not evaluate Place methods such as `isOpen()`.\r\n */\r\nfunction getFieldValue(place: Place, field: PlaceBooleanField): boolean|null|\r\n    undefined {\r\n  switch (field) {\r\n    case 'hasCurbsidePickup':\r\n      return place.hasCurbsidePickup;\r\n    case 'hasDelivery':\r\n      return place.hasDelivery;\r\n    case 'hasDineIn':\r\n      return place.hasDineIn;\r\n    case 'hasTakeout':\r\n      return place.hasTakeout;\r\n    case 'hasWheelchairAccessibleEntrance':\r\n      return place.accessibilityOptions?.hasWheelchairAccessibleEntrance;\r\n    case 'isReservable':\r\n      return place.isReservable;\r\n    case 'servesBeer':\r\n      return place.servesBeer;\r\n    case 'servesBreakfast':\r\n      return place.servesBreakfast;\r\n    case 'servesBrunch':\r\n      return place.servesBrunch;\r\n    case 'servesDinner':\r\n      return place.servesDinner;\r\n    case 'servesLunch':\r\n      return place.servesLunch;\r\n    case 'servesVegetarianFood':\r\n      return place.servesVegetarianFood;\r\n    case 'servesWine':\r\n      return place.servesWine;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\nfunction isAsyncBooleanField(field: PlaceBooleanField):\r\n    field is AsyncPlaceBooleanField {\r\n  return field === 'isOpen()';\r\n}\r\n\r\nasync function getBooleanAsync(place: Place, field: AsyncPlaceBooleanField):\r\n    Promise<boolean|null|undefined> {\r\n  if (field === 'isOpen()') {\r\n    return isOpenWithoutFetching(place);\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction getBooleanSync(place: Place, field: SyncPlaceBooleanField): boolean|\r\n    null|undefined {\r\n  return getFieldValue(place, field) ?? null;\r\n}\r\n\r\n/**\r\n * Component that conditionally renders content depending on the value of a\r\n * boolean field, or the `isOpen()` method which returns a boolean.\r\n *\r\n * Include a child element with `slot=\"true\"` to display content when the\r\n * boolean value is true. Likewise, a child element with `slot=\"false\"` will be\r\n * displayed when the boolean value is false.\r\n * \r\n * @slot true - Content to be displayed when the boolean value is true.\r\n * @slot false - Content to be displayed when the boolean value is false.\r\n */\r\n@customElement('gmpx-place-field-boolean')\r\nexport class PlaceFieldBoolean extends PlaceDataConsumer {\r\n  /**\r\n   * The field to display, formatted as it is on either a `Place` or\r\n   * `PlaceResult`.\r\n   *\r\n   * Allowed [Place\r\n   * fields](https://developers.google.com/maps/documentation/javascript/reference/place)\r\n   * are `hasCurbsidePickup`, `hasDelivery`, `hasDineIn`, `hasTakeout`,\r\n   * `hasWheelchairAccessibleEntrance`, `isReservable`, `servesBeer`,\r\n   * `servesBreakfast`, `servesBrunch`, `servesDinner`, `servesLunch`,\r\n   * `servesVegetarianFood`, `servesWine`, and `isOpen()`. Please note that only\r\n   * `isOpen()` is supported by the legacy [`PlaceResult`\r\n   * class](https://developers.google.com/maps/documentation/javascript/reference/places-service#PlaceResult).\r\n   *\r\n   * The component also supports the `PlaceResult` field specifier\r\n   * `opening_hours.isOpen()` as an alias for `isOpen()`.\r\n   */\r\n  @property({type: String, reflect: true}) field?: BooleanField;\r\n\r\n  /** Boolean value to be rendered synchronously. */\r\n  @state() private valueToRender?: boolean|null;\r\n\r\n  private readonly poll = new Poll();\r\n  private asyncRenderComplete?: Deferred;\r\n\r\n  protected override render() {\r\n    return html`${\r\n        choose(\r\n            this.valueToRender,\r\n            [\r\n              [true, () => html`<slot name=\"true\"></slot>`],\r\n              [false, () => html`<slot name=\"false\"></slot>`],\r\n            ],\r\n            () => html``)}`;\r\n  }\r\n\r\n  /** @ignore */\r\n  getRequiredFields(): Array<keyof Place> {\r\n    if (!this.field) return [];\r\n    const placeField = toPlaceBooleanField(this.field);\r\n    switch (placeField) {\r\n      case 'isOpen()':\r\n        return [\r\n          'businessStatus',\r\n          'regularOpeningHours',\r\n          'utcOffsetMinutes',\r\n        ];\r\n      case 'hasWheelchairAccessibleEntrance':\r\n        return ['accessibilityOptions'];\r\n      default:\r\n        return [placeField];\r\n    }\r\n  }\r\n\r\n  protected override placeHasData(place: Place): boolean {\r\n    if (!this.field) return false;\r\n    const placeField = toPlaceBooleanField(this.field);\r\n\r\n    if (placeField === 'isOpen()') {\r\n      return hasDataForOpeningCalculations(place);\r\n    }\r\n    return getFieldValue(place, placeField) != null;\r\n  }\r\n\r\n  /** @ignore */\r\n  protected override async getUpdateComplete() {\r\n    const result = await super.getUpdateComplete();\r\n\r\n    // Modify the updateComplete promise to also await an async internal\r\n    // state update + render.\r\n    if (this.asyncRenderComplete) {\r\n      await this.asyncRenderComplete.promise;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  protected override willUpdate(changedProperties: PropertyValues<this>) {\r\n    super.willUpdate(changedProperties);\r\n\r\n    this.updateValueToRender();\r\n\r\n    // Set up polled updates for certain fields.\r\n    if (changedProperties.has('field')) {\r\n      this.poll.stop();\r\n      if (this.field) {\r\n        const pollingInterval =\r\n            FIELD_TO_POLLING_INTERVAL_MS[toPlaceBooleanField(this.field)];\r\n        if (pollingInterval) {\r\n          this.poll.start(() => void this.requestUpdate(), pollingInterval);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  override disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.poll.stop();\r\n    this.resetAsyncRenderPromise();\r\n  }\r\n\r\n  /**\r\n   * Updates the internal state value used for rendering HTML. Depending on\r\n   * the Place field chosen, this method may make a synchronous update, or may\r\n   * trigger a task to update the value later [e.g. with isOpen()].\r\n   */\r\n  private updateValueToRender() {\r\n    const place = this.getPlace();\r\n    this.resetAsyncRenderPromise();\r\n    if (!place || !this.field) {\r\n      // No Place or field to render? Do a synchronous update.\r\n      this.valueToRender = undefined;\r\n      return;\r\n    }\r\n\r\n    const placeField = toPlaceBooleanField(this.field);\r\n    if (isAsyncBooleanField(placeField)) {\r\n      // Getting the value of this field is an async operation. Kick off a task\r\n      // to fetch it.\r\n      this.asyncRenderComplete = new Deferred();\r\n      getBooleanAsync(place, placeField).then(val => {\r\n        this.valueToRender = val;\r\n        this.asyncRenderComplete?.resolve();\r\n      });\r\n    } else {\r\n      // Synchronously update the value to render.\r\n      this.valueToRender = getBooleanSync(place, placeField);\r\n    }\r\n  }\r\n\r\n  private resetAsyncRenderPromise() {\r\n    this.asyncRenderComplete?.resolve();\r\n    this.asyncRenderComplete = undefined;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'gmpx-place-field-boolean': PlaceFieldBoolean;\r\n  }\r\n}\r\n"]}