{"version":3,"file":"place_price_level_test.js","sourceRoot":"","sources":["../../../src/place_building_blocks/place_price_level/place_price_level_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, TemplateResult} from 'lit';\r\n\r\nimport {Environment} from '../../testing/environment.js';\r\nimport {makeFakePlace} from '../../testing/fake_place.js';\r\n\r\nimport {PlacePriceLevel} from './place_price_level.js';\r\n\r\ntype PriceLevel = google.maps.places.PriceLevel;\r\n\r\ndescribe('PlacePriceLevel', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(template: TemplateResult):\r\n      Promise<PlacePriceLevel[]> {\r\n    const root = env.render(template);\r\n    await env.waitForStability();\r\n    return Array.from(root.querySelectorAll('gmpx-place-price-level'));\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-place-price-level');\r\n    expect(el).toBeInstanceOf(PlacePriceLevel);\r\n  });\r\n\r\n  it('renders all price levels with a Place', async () => {\r\n    // clang-format off\r\n    const priceLevels = await prepareState(html`\r\n      <gmpx-place-price-level .place=${\r\n          makeFakePlace({id: '', priceLevel: 'FREE' as PriceLevel})}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level .place=${\r\n          makeFakePlace({id: '', priceLevel: 'INEXPENSIVE' as PriceLevel})}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level .place=${\r\n          makeFakePlace({id: '', priceLevel: 'MODERATE' as PriceLevel})}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level .place=${\r\n          makeFakePlace({id: '', priceLevel: 'EXPENSIVE' as PriceLevel})}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level .place=${\r\n          makeFakePlace({id: '', priceLevel: 'VERY_EXPENSIVE' as PriceLevel})}>\r\n      </gmpx-place-price-level>\r\n    `);\r\n    // clang-format on\r\n\r\n    expect(priceLevels[0].renderRoot.textContent).toBe('');\r\n    expect(priceLevels[1].renderRoot.textContent).toBe('$');\r\n    expect(priceLevels[2].renderRoot.textContent).toBe('$$');\r\n    expect(priceLevels[3].renderRoot.textContent).toBe('$$$');\r\n    expect(priceLevels[4].renderRoot.textContent).toBe('$$$$');\r\n  });\r\n\r\n  it('renders all price levels with a PlaceResult', async () => {\r\n    // clang-format off\r\n    const priceLevels = await prepareState(html`\r\n      <gmpx-place-price-level .place=${{price_level: 0}}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level .place=${{price_level: 1}}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level .place=${{price_level: 2}}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level .place=${{price_level: 3}}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level .place=${{price_level: 4}}>\r\n      </gmpx-place-price-level>\r\n    `);\r\n    // clang-format on\r\n\r\n    expect(priceLevels[0].renderRoot.textContent).toBe('');\r\n    expect(priceLevels[1].renderRoot.textContent).toBe('$');\r\n    expect(priceLevels[2].renderRoot.textContent).toBe('$$');\r\n    expect(priceLevels[3].renderRoot.textContent).toBe('$$$');\r\n    expect(priceLevels[4].renderRoot.textContent).toBe('$$$$');\r\n  });\r\n\r\n  it('renders with a custom symbol', async () => {\r\n    // clang-format off\r\n    const [priceLevel] = await prepareState(html`\r\n      <gmpx-place-price-level .place=${{price_level: 3}} symbol=\"€\">\r\n      </gmpx-place-price-level>\r\n    `);\r\n    // clang-format on\r\n    expect(priceLevel.renderRoot.textContent).toBe('€€€');\r\n  });\r\n\r\n  it('renders nothing when no place is set', async () => {\r\n    const [priceLevel] = await prepareState(html`\r\n      <gmpx-place-price-level></gmpx-place-price-level>\r\n    `);\r\n    expect(priceLevel.renderRoot.textContent).toBe('');\r\n  });\r\n\r\n  it('renders nothing when the price level is null/undefined', async () => {\r\n    // clang-format off\r\n    const [nullPriceLevel, undefinedPriceLevel] = await prepareState(html`\r\n      <gmpx-place-price-level\r\n          .place=${makeFakePlace({id: '', priceLevel: null})}>\r\n      </gmpx-place-price-level>\r\n      <gmpx-place-price-level\r\n          .place=${makeFakePlace({id: '', priceLevel: undefined})}>\r\n      </gmpx-place-price-level>\r\n    `);\r\n    // clang-format on\r\n\r\n    expect(nullPriceLevel.renderRoot.textContent).toBe('');\r\n    expect(undefinedPriceLevel.renderRoot.textContent).toBe('');\r\n  });\r\n\r\n  it('renders nothing when the price level is negative', async () => {\r\n    // clang-format off\r\n    const [priceLevel] = await prepareState(html`\r\n      <gmpx-place-price-level .place=${{price_level: -3}}>\r\n      </gmpx-place-price-level>\r\n    `);\r\n    // clang-format on\r\n    expect(priceLevel.renderRoot.textContent).toBe('');\r\n  });\r\n});\r\n"]}