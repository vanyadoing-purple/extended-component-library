{"version":3,"file":"split_layout_test.js","sourceRoot":"","sources":["../../src/split_layout/split_layout_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html} from 'lit';\r\nimport {styleMap} from 'lit/directives/style-map.js';\r\n\r\nimport {Environment} from '../testing/environment.js';\r\n\r\nimport {SplitLayout} from './split_layout.js';\r\n\r\ndescribe('SplitLayout', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(config: {\r\n    componentWidth: string,\r\n    rowReverse?: boolean,\r\n    columnReverse?: boolean,\r\n  }): Promise<{\r\n    splitLayout: SplitLayout,\r\n    layoutDiv: HTMLDivElement,\r\n    mainContainer: HTMLDivElement,\r\n    fixedContainer: HTMLDivElement,\r\n  }> {\r\n    const root = env.render(html`\r\n      <gmpx-split-layout\r\n        style=${styleMap({\r\n      'width': config.componentWidth\r\n    })}\r\n        ?row-reverse=${config.rowReverse ?? false}\r\n        ?column-reverse=${config.columnReverse ?? false}\r\n      >\r\n        <div slot=\"main\"></div>\r\n        <div slot=\"fixed\"></div>\r\n      </gmpx-split-layout>\r\n    `);\r\n\r\n    await env.waitForStability();\r\n\r\n    const splitLayout = root.querySelector<SplitLayout>('gmpx-split-layout')!;\r\n    return {\r\n      splitLayout,\r\n      layoutDiv:\r\n          splitLayout.renderRoot.querySelector<HTMLDivElement>('.layout')!,\r\n      mainContainer: splitLayout.renderRoot.querySelector<HTMLDivElement>(\r\n          '.main-container')!,\r\n      fixedContainer: splitLayout.renderRoot.querySelector<HTMLDivElement>(\r\n          '.fixed-container')!,\r\n    };\r\n  }\r\n\r\n  it('is defined', () => {\r\n    const el = document.createElement('gmpx-split-layout');\r\n    expect(el).toBeInstanceOf(SplitLayout);\r\n  });\r\n\r\n  it('logs warning when a child is in the default slot', async () => {\r\n    const consoleWarnSpy = spyOn(console, 'warn');\r\n\r\n    const root = env.render(html`\r\n      <gmpx-split-layout>\r\n        <div id=\"invalid\"></div>\r\n      </gmpx-split-layout>\r\n    `);\r\n    await env.waitForStability();\r\n\r\n    const invalidChild = root.querySelector<HTMLDivElement>('#invalid')!;\r\n    expect(consoleWarnSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            '<gmpx-split-layout>: ' +\r\n                'Detected child element in unsupported default slot. ' +\r\n                'This component supports the following slots: ' +\r\n                '\"main\", \"fixed\".',\r\n            invalidChild);\r\n  });\r\n\r\n  it('does not log warning when no child is in the default slot', async () => {\r\n    const consoleWarnSpy = spyOn(console, 'warn');\r\n\r\n    await prepareState({componentWidth: '800px'});\r\n\r\n    expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('renders row layout in correct DOM order and direction', async () => {\r\n    const {layoutDiv, mainContainer, fixedContainer} =\r\n        await prepareState({componentWidth: '800px'});\r\n\r\n    expect(getComputedStyle(layoutDiv).flexDirection).toBe('row');\r\n    expect(\r\n        mainContainer.compareDocumentPosition(fixedContainer) &\r\n        Node.DOCUMENT_POSITION_PRECEDING)\r\n        .toBeTruthy();\r\n  });\r\n\r\n  it('renders column layout in correct DOM order and direction', async () => {\r\n    const {layoutDiv, mainContainer, fixedContainer} =\r\n        await prepareState({componentWidth: '400px'});\r\n\r\n    expect(getComputedStyle(layoutDiv).flexDirection).toBe('column');\r\n    expect(\r\n        mainContainer.compareDocumentPosition(fixedContainer) &\r\n        Node.DOCUMENT_POSITION_FOLLOWING)\r\n        .toBeTruthy();\r\n  });\r\n\r\n  it('flips row layout when `row-reverse` attribute is set', async () => {\r\n    const {layoutDiv, mainContainer, fixedContainer} =\r\n        await prepareState({componentWidth: '800px', rowReverse: true});\r\n\r\n    expect(getComputedStyle(layoutDiv).flexDirection).toBe('row');\r\n    expect(\r\n        mainContainer.compareDocumentPosition(fixedContainer) &\r\n        Node.DOCUMENT_POSITION_FOLLOWING)\r\n        .toBeTruthy();\r\n  });\r\n\r\n  it('flips column layout when `column-reverse` attribute is set', async () => {\r\n    const {layoutDiv, mainContainer, fixedContainer} =\r\n        await prepareState({componentWidth: '400px', columnReverse: true});\r\n\r\n    expect(getComputedStyle(layoutDiv).flexDirection).toBe('column');\r\n    expect(\r\n        mainContainer.compareDocumentPosition(fixedContainer) &\r\n        Node.DOCUMENT_POSITION_PRECEDING)\r\n        .toBeTruthy();\r\n  });\r\n\r\n  it('updates layout when breakpoint changes', async () => {\r\n    const {splitLayout, layoutDiv} =\r\n        await prepareState({componentWidth: '400px'});\r\n    splitLayout.rowLayoutMinWidth = 400;\r\n\r\n    await env.waitForStability();\r\n\r\n    expect(getComputedStyle(layoutDiv).flexDirection).toBe('row');\r\n  });\r\n});\r\n"]}