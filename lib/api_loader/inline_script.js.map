{"version":3,"file":"inline_script.js","sourceRoot":"","sources":["../../src/api_loader/inline_script.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAeH;;;GAGG;AACH,SAAS,IAAI,CAAC,MAAuB;IACnC,aAAa;IACb,CAAC,CAAC,CAAA,EAAE,GAAC,IAAI,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,GAAC,gCAAgC,EAAC,CAAC,GAAC,QAAQ,EAAC,CAAC,GAAC,eAAe,EAAC,CAAC,GAAC,QAAQ,EAAC,CAAC,GAAC,QAAQ,EAAC,CAAC,GAAC,MAAM,CAAC,CAAA,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,IAAE,CAAC,CAAC,CAAC,IAAI,GAAC,EAAE,CAAC,EAAC,CAAC,GAAC,IAAI,GAAG,EAAC,CAAC,GAAC,IAAI,eAAe,EAAC,CAAC,GAAC,GAAE,EAAE,CAAA,CAAC,IAAE,CAAC,CAAC,GAAC,IAAI,OAAO,CAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,GAAC,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,WAAW,EAAC,CAAC,GAAG,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAA,KAAI,CAAC,IAAI,CAAC;QAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAC,CAAC,CAAA,EAAE,CAAA,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,UAAU,EAAC,CAAC,GAAC,QAAQ,GAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,GAAC,gBAAgB,CAAC,uBAAuB,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,OAAO,GAAC,GAAE,EAAE,CAAA,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE,KAAK,IAAE,EAAE,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,OAAO,CAAC,IAAI,CAAC,CAAC,GAAC,6BAA6B,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAE,EAAE,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACtqB,OAAO,MAAM,CAAC,IAAI,CAAC;AACrB,CAAC;AAED,eAAe,EAAC,IAAI,EAAC,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n/**\r\n * Query parameters for the script loading URL of the Maps JavaScript API.\r\n * See: https://developers.google.com/maps/documentation/javascript/url-params.\r\n */\r\ndeclare interface BootstrapParams {\r\n  key: string;\r\n  v?: string;\r\n  language?: string;\r\n  region?: string;\r\n  solutionChannel?: string;\r\n  authReferrerPolicy?: string;\r\n}\r\n\r\n/**\r\n * Loads inline script for the Dynamic Library Import API. See:\r\n * https://developers.google.com/maps/documentation/javascript/dynamic-loading.\r\n */\r\nfunction load(params: BootstrapParams): typeof google.maps {\r\n  // @ts-ignore\r\n  (g=>{var h,a,k,p=\"The Google Maps JavaScript API\",c=\"google\",l=\"importLibrary\",q=\"__ib__\",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement(\"script\"));e.set(\"libraries\",[...r]+\"\");for(k in g)e.set(k.replace(/[A-Z]/g,t=>\"_\"+t[0].toLowerCase()),g[k]);e.set(\"callback\",c+\".maps.\"+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+\" could not load.\"));a.nonce=m.querySelector(\"script[nonce]\")?.nonce||\"\";m.head.append(a)}));d[l]?console.warn(p+\" only loads once. Ignoring:\",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})(params);\r\n  return google.maps;\r\n}\r\n\r\nexport default {load};\r\n"]}