{"version":3,"file":"api_loader_test.js","sourceRoot":"","sources":["../../src/api_loader/api_loader_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n// import 'jasmine'; (google3-only)\r\n\r\nimport {html, TemplateResult} from 'lit';\r\nimport {customElement} from 'lit/decorators.js';\r\nimport {when} from 'lit/directives/when.js';\r\n\r\nimport {BaseComponent} from '../base/base_component.js';\r\nimport {ATTRIBUTION_SOURCE_ID, LIBRARY_VERSION} from '../base/constants.js';\r\nimport {Environment} from '../testing/environment.js';\r\n\r\nimport {APILoader} from './api_loader.js';\r\nimport inlineScript from './inline_script.js';\r\n\r\n@customElement('gmpx-test-api-consumer')\r\nclass TestAPIConsumer extends BaseComponent {\r\n  coreLibrary?: google.maps.CoreLibrary;\r\n  coreLibraryPromise?: Promise<google.maps.CoreLibrary>;\r\n\r\n  override async connectedCallback() {\r\n    super.connectedCallback();\r\n    this.coreLibraryPromise = APILoader.importLibrary('core', this) as\r\n        Promise<google.maps.CoreLibrary>;\r\n    this.coreLibrary = await this.coreLibraryPromise;\r\n  }\r\n}\r\n\r\ndescribe('APILoader', () => {\r\n  const env = new Environment();\r\n\r\n  async function prepareState(\r\n      config?: {loaderHTML?: TemplateResult, renderConsumerEl?: boolean}) {\r\n    env.importLibrarySpy?.and.callThrough();\r\n    const fakeSdk = env.fakeGoogleMapsHarness!.sdk;\r\n    const scriptLoadSpy = spyOn(inlineScript, 'load').and.callFake(() => {\r\n      window.google = {maps: fakeSdk};\r\n      return fakeSdk;\r\n    });\r\n    const consoleWarnSpy = spyOn(console, 'warn');\r\n    const importLibrarySpy = spyOn(fakeSdk, 'importLibrary').and.callThrough();\r\n\r\n    const root = env.render(html`\r\n      ${config?.loaderHTML ?? html`<gmpx-api-loader></gmpx-api-loader>`}\r\n      ${\r\n        when(\r\n            config?.renderConsumerEl ?? true,\r\n            () => html`<gmpx-test-api-consumer></gmpx-test-api-consumer>`)}\r\n    `);\r\n\r\n    const loaderEl = root.querySelector<APILoader>('gmpx-api-loader');\r\n    const consumerEl =\r\n        root.querySelector<TestAPIConsumer>('gmpx-test-api-consumer');\r\n    await env.waitForStability();\r\n    return {\r\n      loaderEl,\r\n      consumerEl,\r\n      scriptLoadSpy,\r\n      consoleWarnSpy,\r\n      importLibrarySpy,\r\n    };\r\n  }\r\n\r\n  function waitForAnyPolling() {\r\n    jasmine.clock().tick(5000);\r\n  }\r\n\r\n  afterEach(() => {\r\n    APILoader.reset();\r\n  });\r\n\r\n  it('is defined', async () => {\r\n    const {loaderEl} = await prepareState();\r\n\r\n    expect(loaderEl).toBeInstanceOf(APILoader);\r\n  });\r\n\r\n  it('loads API with minimum configuration and empty key', async () => {\r\n    const {scriptLoadSpy, consoleWarnSpy, importLibrarySpy} =\r\n        await prepareState(\r\n            {loaderHTML: html`<gmpx-api-loader key=\"\"></gmpx-api-loader>`});\r\n\r\n    expect(scriptLoadSpy).toHaveBeenCalledOnceWith({\r\n      key: '',\r\n      v: 'beta',\r\n      solutionChannel:\r\n          `GMP_${ATTRIBUTION_SOURCE_ID}_extended_v${LIBRARY_VERSION}`,\r\n    });\r\n    expect(importLibrarySpy).toHaveBeenCalledWith('maps');\r\n    expect(importLibrarySpy).toHaveBeenCalledWith('marker');\r\n\r\n    waitForAnyPolling();\r\n\r\n    expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('loads API when all attributes are specified', async () => {\r\n    const {consumerEl, scriptLoadSpy, consoleWarnSpy} = await prepareState({\r\n      loaderHTML: html`\r\n            <gmpx-api-loader\r\n              key=\"TEST_API_KEY\"\r\n              version=\"weekly\"\r\n              language=\"ja\"\r\n              region=\"JP\"\r\n              auth-referrer-policy=\"origin\"\r\n              solution-channel=\"GMP_QB_locatorplus_v6\"\r\n            ></gmpx-api-loader>\r\n          `\r\n    });\r\n\r\n    expect(consumerEl!.coreLibrary)\r\n        .toBe(env.fakeGoogleMapsHarness!.libraries['core']);\r\n    expect(scriptLoadSpy).toHaveBeenCalledOnceWith({\r\n      key: 'TEST_API_KEY',\r\n      v: 'weekly',\r\n      language: 'ja',\r\n      region: 'JP',\r\n      solutionChannel: 'GMP_QB_locatorplus_v6',\r\n      authReferrerPolicy: 'origin',\r\n    });\r\n\r\n    waitForAnyPolling();\r\n\r\n    expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('loads API when properties are set programmatically', async () => {\r\n    const {loaderEl, consumerEl, scriptLoadSpy, consoleWarnSpy} =\r\n        await prepareState();\r\n\r\n    loaderEl!.key = 'TEST_API_KEY';\r\n    loaderEl!.version = 'quarterly';\r\n    loaderEl!.language = 'en';\r\n    loaderEl!.region = 'GB';\r\n    loaderEl!.solutionChannel = 'GMP_QB_locatorplus_v6';\r\n    loaderEl!.authReferrerPolicy = 'origin';\r\n    await env.waitForStability();\r\n\r\n    expect(consumerEl!.coreLibrary)\r\n        .toBe(env.fakeGoogleMapsHarness!.libraries['core']);\r\n    expect(scriptLoadSpy).toHaveBeenCalledOnceWith({\r\n      key: 'TEST_API_KEY',\r\n      v: 'quarterly',\r\n      language: 'en',\r\n      region: 'GB',\r\n      solutionChannel: 'GMP_QB_locatorplus_v6',\r\n      authReferrerPolicy: 'origin',\r\n    });\r\n\r\n    waitForAnyPolling();\r\n\r\n    expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('loads API when key is set using the `apiKey` alias', async () => {\r\n    const {loaderEl, consumerEl, scriptLoadSpy} = await prepareState();\r\n\r\n    loaderEl!.apiKey = 'TEST_API_KEY';\r\n    await env.waitForStability();\r\n\r\n    expect(loaderEl!.apiKey).toBe('TEST_API_KEY');\r\n    expect(loaderEl!.key).toBe('TEST_API_KEY');\r\n    expect(consumerEl!.coreLibrary)\r\n        .toBe(env.fakeGoogleMapsHarness!.libraries['core']);\r\n    expect(scriptLoadSpy).toHaveBeenCalledOnceWith(jasmine.objectContaining({\r\n      key: 'TEST_API_KEY',\r\n    }));\r\n  });\r\n\r\n  it('logs warning when `google.maps` is already defined', async () => {\r\n    const fakeSdk = env.fakeGoogleMapsHarness!.sdk;\r\n    window.google = {maps: fakeSdk};\r\n    const {consumerEl, consoleWarnSpy, importLibrarySpy} = await prepareState({\r\n      loaderHTML: html`<gmpx-api-loader key=\"TEST_API_KEY\"></gmpx-api-loader>`\r\n    });\r\n\r\n    expect(consumerEl!.coreLibrary)\r\n        .toBe(env.fakeGoogleMapsHarness!.libraries['core']);\r\n    expect(importLibrarySpy).toHaveBeenCalledWith('maps');\r\n    expect(importLibrarySpy).toHaveBeenCalledWith('marker');\r\n\r\n    waitForAnyPolling();\r\n\r\n    expect(consoleWarnSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            '<gmpx-api-loader>: ' +\r\n            'Please remove the <gmpx-api-loader> element if you are using ' +\r\n            'the Google Maps JavaScript API inline bootstrap loader. ' +\r\n            'Duplicate configuration may cause unexpected behavior.');\r\n  });\r\n\r\n  it('logs warning when `google.maps` is available after delay', async () => {\r\n    const fakeSdk = env.fakeGoogleMapsHarness!.sdk;\r\n    const {consoleWarnSpy, importLibrarySpy} =\r\n        await prepareState({loaderHTML: html``});\r\n\r\n    jasmine.clock().tick(500);\r\n    window.google = {maps: fakeSdk};\r\n    waitForAnyPolling();\r\n\r\n    expect(importLibrarySpy).toHaveBeenCalledWith('maps');\r\n    expect(importLibrarySpy).toHaveBeenCalledWith('marker');\r\n    expect(consoleWarnSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            '<gmpx-test-api-consumer>: ' +\r\n            'Using the legacy Google Maps JavaScript API script loader ' +\r\n            'may result in suboptimal performance. ' +\r\n            'For best results, please include a <gmpx-api-loader> ' +\r\n            '(https://github.com/googlemaps/extended-component-library) ' +\r\n            'or use the inline bootstrap loader ' +\r\n            '(https://goo.gle/js-api-loading) instead.');\r\n  });\r\n\r\n  it('omits solution channel when analytics is disabled', async () => {\r\n    const {scriptLoadSpy, consoleWarnSpy} = await prepareState({\r\n      loaderHTML: html`\r\n            <gmpx-api-loader key=\"TEST_API_KEY\" solution-channel=\"\">\r\n            </gmpx-api-loader>\r\n          `\r\n    });\r\n\r\n    expect(scriptLoadSpy).toHaveBeenCalledOnceWith({\r\n      key: 'TEST_API_KEY',\r\n      v: 'beta',\r\n    });\r\n\r\n    waitForAnyPolling();\r\n\r\n    expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('logs warning when a property is changed after API load', async () => {\r\n    const {loaderEl, scriptLoadSpy, consoleWarnSpy} = await prepareState({\r\n      loaderHTML: html`<gmpx-api-loader key=\"TEST_API_KEY\"></gmpx-api-loader>`\r\n    });\r\n\r\n    loaderEl!.region = 'GB';\r\n    await env.waitForStability();\r\n\r\n    expect(scriptLoadSpy).toHaveBeenCalledTimes(1);\r\n    expect(consoleWarnSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            `<gmpx-api-loader>: Property 'region' cannot be updated once ` +\r\n            'the Google Maps JavaScript API is already loaded.');\r\n  });\r\n\r\n  it('logs warning when multiple API loaders are present', async () => {\r\n    const {loaderEl, scriptLoadSpy, consoleWarnSpy} = await prepareState({\r\n      loaderHTML: html`\r\n            <gmpx-api-loader key=\"TEST_API_KEY\"></gmpx-api-loader>\r\n            <gmpx-api-loader key=\"TEST_API_KEY\"></gmpx-api-loader>\r\n          `\r\n    });\r\n\r\n    expect(scriptLoadSpy).toHaveBeenCalledTimes(1);\r\n    expect(consoleWarnSpy)\r\n        .toHaveBeenCalledOnceWith(\r\n            '<gmpx-api-loader>: ' +\r\n                'Found multiple instances of this element on the same page. ' +\r\n                'The Google Maps JavaScript API can only be configured once; ' +\r\n                'please ensure you only have a single instance.',\r\n            loaderEl);\r\n  });\r\n\r\n  it('rejects promise when API is requested without a loader', async () => {\r\n    const {consumerEl, scriptLoadSpy, consoleWarnSpy} =\r\n        await prepareState({loaderHTML: html``});\r\n\r\n    await expectAsync((async () => {\r\n      waitForAnyPolling();\r\n      return await consumerEl!.coreLibraryPromise;\r\n    })())\r\n        .toBeRejectedWithError(\r\n            '<gmpx-test-api-consumer>: ' +\r\n            'The Google Maps JavaScript API is required for this element to ' +\r\n            'function correctly. Please ensure you have a <gmpx-api-loader> ' +\r\n            'on the page with a valid API key. ' +\r\n            'https://github.com/googlemaps/extended-component-library');\r\n    expect(scriptLoadSpy).not.toHaveBeenCalled();\r\n    expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('rejects promise when API is requested without an API key', async () => {\r\n    const {consumerEl, scriptLoadSpy, consoleWarnSpy} = await prepareState();\r\n\r\n    await expectAsync((async () => {\r\n      waitForAnyPolling();\r\n      return await consumerEl!.coreLibraryPromise;\r\n    })())\r\n        .toBeRejectedWithError(\r\n            '<gmpx-test-api-consumer>: ' +\r\n            'The Google Maps JavaScript API is required for this element to ' +\r\n            'function correctly. Please ensure you have a <gmpx-api-loader> ' +\r\n            'on the page with a valid API key. ' +\r\n            'https://github.com/googlemaps/extended-component-library');\r\n    expect(scriptLoadSpy).not.toHaveBeenCalled();\r\n    expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('resolves with library when API is requested programmatically with loader',\r\n     async () => {\r\n       const {loaderEl, consoleWarnSpy} =\r\n           await prepareState({renderConsumerEl: false});\r\n       loaderEl!.key = 'TEST_API_KEY';\r\n\r\n       waitForAnyPolling();\r\n       const coreLibrary = await APILoader.importLibrary('core');\r\n\r\n       expect(coreLibrary).toBe(env.fakeGoogleMapsHarness!.libraries['core']);\r\n       expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n     });\r\n\r\n  it('rejects promise when API is requested programmatically without a loader',\r\n     async () => {\r\n       const {scriptLoadSpy, consoleWarnSpy} =\r\n           await prepareState({loaderHTML: html``, renderConsumerEl: false});\r\n\r\n       await expectAsync((async () => {\r\n         const libraryPromise = APILoader.importLibrary('core');\r\n         waitForAnyPolling();\r\n         return await libraryPromise;\r\n       })())\r\n           .toBeRejectedWithError(\r\n               'APILoader.importLibrary(): Unable to initialize the Google ' +\r\n               'Maps JavaScript API. Please ensure you have a ' +\r\n               '<gmpx-api-loader> on the page with a valid API key. ' +\r\n               'https://github.com/googlemaps/extended-component-library');\r\n       expect(scriptLoadSpy).not.toHaveBeenCalled();\r\n       expect(consoleWarnSpy).not.toHaveBeenCalled();\r\n     });\r\n});\r\n"]}