{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/cdn_index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "suggestValidationAction",
          "declaration": {
            "name": "suggestValidationAction",
            "module": "./address_validation/suggest_validation_action.js"
          }
        },
        {
          "kind": "js",
          "name": "APILoader",
          "declaration": {
            "name": "APILoader",
            "module": "./api_loader/api_loader.js"
          }
        },
        {
          "kind": "js",
          "name": "IconButton",
          "declaration": {
            "name": "IconButton",
            "module": "./icon_button/icon_button.js"
          }
        },
        {
          "kind": "js",
          "name": "OverlayLayout",
          "declaration": {
            "name": "OverlayLayout",
            "module": "./overlay_layout/overlay_layout.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceAttribution",
          "declaration": {
            "name": "PlaceAttribution",
            "module": "./place_building_blocks/place_attribution/place_attribution.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceDataProvider",
          "declaration": {
            "name": "PlaceDataProvider",
            "module": "./place_building_blocks/place_data_provider/place_data_provider.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceDirectionsButton",
          "declaration": {
            "name": "PlaceDirectionsButton",
            "module": "./place_building_blocks/place_directions_button/place_directions_button.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldBoolean",
          "declaration": {
            "name": "PlaceFieldBoolean",
            "module": "./place_building_blocks/place_field_boolean/place_field_boolean.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldLink",
          "declaration": {
            "name": "PlaceFieldLink",
            "module": "./place_building_blocks/place_field_link/place_field_link.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldText",
          "declaration": {
            "name": "PlaceFieldText",
            "module": "./place_building_blocks/place_field_text/place_field_text.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceOpeningHours",
          "declaration": {
            "name": "PlaceOpeningHours",
            "module": "./place_building_blocks/place_opening_hours/place_opening_hours.js"
          }
        },
        {
          "kind": "js",
          "name": "PlacePhotoGallery",
          "declaration": {
            "name": "PlacePhotoGallery",
            "module": "./place_building_blocks/place_photo_gallery/place_photo_gallery.js"
          }
        },
        {
          "kind": "js",
          "name": "PlacePriceLevel",
          "declaration": {
            "name": "PlacePriceLevel",
            "module": "./place_building_blocks/place_price_level/place_price_level.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceRating",
          "declaration": {
            "name": "PlaceRating",
            "module": "./place_building_blocks/place_rating/place_rating.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceReviews",
          "declaration": {
            "name": "PlaceReviews",
            "module": "./place_building_blocks/place_reviews/place_reviews.js"
          }
        },
        {
          "kind": "js",
          "name": "PlaceOverview",
          "declaration": {
            "name": "PlaceOverview",
            "module": "./place_overview/place_overview.js"
          }
        },
        {
          "kind": "js",
          "name": "PlacePicker",
          "declaration": {
            "name": "PlacePicker",
            "module": "./place_picker/place_picker.js"
          }
        },
        {
          "kind": "js",
          "name": "RouteDataProvider",
          "declaration": {
            "name": "RouteDataProvider",
            "module": "./route_building_blocks/route_data_provider/route_data_provider.js"
          }
        },
        {
          "kind": "js",
          "name": "RouteMarker",
          "declaration": {
            "name": "RouteMarker",
            "module": "./route_building_blocks/route_marker/route_marker.js"
          }
        },
        {
          "kind": "js",
          "name": "RoutePolyline",
          "declaration": {
            "name": "RoutePolyline",
            "module": "./route_building_blocks/route_polyline/route_polyline.js"
          }
        },
        {
          "kind": "js",
          "name": "RouteOverview",
          "declaration": {
            "name": "RouteOverview",
            "module": "./route_overview/route_overview.js"
          }
        },
        {
          "kind": "js",
          "name": "SplitLayout",
          "declaration": {
            "name": "SplitLayout",
            "module": "./split_layout/split_layout.js"
          }
        },
        {
          "kind": "js",
          "name": "StoreLocator",
          "declaration": {
            "name": "StoreLocator",
            "module": "./store_locator/store_locator.js"
          }
        },
        {
          "kind": "js",
          "name": "setStringLiterals",
          "declaration": {
            "name": "setStringLiterals",
            "module": "./utils/localize.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/address_validation/suggest_validation_action.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "suggestValidationAction",
          "return": {
            "type": {
              "text": "ValidationSuggestion"
            }
          },
          "parameters": [
            {
              "name": "response",
              "type": {
                "text": "AddressValidationResponse"
              },
              "description": "A response object from the Address Validation API in the\r\nMaps JS SDK."
            }
          ],
          "description": "This is a JavaScript function that analyzes an Address Validation API\r\nresponse and outputs a single recommended follow-up action you should take\r\nbased on the quality of the address.\r\n\r\nThis function returns an object with a property `suggestedAction`, which can\r\nbe one of the following values:\r\n\r\n* `'FIX'`: the address returned by the API is low quality. You should prompt\r\nyour user for more information.\r\n\r\n* `'CONFIRM'`: the address returned by the API is high quality, but the API\r\nhad to make significant changes to the input address. You might prompt your\r\nuser for confirmation.\r\n\r\n* `'ACCEPT'`: the address returned by the API is high quality. There may be\r\nsmall corrections made by the Address Validation API. You can accept the\r\naddress.\r\n\r\n* `'ADD_SUBPREMISES'`: The end user entered an address that should have a\r\nsubpremises (e.g. apartment number) but did not include one. Your app should\r\nask the end user for this extra information and try again.\r\n\r\nYou should call this function after making a call to the Address Validation\r\nAPI, providing the API response as its argument. Your system should either\r\naccept the address or prompt the user, based on the response from this\r\nfunction.\r\n\r\nThe logic for converting the API response into a single recommended action is\r\nbased on the principles discussed in the [Build your validation\r\nlogic](https://developers.google.com/maps/documentation/address-validation/build-validation-logic).\r\nThere are many ways to analyze the API response; this function serves as\r\na suggested implementation.\r\n\r\n**Best Practices**\r\n\r\n* See [Workflow\r\noverview](https://developers.google.com/maps/documentation/address-validation/build-validation-logic#workflow-overview)\r\nfor the recommended behavior your system should have for each recommended\r\naction.\r\n\r\n* Allow your system to accept the entered address even if the user does\r\nnot respond to prompts to fix the address.\r\n\r\n* If you want to make your own modifications to the logic, we recommend\r\nreading through [Build your validation\r\nlogic](https://developers.google.com/maps/documentation/address-validation/build-validation-logic)\r\nfor guidance."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "suggestValidationAction",
          "declaration": {
            "name": "suggestValidationAction",
            "module": "src/address_validation/suggest_validation_action.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/api_loader/api_loader.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The API loader component loads the Google Maps Platform libraries necessary\r\nfor Extended Components.\r\n\r\nTo use this component, make sure you [sign up for Google Maps Platform and\r\ncreate an API\r\nkey](https://console.cloud.google.com/google/maps-apis/start).\r\nBy default, the API loader component will request the beta version of the\r\nMaps JavaScript API, giving you access to additional components [`<gmp-map>`\r\nand\r\n`<gmp-advanced-marker>`](https://developers.google.com/maps/documentation/javascript/web-components/overview).\r\nHowever, you can set the `version` attribute to select a stable (General\r\nAvailability) version of the SDK such as `weekly`.",
          "name": "APILoader",
          "members": [
            {
              "kind": "field",
              "name": "apiKey",
              "description": "An alias for the `key` property. React developers should use this prop to\r\nset the API key.",
              "type": {
                "text": "string|undefined"
              }
            },
            {
              "kind": "field",
              "name": "authReferrerPolicy",
              "type": {
                "text": "string | undefined"
              },
              "description": "Maps JS customers can configure HTTP Referrer Restrictions in the Cloud\r\nConsole to limit which URLs are allowed to use a particular API Key. This\r\nparameter can limit the amount of data sent to Google Maps when evaluating\r\nHTTP Referrer Restrictions. Please see the\r\n[documentation](https://developers.google.com/maps/documentation/javascript/dynamic-loading#optional_parameters)\r\nfor more information.",
              "attribute": "auth-referrer-policy",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string | undefined"
              },
              "description": "(Required) A valid Google Maps Platform API key. If you don't have one\r\nalready [sign up for Google Maps Platform and create an API\r\nkey](https://console.cloud.google.com/google/maps-apis/start).\r\n\r\nReact developers are encouraged to use the `apiKey` property instead,\r\nas `key` is a reserved word.\r\n\r\nYou can learn more about API keys in the Google Maps Platform\r\n[documentation](https://developers.google.com/maps/documentation/javascript/get-api-key).",
              "attribute": "key",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "language",
              "type": {
                "text": "string | undefined"
              },
              "description": "The language code; defaults to the user's preferred language setting as\r\nspecified in the browser when displaying textual information. Read [more on\r\nlocalization](https://developers.google.com/maps/documentation/javascript/localization).",
              "attribute": "language",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "region",
              "type": {
                "text": "string | undefined"
              },
              "description": "The region code to use. This alters the map's behavior based on a given\r\ncountry or territory. Read [more on region\r\ncodes](https://developers.google.com/maps/documentation/javascript/localization#Region).",
              "attribute": "region",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "solutionChannel",
              "type": {
                "text": "string | undefined"
              },
              "description": "To understand usage and ways to improve our solutions, Google includes the\r\n`solution_channel` query parameter in API calls to gather information about\r\ncode usage. You may opt out at any time by setting this attribute to an\r\nempty string. Read more in the\r\n[documentation](https://developers.google.com/maps/reporting-and-monitoring/reporting#solutions-usage).",
              "attribute": "solution-channel",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "version",
              "type": {
                "text": "string"
              },
              "default": "'beta'",
              "description": "The release channel or version numbers. See the\r\n[documentation](https://developers.google.com/maps/documentation/javascript/versions)\r\nfor more information.",
              "attribute": "version",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "googleMapsDeferred",
              "privacy": "private",
              "static": true,
              "default": "new Deferred<typeof google.maps>()",
              "description": "A deferred promise that resolves to the `google.maps` object."
            },
            {
              "kind": "field",
              "name": "inlineScriptLoaded",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "static": true,
              "default": "false",
              "description": "Whether the inline script has been invoked by this component."
            },
            {
              "kind": "field",
              "name": "instance",
              "type": {
                "text": "APILoader | undefined"
              },
              "privacy": "private",
              "static": true,
              "description": "A single instance of this component used to detect duplicates."
            },
            {
              "kind": "method",
              "name": "getSolutionChannel",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string|undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "tryLoadGoogleMapsAPI",
              "privacy": "private",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "importLibrary",
              "static": true,
              "parameters": [
                {
                  "name": "library",
                  "type": {
                    "text": "string"
                  },
                  "description": "Name of the library. Full list of libraries can be found in\r\nthe\r\n[documentation](https://developers.google.com/maps/documentation/javascript/libraries)."
                },
                {
                  "name": "consumer",
                  "optional": true,
                  "type": {
                    "text": "HTMLElement"
                  },
                  "description": "Optionally specify the custom element requesting the\r\nlibrary to provide more helpful console warnings when a library cannot\r\nbe loaded."
                }
              ],
              "description": "Retrieves a reference to the specified Maps JavaScript API library.\r\n\r\nLibraries are [loaded dynamically from the Maps JavaScript\r\nAPI](https://developers.google.com/maps/documentation/javascript/dynamic-loading).\r\nIf an instance of the API is not already available, one will be configured\r\nand loaded based on a `<gmpx-api-loader>` element in the document.",
              "return": {
                "type": {
                  "text": "ReturnType<typeof google.maps.importLibrary>"
                }
              }
            },
            {
              "kind": "method",
              "name": "pollForGoogleMaps",
              "privacy": "private",
              "static": true,
              "parameters": [
                {
                  "name": "numRetries",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "interval",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "logger",
                  "optional": true,
                  "type": {
                    "text": "LoggingController"
                  }
                },
                {
                  "name": "pollCount",
                  "default": "0"
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "auth-referrer-policy",
              "type": {
                "text": "string | undefined"
              },
              "description": "Maps JS customers can configure HTTP Referrer Restrictions in the Cloud\r\nConsole to limit which URLs are allowed to use a particular API Key. This\r\nparameter can limit the amount of data sent to Google Maps when evaluating\r\nHTTP Referrer Restrictions. Please see the\r\n[documentation](https://developers.google.com/maps/documentation/javascript/dynamic-loading#optional_parameters)\r\nfor more information.",
              "fieldName": "authReferrerPolicy"
            },
            {
              "name": "key",
              "type": {
                "text": "string | undefined"
              },
              "description": "(Required) A valid Google Maps Platform API key. If you don't have one\r\nalready [sign up for Google Maps Platform and create an API\r\nkey](https://console.cloud.google.com/google/maps-apis/start).\r\n\r\nReact developers are encouraged to use the `apiKey` property instead,\r\nas `key` is a reserved word.\r\n\r\nYou can learn more about API keys in the Google Maps Platform\r\n[documentation](https://developers.google.com/maps/documentation/javascript/get-api-key).",
              "fieldName": "key"
            },
            {
              "name": "language",
              "type": {
                "text": "string | undefined"
              },
              "description": "The language code; defaults to the user's preferred language setting as\r\nspecified in the browser when displaying textual information. Read [more on\r\nlocalization](https://developers.google.com/maps/documentation/javascript/localization).",
              "fieldName": "language"
            },
            {
              "name": "region",
              "type": {
                "text": "string | undefined"
              },
              "description": "The region code to use. This alters the map's behavior based on a given\r\ncountry or territory. Read [more on region\r\ncodes](https://developers.google.com/maps/documentation/javascript/localization#Region).",
              "fieldName": "region"
            },
            {
              "name": "solution-channel",
              "type": {
                "text": "string | undefined"
              },
              "description": "To understand usage and ways to improve our solutions, Google includes the\r\n`solution_channel` query parameter in API calls to gather information about\r\ncode usage. You may opt out at any time by setting this attribute to an\r\nempty string. Read more in the\r\n[documentation](https://developers.google.com/maps/reporting-and-monitoring/reporting#solutions-usage).",
              "fieldName": "solutionChannel"
            },
            {
              "name": "version",
              "type": {
                "text": "string"
              },
              "default": "'beta'",
              "description": "The release channel or version numbers. See the\r\n[documentation](https://developers.google.com/maps/documentation/javascript/versions)\r\nfor more information.",
              "fieldName": "version"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-api-loader",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "APILoader",
          "declaration": {
            "name": "APILoader",
            "module": "src/api_loader/api_loader.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-api-loader",
          "declaration": {
            "name": "APILoader",
            "module": "src/api_loader/api_loader.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/api_loader/inline_script.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/api_loader/inline_script.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/base_component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for Web Components in the library.",
          "name": "BaseComponent",
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BaseComponent",
          "declaration": {
            "name": "BaseComponent",
            "module": "src/base/base_component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/common_styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "GMPX_COLOR_PRIMARY",
          "default": "css`var(--gmpx-color-primary, #1976d2)`",
          "description": "Primary theme color (e.g. buttons, hyperlinks). Can be modified via\r\n`--gmpx-color-primary`."
        },
        {
          "kind": "variable",
          "name": "GMPX_COLOR_SURFACE",
          "default": "css`var(--gmpx-color-surface, #fff)`",
          "description": "Surface theme color (e.g. card background). Can be modified via\r\n`--gmpx-color-surface`."
        },
        {
          "kind": "variable",
          "name": "GMPX_COLOR_ON_PRIMARY",
          "default": "css`var(--gmpx-color-on-primary, #fff)`",
          "description": "Color of text on a primary-color background. Can be modified via\r\n`--gmpx-color-on-primary`."
        },
        {
          "kind": "variable",
          "name": "GMPX_COLOR_ON_SURFACE",
          "default": "css`var(--gmpx-color-on-surface, #212121)`",
          "description": "Color of text on a surface-color background. Can be modified via\r\n`--gmpx-color-on-surface`."
        },
        {
          "kind": "variable",
          "name": "GMPX_COLOR_ON_SURFACE_VARIANT",
          "default": "css`var(--gmpx-color-on-surface-variant, #757575)`",
          "description": "Color of supporting text on a surface-color background. Can be modified via\r\n`--gmpx-color-on-surface-variant`."
        },
        {
          "kind": "variable",
          "name": "GMPX_COLOR_OUTLINE",
          "default": "css`var(--gmpx-color-outline, #e0e0e0)`",
          "description": "Color of a button outline or divider element. Can be modified via\r\n`--gmpx-color-outline`."
        },
        {
          "kind": "variable",
          "name": "GMPX_RATING_COLOR",
          "default": "css`var(--gmpx-rating-color, #ffb300)`",
          "description": "Color of the stars in a star rating. Can be modified via\r\n`--gmpx-rating-color`."
        },
        {
          "kind": "variable",
          "name": "GMPX_RATING_COLOR_EMPTY",
          "default": "css`var(--gmpx-rating-color-empty, #e0e0e0)`",
          "description": "Color of the empty stars in a star rating. Can be modified via\r\n`--gmpx-rating-color-empty`."
        },
        {
          "kind": "variable",
          "name": "GMPX_FONT_FAMILY_BASE",
          "default": "css`var(--gmpx-font-family-base, 'Google Sans Text', sans-serif)`",
          "description": "Typeface for body text. Can be modified via `--gmpx-font-family-base`."
        },
        {
          "kind": "variable",
          "name": "GMPX_FONT_FAMILY_HEADINGS",
          "default": "css`var(--gmpx-font-family-headings, ${GMPX_FONT_FAMILY_BASE})`",
          "description": "Typeface for heading text (same as body text if unspecified). Can be\r\nmodified via `--gmpx-font-family-headings`."
        },
        {
          "kind": "variable",
          "name": "GMPX_FONT_SIZE_BASE",
          "default": "css`var(--gmpx-font-size-base, 0.875rem)`",
          "description": "Baseline font size, from which other text elements in a component are scaled.\r\nCan be modified via `--gmpx-font-size-base`."
        },
        {
          "kind": "function",
          "name": "getTypeScaleSizeFromPx",
          "return": {
            "type": {
              "text": "CSSResult"
            }
          },
          "parameters": [
            {
              "name": "px",
              "type": {
                "text": "number"
              }
            }
          ],
          "description": "Computes CSS length on the type scale that scales with the base font size.\r\nThe result is affected by `--gmpx-font-size-base`.\r\nFor a 20px margin at the default font size of 14px, use this as:\r\n\r\n    margin: ${getTypeScaleSizeFromPx(20)};"
        },
        {
          "kind": "variable",
          "name": "GMPX_FONT_HEADLINE",
          "default": "css`400 ${getTypeScaleSizeFromPx(18)}/${\r\n    getTypeScaleSizeFromPx(24)} ${GMPX_FONT_FAMILY_HEADINGS}`",
          "description": "Font of headline text. Can be modified via `--gmpx-font-family-headings` and\r\n`--gmpx-font-size-base`."
        },
        {
          "kind": "variable",
          "name": "GMPX_FONT_TITLE_LARGE",
          "default": "css`500 ${getTypeScaleSizeFromPx(16)}/${\r\n    getTypeScaleSizeFromPx(24)} ${GMPX_FONT_FAMILY_HEADINGS}`",
          "description": "Font of large title text. Can be modified via `--gmpx-font-family-headings`\r\nand `--gmpx-font-size-base`."
        },
        {
          "kind": "variable",
          "name": "GMPX_FONT_TITLE_MEDIUM",
          "default": "css`500 ${getTypeScaleSizeFromPx(14)}/${\r\n    getTypeScaleSizeFromPx(20)} ${GMPX_FONT_FAMILY_HEADINGS}`",
          "description": "Font of medium title/label text. Can be modified via\r\n`--gmpx-font-family-headings` and `--gmpx-font-size-base`."
        },
        {
          "kind": "variable",
          "name": "GMPX_FONT_BODY",
          "default": "css`400 ${getTypeScaleSizeFromPx(14)}/${\r\n    getTypeScaleSizeFromPx(20)} ${GMPX_FONT_FAMILY_BASE}`",
          "description": "Font of body text. Can be modified via `--gmpx-font-family-base` and\r\n`--gmpx-font-size-base`."
        },
        {
          "kind": "variable",
          "name": "GMPX_FONT_CAPTION",
          "default": "css`400 ${getTypeScaleSizeFromPx(12)}/${\r\n    getTypeScaleSizeFromPx(16)} ${GMPX_FONT_FAMILY_BASE}`",
          "description": "Font of caption text. Can be modified via `--gmpx-font-family-base` and\r\n`--gmpx-font-size-base`."
        },
        {
          "kind": "variable",
          "name": "GMPX_BORDER_SEPARATOR",
          "default": "css`1px solid ${GMPX_COLOR_OUTLINE}`",
          "description": "Border style for separating UI sections."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GMPX_COLOR_PRIMARY",
          "declaration": {
            "name": "GMPX_COLOR_PRIMARY",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_COLOR_SURFACE",
          "declaration": {
            "name": "GMPX_COLOR_SURFACE",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_COLOR_ON_PRIMARY",
          "declaration": {
            "name": "GMPX_COLOR_ON_PRIMARY",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_COLOR_ON_SURFACE",
          "declaration": {
            "name": "GMPX_COLOR_ON_SURFACE",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_COLOR_ON_SURFACE_VARIANT",
          "declaration": {
            "name": "GMPX_COLOR_ON_SURFACE_VARIANT",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_COLOR_OUTLINE",
          "declaration": {
            "name": "GMPX_COLOR_OUTLINE",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_RATING_COLOR",
          "declaration": {
            "name": "GMPX_RATING_COLOR",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_RATING_COLOR_EMPTY",
          "declaration": {
            "name": "GMPX_RATING_COLOR_EMPTY",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_FONT_FAMILY_BASE",
          "declaration": {
            "name": "GMPX_FONT_FAMILY_BASE",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_FONT_FAMILY_HEADINGS",
          "declaration": {
            "name": "GMPX_FONT_FAMILY_HEADINGS",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_FONT_SIZE_BASE",
          "declaration": {
            "name": "GMPX_FONT_SIZE_BASE",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "getTypeScaleSizeFromPx",
          "declaration": {
            "name": "getTypeScaleSizeFromPx",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_FONT_HEADLINE",
          "declaration": {
            "name": "GMPX_FONT_HEADLINE",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_FONT_TITLE_LARGE",
          "declaration": {
            "name": "GMPX_FONT_TITLE_LARGE",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_FONT_TITLE_MEDIUM",
          "declaration": {
            "name": "GMPX_FONT_TITLE_MEDIUM",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_FONT_BODY",
          "declaration": {
            "name": "GMPX_FONT_BODY",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_FONT_CAPTION",
          "declaration": {
            "name": "GMPX_FONT_CAPTION",
            "module": "src/base/common_styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "GMPX_BORDER_SEPARATOR",
          "declaration": {
            "name": "GMPX_BORDER_SEPARATOR",
            "module": "src/base/common_styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/constants.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "LIBRARY_VERSION",
          "type": {
            "text": "string"
          },
          "default": "'0.6.13'",
          "description": "Package version of this component library."
        },
        {
          "kind": "variable",
          "name": "ATTRIBUTION_SOURCE_ID",
          "type": {
            "text": "string"
          },
          "default": "'GIT'",
          "description": "Identifier of where this component library is sourced from."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LIBRARY_VERSION",
          "declaration": {
            "name": "LIBRARY_VERSION",
            "module": "src/base/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "ATTRIBUTION_SOURCE_ID",
          "declaration": {
            "name": "ATTRIBUTION_SOURCE_ID",
            "module": "src/base/constants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/events.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Event emitted when error occurs in an underlying request to the Google Maps\r\nAPI web service.",
          "name": "RequestErrorEvent",
          "superclass": {
            "name": "Event",
            "module": "src/base/events.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RequestErrorEvent",
          "declaration": {
            "name": "RequestErrorEvent",
            "module": "src/base/events.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/focus_controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Controller to help customize focus behavior depending on if the user is\r\nkeyboard navigating with Tab and Enter.\r\n\r\nThe controller's boolean property `isKeyboardNavigating` is flipped to true\r\nwhen the user presses Tab or Enter, and flipped to false when they click the\r\nmouse.\r\n\r\nThe controller optionally accepts a callback that it calls whenever\r\n`isKeyboardNavigating` changes. This can be used, for example, to toggle a\r\nclass in the host's shadow DOM to remove the default focus ring with CSS,\r\nwhen it appears due to keypresses other than Tab/Enter.",
          "name": "FocusController",
          "members": [
            {
              "kind": "field",
              "name": "isKeyboardNavigatingInternal",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "isKeyboardNavigating",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mousedownEventListener",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "keydownEventListener",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FocusController",
          "declaration": {
            "name": "FocusController",
            "module": "src/base/focus_controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/localization_controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Controller that provides localized string literals (`en-US` by default)\r\nfor use in components of this library.",
          "name": "LocalizationController",
          "members": [
            {
              "kind": "field",
              "name": "connectedComponents",
              "privacy": "private",
              "static": true,
              "readonly": true,
              "default": "new Set<ReactiveElement>()"
            },
            {
              "kind": "field",
              "name": "translatedStringLiterals",
              "type": {
                "text": "Partial<StringLiterals>"
              },
              "privacy": "private",
              "static": true,
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "getStringLiteral",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "args",
                  "type": {
                    "text": "ParametersOrEmpty<StringLiterals[T]>"
                  },
                  "description": "If the value keyed by that ID is a string function, provide\r\none or more inputs as function arguments."
                }
              ],
              "description": "Returns a localized string literal with the specified ID."
            },
            {
              "kind": "method",
              "name": "setStringLiterals",
              "static": true,
              "parameters": [
                {
                  "name": "stringLiterals",
                  "type": {
                    "text": "Partial<StringLiterals>"
                  }
                }
              ],
              "description": "Sets one or many localized string literals in the new locale then\r\nrequests an update for all currently connected components."
            },
            {
              "kind": "method",
              "name": "buildLocalizer",
              "static": true,
              "parameters": [
                {
                  "name": "baseComponent",
                  "type": {
                    "text": "LitElement"
                  }
                }
              ],
              "description": "Builds instance of localizer controller to be used for getting string\r\nliteral messages."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalizationController",
          "declaration": {
            "name": "LocalizationController",
            "module": "src/base/localization_controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/logging_controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Controller that handles logging messages to the web console. Components\r\nshould use this controller rather than calling `console` directly to prepend\r\nuseful information to the messages.",
          "name": "LoggingController",
          "members": [
            {
              "kind": "method",
              "name": "hostUpdate"
            },
            {
              "kind": "method",
              "name": "info",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "unknown[]"
                  }
                }
              ],
              "description": "Outputs an informational message to the web console."
            },
            {
              "kind": "method",
              "name": "warn",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "unknown[]"
                  }
                }
              ],
              "description": "Outputs a warning message to the web console."
            },
            {
              "kind": "method",
              "name": "error",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "unknown[]"
                  }
                }
              ],
              "description": "Outputs an error message to the web console."
            },
            {
              "kind": "method",
              "name": "formatMessage",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Returns a formatted message for display in the web console."
            },
            {
              "kind": "method",
              "name": "prependTagName",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LoggingController",
          "declaration": {
            "name": "LoggingController",
            "module": "src/base/logging_controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/slot_validation_controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Controller that checks the host element for incorrectly slotted children.",
          "name": "SlotValidationController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "checkChildSlotValidity",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "Element"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SlotValidationController",
          "declaration": {
            "name": "SlotValidationController",
            "module": "src/base/slot_validation_controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/strings.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "STRING_LITERALS_EN_US",
          "type": {
            "text": "StringLiterals"
          },
          "description": "String literals in the `en-US` locale."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "STRING_LITERALS_EN_US",
          "declaration": {
            "name": "STRING_LITERALS_EN_US",
            "module": "src/base/strings.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base/web_font_controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Controller that handles loading one or more font resources in the document.",
          "name": "WebFontController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "injectWebFontAsset",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rootNode",
                  "type": {
                    "text": "HTMLElement|DocumentFragment"
                  }
                },
                {
                  "name": "font",
                  "type": {
                    "text": "WebFont"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "WebFontController",
          "declaration": {
            "name": "WebFontController",
            "module": "src/base/web_font_controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/icon_button/icon_button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The icon button component is used for actions in the UI that help users get\r\nthings done with a single tap. It contains an icon and a text label.\r\n\r\nThis element is designed to be visually consistent when used with other\r\ncomponents in the Extended Component Library. For example, Icon Buttons can\r\nbe used in the `action` slot of the [Place\r\nOverview](../place_overview/README.md) component to provide a consistent look\r\nand feel.\r\n\r\n![](doc_src/icon-button.png)",
          "name": "IconButton",
          "cssProperties": [
            {
              "description": "Button text and outline color in the `outlined` variant, or background color in `filled` variant.",
              "name": "--gmpx-color-primary"
            },
            {
              "description": "Button text color in `filled` variant.",
              "name": "--gmpx-color-on-primary"
            },
            {
              "description": "Outline color.",
              "name": "--gmpx-color-outline"
            },
            {
              "description": "Font size for the button.",
              "name": "--gmpx-font-size-base"
            },
            {
              "description": "Font face for the button, except for condensed mode.",
              "name": "--gmpx-font-family-headings"
            },
            {
              "description": "Font face used when the button is in condensed mode.",
              "name": "--gmpx-font-family-base"
            }
          ],
          "slots": [
            {
              "description": "Content to display as the button’s label.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "ariaHasPopup",
              "type": {
                "text": "'true'|'dialog'|'menu'|'listbox'|'tree'|'grid'|\r\n      'false'"
              },
              "default": "'false'",
              "description": "Indicates the availability and type of interactive popup element that can\r\nbe triggered by the button. See:\r\nhttps://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup.\r\n\r\nThis attribute has no effect when `href` is set.",
              "attribute": "aria-haspopup",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string|null"
              },
              "default": "null",
              "description": "A description that gets read by assistive devices. In the case of icon-only\r\nbuttons, you should always include an ARIA label for optimal accessibility.",
              "attribute": "aria-label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "condensed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to render the button in a condensed layout, where the label appears\r\nbelow the icon.",
              "attribute": "condensed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "Set this attribute to a URL to have the Icon Button open it in a new tab,\r\nwhen clicked. Alternatively, specify on-click behavior for this component\r\nby attaching an event listener.\r\n\r\nPer accessibility best practice, the component will render its content\r\ninside an `<a>` instead of `<button>` element when this attribute is set.",
              "attribute": "href",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Name of icon from [Material Symbols Set](https://fonts.google.com/icons) to\r\ndisplay before the button label.\r\n\r\nIf icon is unspecified, then a \"+\" icon will be rendered by default. This\r\ndefault icon is omitted if button has a label or other content and is not\r\nin condensed layout.",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'outlined'|'filled'"
              },
              "default": "'outlined'",
              "description": "Specifies the display style of the button.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hasLabel",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "defaultSlotNodes",
              "type": {
                "text": "Node[] | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "fontLoader",
              "privacy": "protected",
              "readonly": true,
              "default": "new WebFontController(\r\n      this, [WebFont.GOOGLE_SANS_TEXT, WebFont.MATERIAL_SYMBOLS_OUTLINED])"
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderLabel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "aria-haspopup",
              "type": {
                "text": "'true'|'dialog'|'menu'|'listbox'|'tree'|'grid'|\r\n      'false'"
              },
              "default": "'false'",
              "description": "Indicates the availability and type of interactive popup element that can\r\nbe triggered by the button. See:\r\nhttps://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup.\r\n\r\nThis attribute has no effect when `href` is set.",
              "fieldName": "ariaHasPopup"
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string|null"
              },
              "default": "null",
              "description": "A description that gets read by assistive devices. In the case of icon-only\r\nbuttons, you should always include an ARIA label for optimal accessibility.",
              "fieldName": "ariaLabel"
            },
            {
              "name": "condensed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to render the button in a condensed layout, where the label appears\r\nbelow the icon.",
              "fieldName": "condensed"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "Set this attribute to a URL to have the Icon Button open it in a new tab,\r\nwhen clicked. Alternatively, specify on-click behavior for this component\r\nby attaching an event listener.\r\n\r\nPer accessibility best practice, the component will render its content\r\ninside an `<a>` instead of `<button>` element when this attribute is set.",
              "fieldName": "href"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Name of icon from [Material Symbols Set](https://fonts.google.com/icons) to\r\ndisplay before the button label.\r\n\r\nIf icon is unspecified, then a \"+\" icon will be rendered by default. This\r\ndefault icon is omitted if button has a label or other content and is not\r\nin condensed layout.",
              "fieldName": "icon"
            },
            {
              "name": "variant",
              "type": {
                "text": "'outlined'|'filled'"
              },
              "default": "'outlined'",
              "description": "Specifies the display style of the button.",
              "fieldName": "variant"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-icon-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconButton",
          "declaration": {
            "name": "IconButton",
            "module": "src/icon_button/icon_button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-icon-button",
          "declaration": {
            "name": "IconButton",
            "module": "src/icon_button/icon_button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/overlay_layout/overlay_layout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The overlay layout component allows you to display information in a\r\nresponsive panel view that sits on top of main content, like a map or a list.\r\nYou might use this to show a modal dialog, more details about a place, or\r\nsettings.\r\n\r\nThis component helps manage keyboard focus when opening and closing the\r\noverlay.\r\n\r\nThe size of the gmpx-overlay-layout can be set directly with the `width` and\r\n`height` properties. If none are provided, it will fill the size of its\r\ncontaining element.\r\n\r\n![](./doc_src/overlay-layout.gif)\r\n\r\n**To use this component, you'll need to specify `slot=\"main\"` or\r\n`slot=\"overlay\"` on its children.** Read more on using slots\r\n[here](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots#adding_flexibility_with_slots).",
          "name": "OverlayLayout",
          "slots": [
            {
              "description": "Main content, displayed by default.",
              "name": "main"
            },
            {
              "description": "Overlay content that replaces the main content when the panel is opened.",
              "name": "overlay"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mainAssignedEls",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "overlayAssignedEls",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mainContainer",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "overlayContainer",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "mainLastActiveEl",
              "type": {
                "text": "HTMLElement|null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "slotValidator",
              "privacy": "protected",
              "default": "new SlotValidationController(this, this.logger, ['main', 'overlay'])"
            },
            {
              "kind": "method",
              "name": "showOverlay",
              "description": "Opens the overlay panel.\r\n\r\nIf focus is currently in the main content, the focused element will be\r\nsaved to regain focus when closing the overlay. Focus will then move to\r\nthe element in the overlay slot with autofocus, if present. If no element\r\nhas autofocus, the internal overlay container will be focused so that\r\npressing Tab will focus the first interactive element in the overlay slot.\r\n\r\nOverlay content will be scrolled to the top, if the panel was previously\r\nopened and scrolled down."
            },
            {
              "kind": "method",
              "name": "hideOverlay",
              "description": "Closes the overlay panel.\r\n\r\nIf focus is currently in the overlay content, focus will move to the last\r\nfocused main element, if this was saved when opening the panel. If no\r\nfocused element was saved, the internal main container will be focused\r\nso that pressing Tab will focus the first interactive element in the main\r\nslot."
            },
            {
              "kind": "method",
              "name": "handleOverlayKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getContainedActiveEl",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement|null"
                }
              },
              "parameters": [
                {
                  "name": "els",
                  "type": {
                    "text": "Element[]"
                  }
                }
              ],
              "description": "Returns the active element if it's a descendant, even across shadow\r\nboundaries, of one of the elements in els."
            },
            {
              "kind": "method",
              "name": "getMainActiveEl",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement|null"
                }
              }
            },
            {
              "kind": "method",
              "name": "getOverlayActiveEl",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement|null"
                }
              }
            },
            {
              "kind": "method",
              "name": "getOverlayAutofocusEl",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement|null"
                }
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-overlay-layout",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverlayLayout",
          "declaration": {
            "name": "OverlayLayout",
            "module": "src/overlay_layout/overlay_layout.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-overlay-layout",
          "declaration": {
            "name": "OverlayLayout",
            "module": "src/overlay_layout/overlay_layout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_overview/optional_data_container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container component that hides itself if any of its slotted children gains\r\nthe `no-data` boolean attribute.",
          "name": "OptionalDataContainer",
          "members": [
            {
              "kind": "field",
              "name": "observer",
              "type": {
                "text": "MutationObserver | undefined"
              },
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-optional-data-container-internal",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OptionalDataContainer",
          "declaration": {
            "name": "OptionalDataContainer",
            "module": "src/place_overview/optional_data_container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-optional-data-container-internal",
          "declaration": {
            "name": "OptionalDataContainer",
            "module": "src/place_overview/optional_data_container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_overview/place_overview.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The place overview component displays detailed information about millions of\r\nbusinesses, including opening hours, star reviews, and photos, plus\r\ndirections and other actions in a premade UI in 5 sizes and formats.\r\n\r\nThis component can fetch Place data from the GMP Place API, or forward Place\r\ndata provided elsewhere in code. The component may attempt to locally cache\r\nPlace data to avoid redundant API requests.\r\n\r\n(x-large version) Reviews are displayed in an order corresponding to the\r\ndefault behavior of the [Place\r\nAPI](https://developers.google.com/maps/documentation/javascript/reference/place#Place).\r\n\r\n![](./doc_src/place-overview.png)\r\n\r\nThe easiest way to use this component is to start with a Place ID, which can\r\nbe retrieved from various Google Maps APIs or [looked up\r\ndirectly](https://developers.google.com/maps/documentation/javascript/examples/places-placeid-finder).\r\n\r\nThis component is designed to display any provided buttons for custom\r\nactions, such as a [directions\r\nbutton](../place_building_blocks/place_directions_button/README.md) or [icon\r\nbutton](../icon_button/README.md). **Be sure to include `slot=\"action\"` on\r\nthe button components to be shown in the actions row.**",
          "name": "PlaceOverview",
          "cssProperties": [
            {
              "description": "Background color.",
              "name": "--gmpx-color-surface"
            },
            {
              "description": "Main text color.",
              "name": "--gmpx-color-on-surface"
            },
            {
              "description": "Color of less important text such as captions.",
              "name": "--gmpx-color-on-surface-variant"
            },
            {
              "description": "Color of buttons and icons.",
              "name": "--gmpx-color-primary"
            },
            {
              "description": "Color of divider elements and button outlines.",
              "name": "--gmpx-color-outline"
            },
            {
              "description": "Font family for regular text.",
              "name": "--gmpx-font-family-base"
            },
            {
              "description": "Font family for headings.",
              "name": "--gmpx-font-family-headings"
            },
            {
              "description": "Text size, sets scale for the component.",
              "name": "--gmpx-font-size-base"
            },
            {
              "description": "Color of star rating icons.",
              "name": "--gmpx-rating-color"
            },
            {
              "description": "Background color of star rating icons.",
              "name": "--gmpx-rating-color-empty"
            },
            {
              "description": "Opening hours text color when the place is open.",
              "name": "--gmpx-hours-color-open"
            },
            {
              "description": "Opening hours text color when the place is closed.",
              "name": "--gmpx-hours-color-closed"
            }
          ],
          "slots": [
            {
              "description": "Optionally specify elements to be displayed as actions for this Place. We recommend using `<gmpx-icon-button>` elements for this purpose, which are styled consistently with Place Overview and designed to produce the best result. Note that smaller sizes of Place Overview may suppress the display of some or all action elements.",
              "name": "action"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "autoFetchDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If a `Place` or `PlaceResult` is provided for the `place` property, this\r\ncomponent will automatically make API calls to fetch any missing data\r\nfields required for display. However, you can set this attribute to prevent\r\nthe component from making any API calls to fetch missing data. In this\r\ncase, the component will only display information present in the original\r\n`Place` or `PlaceResult` object.",
              "attribute": "auto-fetch-disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "googleLogoAlreadyDisplayed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "This component displays the Google logo to abide by Google Maps Platform\r\n[attribution\r\npolicies](https://developers.google.com/maps/documentation/places/web-service/policies#logo).\r\nHowever, if you otherwise satisfy these requirements (e.g. by placing this\r\ncomponent on the same screen as a Google Map), you may hide the logo.",
              "attribute": "google-logo-already-displayed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "string|Place|PlaceResult | undefined"
              },
              "description": "The place to be displayed by this component. Provide a [Place\r\nID](https://developers.google.com/maps/documentation/places/web-service/place-id)\r\nas a string to have the component look up and display details from the\r\nPlace API. Alternatively, assign a `Place` or `PlaceResult` object to\r\n`place` property to render it directly (note that the attribute, on the\r\nother hand, only accepts a Place ID string).",
              "attribute": "place"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'x-small'|'small'|'medium'|'large'|'x-large'"
              },
              "default": "'x-large'",
              "description": "Specifies a variation of this component, from smallest to largest. Larger\r\nvariations of this component display more data, which may affect cost:\r\n- `x-small` size uses [Basic\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#basic)\r\nand\r\n[Atmosphere\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#atmosphere).\r\n- All other sizes use [Basic\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#basic),\r\n[Contact\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#contact),\r\nand [Atmosphere\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#atmosphere).",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "travelMode",
              "type": {
                "text": "Lowercase<google.maps.TravelMode>"
              },
              "default": "'driving'",
              "description": "Travel mode to be used when computing transit time from `travel-origin`.",
              "attribute": "travel-mode",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "travelOrigin",
              "type": {
                "text": "LatLng|LatLngLiteral|Place | undefined"
              },
              "description": "If specified, small, medium, large, and extra-large versions will\r\ncalculate transit time from this location to the current place, then\r\ndisplay the result."
            },
            {
              "kind": "field",
              "name": "dataProviderElement",
              "type": {
                "text": "PlaceDataProvider | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "fontLoader",
              "privacy": "protected",
              "readonly": true,
              "default": "new WebFontController(\r\n      this, [WebFont.GOOGLE_SANS_TEXT, WebFont.MATERIAL_SYMBOLS_OUTLINED])"
            },
            {
              "kind": "field",
              "name": "slotValidator",
              "privacy": "protected",
              "readonly": true,
              "default": "new SlotValidationController(this, this.logger, ['action'])"
            },
            {
              "kind": "field",
              "name": "getMsg",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "getDisplayNameClass",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "renderHeaderSuffixContent",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "renderCondensedSummary",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "renderSummary",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "renderContacts",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "renderReviews",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "forwardRequestError",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "RequestErrorEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "RequestErrorEvent"
              },
              "description": "Indicates an error condition in an underlying Google Maps JavaScript API call.",
              "name": "gmpx-requesterror",
              "reactName": "onRequestError"
            }
          ],
          "attributes": [
            {
              "name": "auto-fetch-disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If a `Place` or `PlaceResult` is provided for the `place` property, this\r\ncomponent will automatically make API calls to fetch any missing data\r\nfields required for display. However, you can set this attribute to prevent\r\nthe component from making any API calls to fetch missing data. In this\r\ncase, the component will only display information present in the original\r\n`Place` or `PlaceResult` object.",
              "fieldName": "autoFetchDisabled"
            },
            {
              "name": "google-logo-already-displayed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "This component displays the Google logo to abide by Google Maps Platform\r\n[attribution\r\npolicies](https://developers.google.com/maps/documentation/places/web-service/policies#logo).\r\nHowever, if you otherwise satisfy these requirements (e.g. by placing this\r\ncomponent on the same screen as a Google Map), you may hide the logo.",
              "fieldName": "googleLogoAlreadyDisplayed"
            },
            {
              "name": "place",
              "type": {
                "text": "string|Place|PlaceResult | undefined"
              },
              "description": "The place to be displayed by this component. Provide a [Place\r\nID](https://developers.google.com/maps/documentation/places/web-service/place-id)\r\nas a string to have the component look up and display details from the\r\nPlace API. Alternatively, assign a `Place` or `PlaceResult` object to\r\n`place` property to render it directly (note that the attribute, on the\r\nother hand, only accepts a Place ID string).",
              "fieldName": "place"
            },
            {
              "name": "size",
              "type": {
                "text": "'x-small'|'small'|'medium'|'large'|'x-large'"
              },
              "default": "'x-large'",
              "description": "Specifies a variation of this component, from smallest to largest. Larger\r\nvariations of this component display more data, which may affect cost:\r\n- `x-small` size uses [Basic\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#basic)\r\nand\r\n[Atmosphere\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#atmosphere).\r\n- All other sizes use [Basic\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#basic),\r\n[Contact\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#contact),\r\nand [Atmosphere\r\nData](https://developers.google.com/maps/documentation/javascript/place-data-fields#atmosphere).",
              "fieldName": "size"
            },
            {
              "name": "travel-mode",
              "type": {
                "text": "Lowercase<google.maps.TravelMode>"
              },
              "default": "'driving'",
              "description": "Travel mode to be used when computing transit time from `travel-origin`.",
              "fieldName": "travelMode"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-place-overview",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlaceOverview",
          "declaration": {
            "name": "PlaceOverview",
            "module": "src/place_overview/place_overview.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-overview",
          "declaration": {
            "name": "PlaceOverview",
            "module": "src/place_overview/place_overview.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_data_consumer.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "placeContext"
        },
        {
          "kind": "variable",
          "name": "placeConsumerRegistrationContext"
        },
        {
          "kind": "class",
          "description": "Base class for components which render Place data provided elsewhere; i.e.\r\nPlace Representation Building Blocks.\r\n\r\nThis class implements functionality to retrieve a `Place` or `PlaceResult`\r\nvia context from a parent `<gmpx-place-data-provider>` component.",
          "name": "PlaceDataConsumer",
          "members": [
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context."
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated."
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found."
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "placeContext",
          "declaration": {
            "name": "placeContext",
            "module": "src/place_building_blocks/place_data_consumer.ts"
          }
        },
        {
          "kind": "js",
          "name": "placeConsumerRegistrationContext",
          "declaration": {
            "name": "placeConsumerRegistrationContext",
            "module": "src/place_building_blocks/place_data_consumer.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceDataConsumer",
          "declaration": {
            "name": "PlaceDataConsumer",
            "module": "src/place_building_blocks/place_data_consumer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_picker/place_picker.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PLACE_DATA_FIELDS",
          "description": "Data field names in a `Place` that are fetched by Place Picker."
        },
        {
          "kind": "variable",
          "name": "PLACE_RESULT_DATA_FIELDS",
          "description": "Data field names in a `PlaceResult` that are fetched by Place Picker."
        },
        {
          "kind": "class",
          "description": "The place picker component is a text input that allows end users to search\r\nGoogle Maps’ global database for a specific address or place using\r\nautocomplete.\r\n\r\n![](./doc_src/place-picker.gif)",
          "name": "PlacePicker",
          "cssProperties": [
            {
              "description": "Background color of the input.",
              "name": "--gmpx-color-surface"
            },
            {
              "description": "Main text color.",
              "name": "--gmpx-color-on-surface"
            },
            {
              "description": "Color of the input focus ring.",
              "name": "--gmpx-color-primary"
            },
            {
              "description": "Font family.",
              "name": "--gmpx-font-family-base"
            },
            {
              "description": "Font size, used to scale the component.",
              "name": "--gmpx-font-size-base"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "country",
              "type": {
                "text": "string[] | undefined"
              },
              "description": "Restricts predictions to up to five countries identified by their ISO\r\n3166-1 Alpha-2 country codes, case insensitive ('us', 'br', 'au', etc.).\r\n\r\nMultiple country codes can be specified in the attribute as a set of\r\nspace-separated tokens (for example, \"us ca\").",
              "attribute": "country",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "forMap",
              "type": {
                "text": "string | undefined"
              },
              "description": "The HTML id of a `<gmp-map>` element on the page that Place Autocomplete\r\nshould bind to for location biasing. Note that the map need not be a parent\r\nof the current element.",
              "attribute": "for-map",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "locationBias",
              "type": {
                "text": "google.maps.LatLngLiteral | undefined"
              },
              "description": "Location of the region to bias predictions towards (or restrict if\r\n`strict-bounds` is set), in \"lat,lng\" format.\r\n\r\nThis attribute must be used in conjunction with `radius`.",
              "attribute": "location-bias",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Placeholder text to display before the user has entered any input.",
              "attribute": "placeholder",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "radius",
              "type": {
                "text": "number | undefined"
              },
              "description": "Radius of the region, in meters, to bias predictions towards.\r\n\r\nThis attribute must be used in conjunction with `location-bias`.",
              "attribute": "radius",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "strictBounds",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If true, only predictions that are within the specified location/radius\r\nor map viewport will be returned.\r\n\r\nSetting this property to false (which is the default) will make the results\r\nbiased towards, but not restricted to, places contained within the bounds.",
              "attribute": "strict-bounds",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string | undefined"
              },
              "description": "The type of predictions to return. Some examples include “restaurant”,\r\n“country” and “address”. This property supports any one type found in\r\nTables 1~3 of [Place\r\nTypes](https://developers.google.com/maps/documentation/javascript/supported_types).\r\n\r\nIf no type is specified, predictions of all types will be returned.",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Place|null|undefined"
              },
              "description": "This readonly property contains data about the user-selected place.\r\n\r\nIf the user selects a valid place, then the object is guaranteed to contain\r\nat minimum its Place ID, along with all available [Basic Data\r\nfields](https://developers.google.com/maps/documentation/places/web-service/place-data-fields#basic).\r\n\r\nThis property is undefined when user input is empty, and null when no\r\nresults are found based on user input.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "valueInternal",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "disableSearch",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "hideClearButton",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "inputElement",
              "type": {
                "text": "HTMLInputElement | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "clearButtonElement",
              "type": {
                "text": "HTMLButtonElement | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "searchButtonElement",
              "type": {
                "text": "HTMLButtonElement | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "focusController",
              "privacy": "protected",
              "readonly": true,
              "default": "new FocusController(this)"
            },
            {
              "kind": "field",
              "name": "fontLoader",
              "privacy": "protected",
              "readonly": true,
              "default": "new WebFontController(\r\n      this, [WebFont.GOOGLE_SANS_TEXT, WebFont.MATERIAL_SYMBOLS_OUTLINED])"
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "privacy": "private",
              "readonly": true,
              "default": "new Deferred<Autocomplete>()"
            },
            {
              "kind": "field",
              "name": "getMsg",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "bindTo",
              "parameters": [
                {
                  "name": "map",
                  "type": {
                    "text": "google.maps.Map"
                  }
                }
              ],
              "description": "Binds Place Autocomplete to the specified map so that its results are\r\nbiased towards the map’s viewport."
            },
            {
              "kind": "method",
              "name": "getMapById",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<google.maps.Map|null>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Finds a `<gmp-map>` element under the same root node as this component with\r\nthe specified HTML ID and returns its inner `google.maps.Map` object.\r\n\r\nNote that this method may block indefinitely if the `<gmp-map>` custom\r\nelement never gets defined."
            },
            {
              "kind": "method",
              "name": "shouldUpdateAutocompleteOptions",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "makeAutocompleteOptions",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<AutocompleteOptions>"
                }
              }
            },
            {
              "kind": "method",
              "name": "initializeAutocomplete",
              "privacy": "private",
              "parameters": [
                {
                  "name": "inputElement",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "search",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<Place|null>"
                }
              },
              "parameters": [
                {
                  "name": "query",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Fetches a Place object based on input query when the user does not select\r\none of the Place Autocomplete predictions, or null if no result is found."
            },
            {
              "kind": "method",
              "name": "searchWithFindPlaceFromQuery",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<PlaceResult[]>"
                }
              },
              "parameters": [
                {
                  "name": "request",
                  "type": {
                    "text": "google.maps.places.FindPlaceFromQueryRequest"
                  }
                }
              ],
              "description": "Looks up a Place using the GA API."
            },
            {
              "kind": "method",
              "name": "handleClear",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "{target: HTMLInputElement}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearch",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateInputTextFromPlace",
              "privacy": "private",
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "gmpx-placechange",
              "type": {
                "text": "Event"
              },
              "description": "This event is fired when a Place object is made available for a Place the user has selected, when user clears the input after selection, or when no Place result is found based on the input query.",
              "reactName": "onPlaceChange"
            },
            {
              "type": {
                "text": "RequestErrorEvent"
              },
              "description": "Indicates an error condition in an underlying Google Maps JavaScript API call.",
              "name": "gmpx-requesterror",
              "reactName": "onRequestError"
            }
          ],
          "attributes": [
            {
              "name": "country",
              "type": {
                "text": "string[] | undefined"
              },
              "description": "Restricts predictions to up to five countries identified by their ISO\r\n3166-1 Alpha-2 country codes, case insensitive ('us', 'br', 'au', etc.).\r\n\r\nMultiple country codes can be specified in the attribute as a set of\r\nspace-separated tokens (for example, \"us ca\").",
              "fieldName": "country"
            },
            {
              "name": "for-map",
              "type": {
                "text": "string | undefined"
              },
              "description": "The HTML id of a `<gmp-map>` element on the page that Place Autocomplete\r\nshould bind to for location biasing. Note that the map need not be a parent\r\nof the current element.",
              "fieldName": "forMap"
            },
            {
              "name": "location-bias",
              "type": {
                "text": "google.maps.LatLngLiteral | undefined"
              },
              "description": "Location of the region to bias predictions towards (or restrict if\r\n`strict-bounds` is set), in \"lat,lng\" format.\r\n\r\nThis attribute must be used in conjunction with `radius`.",
              "fieldName": "locationBias"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Placeholder text to display before the user has entered any input.",
              "fieldName": "placeholder"
            },
            {
              "name": "radius",
              "type": {
                "text": "number | undefined"
              },
              "description": "Radius of the region, in meters, to bias predictions towards.\r\n\r\nThis attribute must be used in conjunction with `location-bias`.",
              "fieldName": "radius"
            },
            {
              "name": "strict-bounds",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If true, only predictions that are within the specified location/radius\r\nor map viewport will be returned.\r\n\r\nSetting this property to false (which is the default) will make the results\r\nbiased towards, but not restricted to, places contained within the bounds.",
              "fieldName": "strictBounds"
            },
            {
              "name": "type",
              "type": {
                "text": "string | undefined"
              },
              "description": "The type of predictions to return. Some examples include “restaurant”,\r\n“country” and “address”. This property supports any one type found in\r\nTables 1~3 of [Place\r\nTypes](https://developers.google.com/maps/documentation/javascript/supported_types).\r\n\r\nIf no type is specified, predictions of all types will be returned.",
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-place-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PLACE_DATA_FIELDS",
          "declaration": {
            "name": "PLACE_DATA_FIELDS",
            "module": "src/place_picker/place_picker.ts"
          }
        },
        {
          "kind": "js",
          "name": "PLACE_RESULT_DATA_FIELDS",
          "declaration": {
            "name": "PLACE_RESULT_DATA_FIELDS",
            "module": "src/place_picker/place_picker.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlacePicker",
          "declaration": {
            "name": "PlacePicker",
            "module": "src/place_picker/place_picker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-picker",
          "declaration": {
            "name": "PlacePicker",
            "module": "src/place_picker/place_picker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "APILoader"
        },
        {
          "kind": "variable",
          "name": "IconButton"
        },
        {
          "kind": "variable",
          "name": "OverlayLayout"
        },
        {
          "kind": "variable",
          "name": "PlaceAttribution"
        },
        {
          "kind": "variable",
          "name": "PlaceDataProvider"
        },
        {
          "kind": "variable",
          "name": "PlaceDirectionsButton"
        },
        {
          "kind": "variable",
          "name": "PlaceFieldBoolean"
        },
        {
          "kind": "variable",
          "name": "PlaceFieldLink"
        },
        {
          "kind": "variable",
          "name": "PlaceFieldText"
        },
        {
          "kind": "variable",
          "name": "PlaceOpeningHours"
        },
        {
          "kind": "variable",
          "name": "PlaceOverview"
        },
        {
          "kind": "variable",
          "name": "PlacePhotoGallery"
        },
        {
          "kind": "variable",
          "name": "PlacePicker"
        },
        {
          "kind": "variable",
          "name": "PlacePriceLevel"
        },
        {
          "kind": "variable",
          "name": "PlaceRating"
        },
        {
          "kind": "variable",
          "name": "PlaceReviews"
        },
        {
          "kind": "variable",
          "name": "RouteDataProvider"
        },
        {
          "kind": "variable",
          "name": "RouteMarker"
        },
        {
          "kind": "variable",
          "name": "RouteOverview"
        },
        {
          "kind": "variable",
          "name": "RoutePolyline"
        },
        {
          "kind": "variable",
          "name": "SplitLayout"
        },
        {
          "kind": "variable",
          "name": "StoreLocator"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "APILoader",
          "declaration": {
            "name": "APILoader",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "IconButton",
          "declaration": {
            "name": "IconButton",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "OverlayLayout",
          "declaration": {
            "name": "OverlayLayout",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceAttribution",
          "declaration": {
            "name": "PlaceAttribution",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceDataProvider",
          "declaration": {
            "name": "PlaceDataProvider",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceDirectionsButton",
          "declaration": {
            "name": "PlaceDirectionsButton",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldBoolean",
          "declaration": {
            "name": "PlaceFieldBoolean",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldLink",
          "declaration": {
            "name": "PlaceFieldLink",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldText",
          "declaration": {
            "name": "PlaceFieldText",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceOpeningHours",
          "declaration": {
            "name": "PlaceOpeningHours",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceOverview",
          "declaration": {
            "name": "PlaceOverview",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlacePhotoGallery",
          "declaration": {
            "name": "PlacePhotoGallery",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlacePicker",
          "declaration": {
            "name": "PlacePicker",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlacePriceLevel",
          "declaration": {
            "name": "PlacePriceLevel",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceRating",
          "declaration": {
            "name": "PlaceRating",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceReviews",
          "declaration": {
            "name": "PlaceReviews",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "RouteDataProvider",
          "declaration": {
            "name": "RouteDataProvider",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "RouteMarker",
          "declaration": {
            "name": "RouteMarker",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "RouteOverview",
          "declaration": {
            "name": "RouteOverview",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "RoutePolyline",
          "declaration": {
            "name": "RoutePolyline",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "SplitLayout",
          "declaration": {
            "name": "SplitLayout",
            "module": "src/react/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "StoreLocator",
          "declaration": {
            "name": "StoreLocator",
            "module": "src/react/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/route_building_blocks/map_controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Controller that finds a containing `<gmp-map>` element in the DOM when its\r\nhost is connected, and saves a reference to the internal Map for the host to\r\nuse.",
          "name": "MapController",
          "members": [
            {
              "kind": "field",
              "name": "deferredMap",
              "privacy": "private",
              "default": "new Deferred<google.maps.Map>()"
            },
            {
              "kind": "field",
              "name": "map",
              "type": {
                "text": "google.maps.Map|undefined"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mapPromise",
              "type": {
                "text": "Promise<google.maps.Map>"
              },
              "description": "Resolves to the map when it's ready. It might not be ready immediately due\r\nto delays in connecting the host or loading the `<gmp-map>` component from\r\nthe Maps JS API.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "viewportManager",
              "type": {
                "text": "ViewportManager | undefined"
              },
              "description": "The viewport manager instance for the map. This is first defined when `map`\r\nis defined, so it can be safely accessed after awaiting `mapPromise`.\r\n\r\nWhen the host is disconnected and `map` is unset, `viewportManager` remains\r\nset to the most recent viewport manager, so that components can be\r\nunregistered in the host's `disconnectedCallback`."
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "getContainingGmpMap",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Element|null"
                }
              },
              "description": "Finds and returns a `<gmp-map>` in the DOM that contains the host element,\r\neven if the host is in a shadow root. The `<gmp-map>` is identified by its\r\ntag and might not be an instance of MapElement, if the custom element is\r\nnot yet defined."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MapController",
          "declaration": {
            "name": "MapController",
            "module": "src/route_building_blocks/map_controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/route_building_blocks/route_data_consumer.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "routeContext",
          "description": "The context shared by `RouteDataProvider` and `RouteDataConsumer`."
        },
        {
          "kind": "class",
          "description": "Base class for components which render route data provided elsewhere; i.e.\r\nroute building blocks.\r\n\r\nThis class implements functionality to retrieve route data via context from a\r\nparent `<gmpx-route-data-provider>` component.",
          "name": "RouteDataConsumer",
          "members": [
            {
              "kind": "field",
              "name": "route",
              "type": {
                "text": "DirectionsRoute | undefined"
              },
              "description": "Route data to render, overriding anything provided by context."
            },
            {
              "kind": "method",
              "name": "getRoute",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DirectionsRoute|undefined"
                }
              },
              "description": "Returns the `DirectionsRoute` to be used when rendering.\r\n\r\nIf a route data object is specified directly on the component as a\r\nproperty, it will take priority. Otherwise, this method attempts to return\r\none provided by a parent `<gmpx-route-data-provider>` element."
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "routeContext",
          "declaration": {
            "name": "routeContext",
            "module": "src/route_building_blocks/route_data_consumer.ts"
          }
        },
        {
          "kind": "js",
          "name": "RouteDataConsumer",
          "declaration": {
            "name": "RouteDataConsumer",
            "module": "src/route_building_blocks/route_data_consumer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/route_building_blocks/viewport_manager.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Manages a map's viewport to fit the bounds of one or several `LatLngBounded`\r\ncomponents.",
          "name": "ViewportManager",
          "members": [
            {
              "kind": "field",
              "name": "instances",
              "privacy": "private",
              "static": true,
              "readonly": true,
              "default": "new Map<MapElement, ViewportManager>()"
            },
            {
              "kind": "method",
              "name": "getInstanceForMap",
              "static": true,
              "parameters": [
                {
                  "name": "map",
                  "type": {
                    "text": "MapElement"
                  }
                }
              ],
              "description": "Returns the `ViewportManager` instance for the given `MapElement`,\r\nconstructing one if none exists already. Each `MapElement` will have only\r\none associated `ViewportManager` instance."
            },
            {
              "kind": "field",
              "name": "managedComponents",
              "privacy": "private",
              "readonly": true,
              "default": "new Set<LatLngBounded>()"
            },
            {
              "kind": "method",
              "name": "register",
              "parameters": [
                {
                  "name": "component",
                  "type": {
                    "text": "LatLngBounded"
                  }
                }
              ],
              "description": "Registers a `LatLngBounded` component to be included in the viewport.\r\nTriggers an `updateViewport()` if the component was not already registered."
            },
            {
              "kind": "method",
              "name": "unregister",
              "parameters": [
                {
                  "name": "component",
                  "type": {
                    "text": "LatLngBounded"
                  }
                }
              ],
              "description": "If the given `LatLngBounded` component is registered, unregisters it and\r\ntriggers an `updateViewport()`."
            },
            {
              "kind": "method",
              "name": "updateViewport",
              "description": "Updates the map's viewport to fit all registered `LatLngBounded`\r\ncomponents."
            },
            {
              "kind": "method",
              "name": "getBoundsUnion",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<LatLngBounds|null>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ViewportManager",
          "declaration": {
            "name": "ViewportManager",
            "module": "src/route_building_blocks/viewport_manager.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/route_overview/route_overview.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The route overview component renders a route on a `<gmp-map>` component,\r\nincluding origin and destination markers, an outlined polyline, and viewport\r\nmanagement.\r\n\r\nThis component can fetch route data from the Directions API, or use a\r\n`DirectionsRoute` object provided from elsewhere in code. The component will\r\nlocally cache route data to avoid redundant API requests.",
          "name": "RouteOverview",
          "members": [
            {
              "kind": "field",
              "name": "destinationLatLng",
              "type": {
                "text": "LatLng|LatLngLiteral | undefined"
              },
              "description": "The destination of the directions request as a lat/lng. When setting the\r\ndestination, only one of lat/lng, Place ID, or address should be specified.",
              "attribute": "destination-lat-lng",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "destinationPlaceId",
              "type": {
                "text": "string | undefined"
              },
              "description": "The destination of the directions request as a Place ID. When setting the\r\ndestination, only one of lat/lng, Place ID, or address should be specified.",
              "attribute": "destination-place-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "destinationAddress",
              "type": {
                "text": "string | undefined"
              },
              "description": "The destination of the directions request as an address query. When setting\r\nthe destination, only one of lat/lng, Place ID, or address should be\r\nspecified.",
              "attribute": "destination-address",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "originLatLng",
              "type": {
                "text": "LatLng|LatLngLiteral | undefined"
              },
              "description": "The origin of the directions request as a lat/lng. When setting the origin,\r\nonly one of lat/lng, Place ID, or address should be specified.",
              "attribute": "origin-lat-lng",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "originPlaceId",
              "type": {
                "text": "string | undefined"
              },
              "description": "The origin of the directions request as a Place ID. When setting the\r\norigin, only one of lat/lng, Place ID, or address should be specified.",
              "attribute": "origin-place-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "originAddress",
              "type": {
                "text": "string | undefined"
              },
              "description": "The origin of the directions request as an address query. When setting the\r\norigin, only one of lat/lng, Place ID, or address should be specified.",
              "attribute": "origin-address",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "route",
              "type": {
                "text": "DirectionsRoute | undefined"
              },
              "description": "Route data to render directly, instead of making an API call."
            },
            {
              "kind": "field",
              "name": "travelMode",
              "type": {
                "text": "Lowercase<google.maps.TravelMode>"
              },
              "default": "'driving'",
              "description": "The travel mode of the directions request.",
              "attribute": "travel-mode",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "noPin",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the red pin displayed at the destination.",
              "attribute": "no-pin",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "numConstructed",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "static": true,
              "default": "0"
            },
            {
              "kind": "field",
              "name": "zIndex",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true
            }
          ],
          "events": [
            {
              "type": {
                "text": "RequestErrorEvent"
              },
              "description": "Indicates an error condition in an underlying Google Maps JavaScript API call.",
              "name": "gmpx-requesterror",
              "reactName": "onRequestError"
            }
          ],
          "attributes": [
            {
              "name": "destination-lat-lng",
              "type": {
                "text": "LatLng|LatLngLiteral | undefined"
              },
              "description": "The destination of the directions request as a lat/lng. When setting the\r\ndestination, only one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "destinationLatLng"
            },
            {
              "name": "destination-place-id",
              "type": {
                "text": "string | undefined"
              },
              "description": "The destination of the directions request as a Place ID. When setting the\r\ndestination, only one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "destinationPlaceId"
            },
            {
              "name": "destination-address",
              "type": {
                "text": "string | undefined"
              },
              "description": "The destination of the directions request as an address query. When setting\r\nthe destination, only one of lat/lng, Place ID, or address should be\r\nspecified.",
              "fieldName": "destinationAddress"
            },
            {
              "name": "origin-lat-lng",
              "type": {
                "text": "LatLng|LatLngLiteral | undefined"
              },
              "description": "The origin of the directions request as a lat/lng. When setting the origin,\r\nonly one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "originLatLng"
            },
            {
              "name": "origin-place-id",
              "type": {
                "text": "string | undefined"
              },
              "description": "The origin of the directions request as a Place ID. When setting the\r\norigin, only one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "originPlaceId"
            },
            {
              "name": "origin-address",
              "type": {
                "text": "string | undefined"
              },
              "description": "The origin of the directions request as an address query. When setting the\r\norigin, only one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "originAddress"
            },
            {
              "name": "travel-mode",
              "type": {
                "text": "Lowercase<google.maps.TravelMode>"
              },
              "default": "'driving'",
              "description": "The travel mode of the directions request.",
              "fieldName": "travelMode"
            },
            {
              "name": "no-pin",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the red pin displayed at the destination.",
              "fieldName": "noPin"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-route-overview",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RouteOverview",
          "declaration": {
            "name": "RouteOverview",
            "module": "src/route_overview/route_overview.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-route-overview",
          "declaration": {
            "name": "RouteOverview",
            "module": "src/route_overview/route_overview.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/split_layout/split_layout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The split layout component allows you to display custom HTML information in a\r\nresponsive panel view alongside main content. In a narrow container, such as\r\na mobile viewport, the panel will be shown below the main content.\r\n\r\n![](./doc_src/split-layout.png)\r\n\r\n**To use this component, you'll need to specify `slot=\"main\"` or\r\n`slot=\"fixed\"` on its children.** Read more on using slots\r\n[here](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots#adding_flexibility_with_slots).",
          "name": "SplitLayout",
          "cssProperties": [
            {
              "description": "Controls the fixed panel width when the component is displayed in row direction. Main content width will adjust automatically to fill remaining space.",
              "name": "--gmpx-fixed-panel-width-row-layout",
              "default": "320px"
            },
            {
              "description": "Controls the fixed panel height when the component is displayed in column direction. Main content height will adjust automatically to fill remaining space.",
              "name": "--gmpx-fixed-panel-height-column-layout",
              "default": "50%"
            }
          ],
          "slots": [
            {
              "description": "Main content.",
              "name": "main"
            },
            {
              "description": "Content to be slotted inside the panel with fixed width/height. This panel is displayed on the side of main content when the component has sufficient width, or below main content otherwise.",
              "name": "fixed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "columnReverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "By default, the fixed panel is rendered below the main content when layout\r\nis in column direction. If this attribute is specified, then the fixed\r\npanel will appear above the main content instead.",
              "attribute": "column-reverse",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rowLayoutMinWidth",
              "type": {
                "text": "number"
              },
              "default": "640",
              "description": "When the component’s width in pixels is less than this amount, it displays\r\nin a mobile-friendly column layout instead.",
              "attribute": "row-layout-min-width",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rowReverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "By default, the fixed panel is rendered before the main content when layout\r\nis in row direction (left for LTR and vice versa). If this attribute is\r\nspecified, then the fixed panel will appear after the main content instead\r\n(right for LTR and vice versa).",
              "attribute": "row-reverse",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hasRowLayout",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "slotValidator",
              "privacy": "protected",
              "default": "new SlotValidationController(this, this.logger, ['main', 'fixed'])"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateLayout",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "column-reverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "By default, the fixed panel is rendered below the main content when layout\r\nis in column direction. If this attribute is specified, then the fixed\r\npanel will appear above the main content instead.",
              "fieldName": "columnReverse"
            },
            {
              "name": "row-layout-min-width",
              "type": {
                "text": "number"
              },
              "default": "640",
              "description": "When the component’s width in pixels is less than this amount, it displays\r\nin a mobile-friendly column layout instead.",
              "fieldName": "rowLayoutMinWidth"
            },
            {
              "name": "row-reverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "By default, the fixed panel is rendered before the main content when layout\r\nis in row direction (left for LTR and vice versa). If this attribute is\r\nspecified, then the fixed panel will appear after the main content instead\r\n(right for LTR and vice versa).",
              "fieldName": "rowReverse"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-split-layout",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SplitLayout",
          "declaration": {
            "name": "SplitLayout",
            "module": "src/split_layout/split_layout.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-split-layout",
          "declaration": {
            "name": "SplitLayout",
            "module": "src/split_layout/split_layout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/store_locator/distances.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A utility for calculating distances from a single point to N other points.\r\n\r\nThis class combines the Maps JS Distance Matrix API with a global request\r\ncache and a fallback for when N is more than allowed by the API.",
          "name": "DistanceMeasurer",
          "members": [
            {
              "kind": "field",
              "name": "service",
              "type": {
                "text": "google.maps.DistanceMatrixService | undefined"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "cache",
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "computeDistances",
              "return": {
                "type": {
                  "text": "Promise<DistanceInfo[]>"
                }
              },
              "parameters": [
                {
                  "name": "origin",
                  "type": {
                    "text": "LatLng|LatLngLiteral"
                  }
                },
                {
                  "name": "destinations",
                  "type": {
                    "text": "Array<LatLng|LatLngLiteral>"
                  }
                },
                {
                  "name": "units",
                  "type": {
                    "text": "google.maps.UnitSystem"
                  }
                }
              ],
              "description": "Computes travel distance between `origin` and each of the `destinations`.\r\n\r\nIf there are more than 25 `destinations`, the Distance Matrix API cannot\r\nprocess them in a single request. In this case, the method will assign\r\na geometric distance to all N `destinations`, then use Distance Matrix\r\nto compute accurate distances to the nearest 25 options."
            },
            {
              "kind": "method",
              "name": "getService",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<google.maps.DistanceMatrixService>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DistanceMeasurer",
          "declaration": {
            "name": "DistanceMeasurer",
            "module": "src/store_locator/distances.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/store_locator/interfaces.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FeatureSet",
          "type": {
            "text": "{\r\n  ADVANCED: 'advanced',\r\n  INTERMEDIATE: 'intermediate',\r\n  BASIC: 'basic'\r\n}"
          },
          "default": "{\r\n  ADVANCED: 'advanced',\r\n  INTERMEDIATE: 'intermediate',\r\n  BASIC: 'basic'\r\n}",
          "description": "Capabilities for a Store Locator component."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FeatureSet",
          "declaration": {
            "name": "FeatureSet",
            "module": "src/store_locator/interfaces.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/store_locator/quick_builder.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "convertLocations",
          "return": {
            "type": {
              "text": "StoreLocatorListing[]"
            }
          },
          "parameters": [
            {
              "name": "configuration",
              "type": {
                "text": "QuickBuilderConfiguration"
              }
            }
          ],
          "description": "Generates listing objects from a Quick Builder configuration."
        },
        {
          "kind": "function",
          "name": "getFeatureSet",
          "return": {
            "type": {
              "text": "FeatureSet"
            }
          },
          "parameters": [
            {
              "name": "configuration",
              "type": {
                "text": "QuickBuilderConfiguration"
              }
            }
          ],
          "description": "Maps Quick Builder configuration capabilities to a Store Locator\r\n`featureSet`."
        },
        {
          "kind": "function",
          "name": "getMapOptions",
          "return": {
            "type": {
              "text": "Partial<google.maps.MapOptions>"
            }
          },
          "parameters": [
            {
              "name": "configuration",
              "type": {
                "text": "QuickBuilderConfiguration"
              }
            }
          ],
          "description": "Sanitizes Quick Builder generated map options."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "convertLocations",
          "declaration": {
            "name": "convertLocations",
            "module": "src/store_locator/quick_builder.ts"
          }
        },
        {
          "kind": "js",
          "name": "getFeatureSet",
          "declaration": {
            "name": "getFeatureSet",
            "module": "src/store_locator/quick_builder.ts"
          }
        },
        {
          "kind": "js",
          "name": "getMapOptions",
          "declaration": {
            "name": "getMapOptions",
            "module": "src/store_locator/quick_builder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/store_locator/store_locator.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The store locator component displays an experience where your website's users\r\ncan browse a list of locations, find the nearest one, and view details.\r\n\r\nWhile store locations are the most common use case, you can use this\r\ncomponent to show many nearby points of interest like parks, ATMs, or gas\r\nstations.\r\n\r\nTo use `<gmpx-store-locator>`, pass it a JavaScript array containing the\r\nlocations you want to present. Each location, called a listing, is defined as\r\nan object with the following properties:\r\n\r\n```\r\ninterface StoreLocatorListing {\r\n  // Name of the location or store\r\n  title: string;\r\n\r\n  // Address lines, used when displaying the list.\r\n  addressLines?: string[];\r\n\r\n  // Geographic coordinates of the location\r\n  position: LatLng|LatLngLiteral;\r\n\r\n  // Place ID for this location, used to retrieve additional details\r\n  placeId?: string;\r\n\r\n  // Optional list of additional actions to display with each location\r\n  actions?: StoreLocatorAction[];\r\n}\r\n\r\ninterface StoreLocatorAction {\r\n  // Button label for this action\r\n  label: string;\r\n\r\n  // URI that will be opened in a new tab\r\n  defaultUri?: string;\r\n}\r\n```\r\n\r\nSee below for a full example.",
          "name": "StoreLocator",
          "cssProperties": [
            {
              "description": "Background color.",
              "name": "--gmpx-color-surface"
            },
            {
              "description": "Main text color.",
              "name": "--gmpx-color-on-surface"
            },
            {
              "description": "Color of less important text such as captions.",
              "name": "--gmpx-color-on-surface-variant"
            },
            {
              "description": "Color of buttons and icons.",
              "name": "--gmpx-color-primary"
            },
            {
              "description": "Button outline and divider color.",
              "name": "--gmpx-color-outline"
            },
            {
              "description": "Controls the side panel width when the component is displayed in row direction. The map width will adjust automatically to fill remaining space.",
              "name": "--gmpx-fixed-panel-width-row-layout",
              "default": "28.5em"
            },
            {
              "description": "Controls the side panel height when the component is displayed in column direction. The map height will adjust automatically to fill remaining space.",
              "name": "--gmpx-fixed-panel-height-column-layout",
              "default": "65%"
            },
            {
              "description": "Font family for regular text.",
              "name": "--gmpx-font-family-base"
            },
            {
              "description": "Font family for headings.",
              "name": "--gmpx-font-family-headings"
            },
            {
              "description": "Text size, sets scale for the component.",
              "name": "--gmpx-font-size-base"
            },
            {
              "description": "Opening hours text color when the place is open (`advanced` feature set only).",
              "name": "--gmpx-hours-color-open"
            },
            {
              "description": "Opening hours text color when the place is closed (`advanced` feature set only).",
              "name": "--gmpx-hours-color-closed"
            },
            {
              "description": "Color of star rating icons in the details view (`advanced` feature set only).",
              "name": "--gmpx-rating-color"
            },
            {
              "description": "Background color of star rating icons in the details view (`advanced` feature set only).",
              "name": "--gmpx-rating-color-empty"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "featureSet",
              "type": {
                "text": "FeatureSet"
              },
              "description": "Chooses the capabilities of this store locator:\r\n\r\n* `'basic'` shows a list of locations with pins on a map.\r\n\r\n* `'intermediate'` adds a search input so users can find the location\r\nclosest to them.\r\n\r\n* `'advanced'` brings in a Place details view to show photos, hours, and\r\nreviews for each location.",
              "attribute": "feature-set",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "mapId",
              "type": {
                "text": "string | undefined"
              },
              "description": "The Map ID of the map. See the [Map ID\r\ndocumentation](https://developers.google.com/maps/documentation/get-map-id)\r\nfor more information.",
              "attribute": "map-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "listings",
              "type": {
                "text": "StoreLocatorListing[] | undefined"
              },
              "description": "List of locations to display in the store locator."
            },
            {
              "kind": "field",
              "name": "mapOptions",
              "type": {
                "text": "Partial<google.maps.MapOptions> | undefined"
              },
              "default": "{\r\n  mapTypeControl: false,\r\n  maxZoom: 17,\r\n  streetViewControl: false\r\n}",
              "description": "Overrides for the map options. Provide values for `center` and `zoom` to\r\ndisplay a map when `listings` is empty."
            },
            {
              "kind": "field",
              "name": "internalListings",
              "type": {
                "text": "InternalListing[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "selectedListing",
              "type": {
                "text": "InternalListing | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "searchLocation",
              "type": {
                "text": "Place | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "detailsPlaceId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "overlayLayout",
              "type": {
                "text": "OverlayLayout | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mapElement",
              "type": {
                "text": "MapElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "getMsg",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "fontLoader",
              "privacy": "protected",
              "readonly": true,
              "default": "new WebFontController(\r\n      this, [WebFont.GOOGLE_SANS_TEXT, WebFont.MATERIAL_SYMBOLS_OUTLINED])"
            },
            {
              "kind": "field",
              "name": "mapsCoreLibrary",
              "type": {
                "text": "google.maps.CoreLibrary | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "userCountry",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "distanceMeasurer",
              "privacy": "private",
              "readonly": true,
              "default": "new DistanceMeasurer(this)"
            },
            {
              "kind": "field",
              "name": "listingDistances",
              "privacy": "private",
              "readonly": true,
              "default": "new Map<InternalListing, DistanceInfo>()"
            },
            {
              "kind": "method",
              "name": "configureFromQuickBuilder",
              "parameters": [
                {
                  "name": "configuration",
                  "type": {
                    "text": "QuickBuilderConfiguration"
                  },
                  "description": "The configuration object generated by the Quick\r\nBuilder tool."
                }
              ],
              "description": "Configures the Store Locator component from data generated by the [Quick\r\nBuilder\r\ntool](https://console.cloud.google.com/google/maps-apis/build/locator-plus)\r\nin the Maps Console."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "private",
              "description": "Perform one-time initialization tasks; effectively an async constructor."
            },
            {
              "kind": "method",
              "name": "createInternalListing",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "InternalListing"
                }
              },
              "parameters": [
                {
                  "name": "listing",
                  "type": {
                    "text": "StoreLocatorListing"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isIntermediateOrBetter",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateDistances",
              "privacy": "private",
              "parameters": [
                {
                  "name": "origin",
                  "type": {
                    "text": "LatLng|null|undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateSearchLocation",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "Updates the end user's location, used for travel times and sorting."
            },
            {
              "kind": "method",
              "name": "selectLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "listing",
                  "type": {
                    "text": "InternalListing|undefined"
                  }
                }
              ],
              "description": "Updates the selected location."
            },
            {
              "kind": "method",
              "name": "updateBounds",
              "privacy": "private",
              "description": "Updates the map bounds to markers."
            },
            {
              "kind": "method",
              "name": "renderSidePanelOverlay",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderListItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "listing",
                  "type": {
                    "text": "InternalListing"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderSidePanelMain",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderSearchMarker",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderMapMarker",
              "privacy": "private",
              "parameters": [
                {
                  "name": "listing",
                  "type": {
                    "text": "InternalListing"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderMapDirections",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderMapPanel",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "feature-set",
              "type": {
                "text": "FeatureSet"
              },
              "description": "Chooses the capabilities of this store locator:\r\n\r\n* `'basic'` shows a list of locations with pins on a map.\r\n\r\n* `'intermediate'` adds a search input so users can find the location\r\nclosest to them.\r\n\r\n* `'advanced'` brings in a Place details view to show photos, hours, and\r\nreviews for each location.",
              "fieldName": "featureSet"
            },
            {
              "name": "map-id",
              "type": {
                "text": "string | undefined"
              },
              "description": "The Map ID of the map. See the [Map ID\r\ndocumentation](https://developers.google.com/maps/documentation/get-map-id)\r\nfor more information.",
              "fieldName": "mapId"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-store-locator",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StoreLocator",
          "declaration": {
            "name": "StoreLocator",
            "module": "src/store_locator/store_locator.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-store-locator",
          "declaration": {
            "name": "StoreLocator",
            "module": "src/store_locator/store_locator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/store_locator/store_locator_styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "storeLocatorStyles",
          "default": "css`\r\n  :not(:defined) {\r\n    visibility: hidden;\r\n  }\r\n\r\n  :host {\r\n    /* Override the default split layout sizes */\r\n    --_gmpx-fixed-panel-width-row-layout: var(--gmpx-fixed-panel-width-row-layout, 28.5em);\r\n    --_gmpx-fixed-panel-height-column-layout: var(--gmpx-fixed-panel-height-column-layout, 65%);\r\n  }\r\n\r\n  :host(:not([hidden])) {\r\n    display: block;\r\n    height: 100%;\r\n  }\r\n\r\n  gmpx-split-layout {\r\n    --gmpx-fixed-panel-width-row-layout: var(--_gmpx-fixed-panel-width-row-layout);\r\n    --gmpx-fixed-panel-height-column-layout: var(--_gmpx-fixed-panel-height-column-layout);\r\n    background: ${GMPX_COLOR_SURFACE};\r\n    color: ${GMPX_COLOR_ON_SURFACE};\r\n    font: ${GMPX_FONT_BODY};\r\n  }\r\n\r\n  a {\r\n    color: ${GMPX_COLOR_PRIMARY};\r\n    text-decoration: none;\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    border: none;\r\n    color: inherit;\r\n    cursor: pointer;\r\n    font: inherit;\r\n    font-size: inherit;\r\n    padding: 0;\r\n  }\r\n\r\n  #locations-panel {\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n    padding: 0.5em;\r\n  }\r\n\r\n  #locations-panel-list > .header {\r\n    padding: 1.4em 1.4em 0 1.4em;\r\n  }\r\n\r\n  #locations-panel-list .search-title {\r\n    align-items: center;\r\n    display: flex;\r\n    font: ${GMPX_FONT_TITLE_LARGE};\r\n    margin: 0;\r\n  }\r\n\r\n  #locations-panel-list .search-title .icon {\r\n    font-size: 150%;\r\n    margin-right: 0.2em;\r\n  }\r\n\r\n  #locations-panel-list gmpx-place-picker {\r\n    margin-top: 0.8em;\r\n    position: relative;\r\n    width: 100%;\r\n  }\r\n\r\n  #locations-panel-list .section-name {\r\n    font: ${GMPX_FONT_TITLE_MEDIUM};\r\n    margin: 1.8em 0 1em 1.5em;\r\n  }\r\n\r\n  #location-results-list .result-item {\r\n    border-bottom: ${GMPX_BORDER_SEPARATOR};\r\n    cursor: pointer;\r\n    padding: 0.8em 3.5em 0.8em 1.4em;\r\n    position: relative;\r\n  }\r\n\r\n  #location-results-list .result-item:first-of-type {\r\n    border-top: ${GMPX_BORDER_SEPARATOR};\r\n  }\r\n\r\n  #location-results-list .result-item:last-of-type {\r\n    border-bottom: none;\r\n  }\r\n\r\n  #location-results-list .selected .result-item {\r\n    outline: 2px solid ${GMPX_COLOR_PRIMARY};\r\n    outline-offset: -2px;\r\n  }\r\n\r\n  #location-results-list .name {\r\n    font: ${GMPX_FONT_TITLE_LARGE};\r\n    margin: 0 0 0.6em 0;\r\n  }\r\n\r\n  #location-results-list .address {\r\n    color: ${GMPX_COLOR_ON_SURFACE_VARIANT};\r\n    margin-bottom: 0.5em;\r\n  }\r\n\r\n  #location-results-list .address p {\r\n    margin: 0;\r\n  }\r\n\r\n  #location-results-list gmpx-place-directions-button {\r\n    position: absolute;\r\n    right: 1.2em;\r\n    top: 2.6em;\r\n  }\r\n\r\n  #location-results-list .distance {\r\n    position: absolute;\r\n    right: 0;\r\n    text-align: center;\r\n    top: 0.9em;\r\n    width: 5em;\r\n  }\r\n\r\n  #location-results-list .actions {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 0.3em;\r\n    padding-top: 0.3em;\r\n  }\r\n\r\n  #location-results-list {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  #details-panel .back-button {\r\n    align-items: center;\r\n    color: ${GMPX_COLOR_PRIMARY};\r\n    display: flex;\r\n    font: ${GMPX_FONT_TITLE_LARGE};\r\n    margin: 1em 0 0 1em;\r\n  }\r\n\r\n  #details-panel .back-button .icon {\r\n    font-size: 140%;\r\n    margin-right: 0.2em;\r\n  }\r\n\r\n  .search-pin {\r\n    width: 25px;\r\n    height: 25px;\r\n    position: relative;\r\n    top: 15px;\r\n  }\r\n\r\n  .search-pin > circle {\r\n    fill: #3367D6;\r\n    fill-opacity: 50%;\r\n  }\r\n`",
          "description": "CSS for store locator component."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "storeLocatorStyles",
          "declaration": {
            "name": "storeLocatorStyles",
            "module": "src/store_locator/store_locator_styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/attribute_converters.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER",
          "type": {
            "text": "ComplexAttributeConverter<LatLngLiteral|undefined>"
          },
          "default": "{\r\n      fromAttribute(attr: string|null): LatLngLiteral |\r\n          undefined {\r\n            if (attr === null) return undefined;\r\n            const [lat, lng] = attr.split(',').map((s) => Number(s.trim()));\r\n            return {lat: lat || 0, lng: lng || 0};\r\n          },\r\n      toAttribute(prop?: LatLngLiteral): string |\r\n          null {\r\n            return prop ? `${prop.lat},${prop.lng}` : null;\r\n          },\r\n    }",
          "description": "Converter that transforms an optional `google.maps.LatLngLiteral` property\r\nto/from an attribute string literal in the `lat,lng` format."
        },
        {
          "kind": "variable",
          "name": "STRING_ARRAY_ATTRIBUTE_CONVERTER",
          "type": {
            "text": "ComplexAttributeConverter<string[]|undefined>"
          },
          "default": "{\r\n      fromAttribute(attr: string|null): string[] |\r\n          undefined {\r\n            return attr?.split(/\\s+/).filter((s) => s !== '') ?? undefined;\r\n          },\r\n      toAttribute(prop?: string[]): string |\r\n          null {\r\n            return prop?.join(' ') ?? null;\r\n          },\r\n    }",
          "description": "Converter that transforms an optional string-array property to/from a\r\nspace-delimited attribute value."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER",
          "declaration": {
            "name": "LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER",
            "module": "src/utils/attribute_converters.ts"
          }
        },
        {
          "kind": "js",
          "name": "STRING_ARRAY_ATTRIBUTE_CONVERTER",
          "declaration": {
            "name": "STRING_ARRAY_ATTRIBUTE_CONVERTER",
            "module": "src/utils/attribute_converters.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/context_utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "attachContextRoot",
          "description": "Attaches a `ContextRoot` to document body if one was not attached already.\r\n\r\nIn some cases, context consumers may be slotted into a parent component that\r\nrenders context provider in its shadow DOM. If the parent component is\r\nupgraded late, its children may end up requesting a context that is not\r\ncurrently provided by any provider.\r\n\r\nThe `ContextRoot` class intercepts and tracks unsatisfied `context-request`\r\nevents and then redispatch these requests once providers become available."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "attachContextRoot",
          "declaration": {
            "name": "attachContextRoot",
            "module": "src/utils/context_utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/deep_element_access.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getDeepActiveElement",
          "return": {
            "type": {
              "text": ""
            }
          },
          "description": "Gets the active element, even if it's nested inside shadow DOMs.\r\n\r\nIf the active element is in a shadow DOM, document.activeElement will be the\r\nlight DOM element whose shadow DOM contains it, so this is needed to find the\r\ntrue active element."
        },
        {
          "kind": "function",
          "name": "deepParentChain",
          "parameters": [
            {
              "name": "node",
              "type": {
                "text": "Node"
              }
            }
          ],
          "description": "Generator function that yields the chain of parent nodes upwards in the DOM\r\nstarting at `node`, and piercing shadow boundaries."
        },
        {
          "kind": "function",
          "name": "deepContains",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "rootNode",
              "type": {
                "text": "Node|null|undefined"
              },
              "description": "A node that might be the ancestor."
            },
            {
              "name": "otherNode",
              "type": {
                "text": "Node|null|undefined"
              },
              "description": "A node that might be the descendant."
            }
          ],
          "description": "Behaves like Node.contains() but accounts for shadow descendants as well."
        },
        {
          "kind": "function",
          "name": "someDeepContains",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "rootNodes",
              "type": {
                "text": "Node[]"
              }
            },
            {
              "name": "otherNode",
              "type": {
                "text": "Node|null|undefined"
              }
            }
          ],
          "description": "Returns true if for some node in rootNodes, otherNode is a light or shadow\r\ndescendant of the node. Uses a single search in\r\nO(|rootNodes| + (depth of otherNode))."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getDeepActiveElement",
          "declaration": {
            "name": "getDeepActiveElement",
            "module": "src/utils/deep_element_access.ts"
          }
        },
        {
          "kind": "js",
          "name": "deepParentChain",
          "declaration": {
            "name": "deepParentChain",
            "module": "src/utils/deep_element_access.ts"
          }
        },
        {
          "kind": "js",
          "name": "deepContains",
          "declaration": {
            "name": "deepContains",
            "module": "src/utils/deep_element_access.ts"
          }
        },
        {
          "kind": "js",
          "name": "someDeepContains",
          "declaration": {
            "name": "someDeepContains",
            "module": "src/utils/deep_element_access.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/deferred.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Utility wrapper of a Promise object with methods to resolve or reject the\r\npromise after it is initialized.",
          "name": "Deferred",
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "T | undefined"
              },
              "description": "Value that the promise resolves to; undefined otherwise."
            },
            {
              "kind": "field",
              "name": "resolveCallback",
              "type": {
                "text": "(value: T) => void"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "rejectCallback",
              "type": {
                "text": "(error?: Error) => void"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "promise",
              "readonly": true,
              "default": "new Promise<T>((resolve, reject) => {\r\n    this.resolveCallback = resolve;\r\n    this.rejectCallback = reject;\r\n  })"
            },
            {
              "kind": "method",
              "name": "resolve",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "T"
                  }
                }
              ],
              "description": "Resolves the promise with the provided value."
            },
            {
              "kind": "method",
              "name": "reject",
              "parameters": [
                {
                  "name": "error",
                  "optional": true,
                  "type": {
                    "text": "Error"
                  }
                }
              ],
              "description": "Rejects the promise with the provided error."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Deferred",
          "declaration": {
            "name": "Deferred",
            "module": "src/utils/deferred.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/dom_utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "createLinkElementForWebFont",
          "return": {
            "type": {
              "text": "HTMLLinkElement"
            }
          },
          "parameters": [
            {
              "name": "font",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "weights",
              "type": {
                "text": "number[]"
              }
            }
          ],
          "description": "Creates a HTML link element that loads the specified web font family."
        },
        {
          "kind": "function",
          "name": "extractTextAndURL",
          "return": {
            "type": {
              "text": "{text?: string, url?: string}"
            }
          },
          "parameters": [
            {
              "name": "htmlAttribution",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Extracts the text and URL from the HTML attribution that is returned by the\r\nPlaces API."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "createLinkElementForWebFont",
          "declaration": {
            "name": "createLinkElementForWebFont",
            "module": "src/utils/dom_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "extractTextAndURL",
          "declaration": {
            "name": "extractTextAndURL",
            "module": "src/utils/dom_utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/googlemaps_types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/localize.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "{setStringLiterals}",
          "default": "LocalizationController",
          "description": "Sets one or many localized string literals in the new locale then\r\nrequests an update for all currently connected components."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "{setStringLiterals}",
          "declaration": {
            "name": "{setStringLiterals}",
            "module": "src/utils/localize.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/lru_map.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A limited-capacity map with a least-recently-used eviction policy. Includes\r\nthe operations `get`, `set`, and `has`, which behave the same as on a `Map`.",
          "name": "LRUMap",
          "members": [
            {
              "kind": "field",
              "name": "map",
              "privacy": "private",
              "readonly": true,
              "default": "new Map<K, V>()"
            },
            {
              "kind": "method",
              "name": "has",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "K"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "V|undefined"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "K"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "V"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "K"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reinsertIfPresent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "K"
                  }
                }
              ],
              "description": "Reinserts the entry with the given key if it exists. This is used to\r\nimplement the LRU policy: the native `Map` is ordered by insertion order,\r\nso the reinsertion keeps it ordered by access time."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LRUMap",
          "declaration": {
            "name": "LRUMap",
            "module": "src/utils/lru_map.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/opening_hours.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "formatTimeWithWeekdayMaybe",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "point",
              "type": {
                "text": "OpeningHoursPoint"
              },
              "description": "The relative time from the Places API (weekday, hour, minute)"
            },
            {
              "name": "absolutePoint",
              "type": {
                "text": "Date"
              },
              "description": "The instant in time corresponding to `point`, i.e. a\r\n`Date` object"
            },
            {
              "name": "now",
              "default": "new Date()",
              "description": "Used to determine if `absolutePoint` is coming soon"
            }
          ],
          "description": "Formats a relative point in time (specified in the Place's TZ), usually\r\nincluding the weekday. However, if the point in time, as an absolute\r\ntimestamp, occurs within the next 24 hours, hide the weekday."
        },
        {
          "kind": "function",
          "name": "isSoon",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "date",
              "type": {
                "text": "Date"
              }
            },
            {
              "name": "now",
              "default": "new Date()"
            },
            {
              "name": "intervalMs",
              "default": "ONE_DAY_IN_MS"
            }
          ],
          "description": "Returns whether the given date is in the future and soon approaching. \"Soon\"\r\nmeans sooner than the `intervalMs` argument (default 24 hours)."
        },
        {
          "kind": "function",
          "name": "getUpcomingCloseTime",
          "return": {
            "type": {
              "text": "UpcomingCloseTimeResult"
            }
          },
          "parameters": [
            {
              "name": "place",
              "type": {
                "text": "Place"
              }
            },
            {
              "name": "now",
              "default": "new Date()"
            }
          ],
          "description": "Finds the next closing time of a Place, returning it (if present) and a\r\nstatus flag.\r\n\r\nDoes not take into account exceptional hours (such as holidays) or business\r\nstatus."
        },
        {
          "kind": "function",
          "name": "getUpcomingOpenTime",
          "return": {
            "type": {
              "text": "UpcomingOpenTimeResult"
            }
          },
          "parameters": [
            {
              "name": "place",
              "type": {
                "text": "Place"
              }
            },
            {
              "name": "now",
              "default": "new Date()"
            }
          ],
          "description": "Finds the next open time of a Place, returning it (if present) and a\r\nstatus flag.\r\n\r\nDoes not take into account exceptional hours (such as holidays) or business\r\nstatus."
        },
        {
          "kind": "function",
          "name": "isOpen",
          "return": {
            "type": {
              "text": "boolean|undefined"
            }
          },
          "parameters": [
            {
              "name": "place",
              "type": {
                "text": "Place"
              }
            },
            {
              "name": "now",
              "default": "new Date()"
            }
          ],
          "description": "Temporary (until Place is GA) replacement for the built-in isOpen() method."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formatTimeWithWeekdayMaybe",
          "declaration": {
            "name": "formatTimeWithWeekdayMaybe",
            "module": "src/utils/opening_hours.ts"
          }
        },
        {
          "kind": "js",
          "name": "isSoon",
          "declaration": {
            "name": "isSoon",
            "module": "src/utils/opening_hours.ts"
          }
        },
        {
          "kind": "js",
          "name": "getUpcomingCloseTime",
          "declaration": {
            "name": "getUpcomingCloseTime",
            "module": "src/utils/opening_hours.ts"
          }
        },
        {
          "kind": "js",
          "name": "getUpcomingOpenTime",
          "declaration": {
            "name": "getUpcomingOpenTime",
            "module": "src/utils/opening_hours.ts"
          }
        },
        {
          "kind": "js",
          "name": "isOpen",
          "declaration": {
            "name": "isOpen",
            "module": "src/utils/opening_hours.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/place_utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isPlaceResult",
          "return": {
            "type": {
              "text": "place is PlaceResult"
            }
          },
          "parameters": [
            {
              "name": "place",
              "type": {
                "text": "Place|PlaceResult"
              },
              "description": "A `google.maps.places.Place` or\r\n`google.maps.places.PlaceResult`."
            }
          ],
          "description": "Returns true if `place` is a `PlaceResult`, and false if it's a `Place`."
        },
        {
          "kind": "function",
          "name": "makeWaypoint",
          "return": {
            "type": {
              "text": "WaypointInfo"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "LatLng|LatLngLiteral|Place"
              }
            }
          ],
          "description": "Creates a new `WaypointInfo` object based on input data."
        },
        {
          "kind": "function",
          "name": "priceLevelToNumeric",
          "return": {
            "type": {
              "text": "number|null"
            }
          },
          "parameters": [
            {
              "name": "level",
              "type": {
                "text": "number|PriceLevel"
              }
            }
          ],
          "description": "Converts an enum price level to the corresponding numeric value. If passed a\r\nnumeric value, it will return it unchanged."
        },
        {
          "kind": "function",
          "name": "numericToPriceLevel",
          "return": {
            "type": {
              "text": "PriceLevel|null"
            }
          },
          "parameters": [
            {
              "name": "level",
              "type": {
                "text": "number|PriceLevel"
              }
            }
          ],
          "description": "Converts a numeric price level to the corresponding enum value. If passed an\r\nenum value, it will return it unchanged."
        },
        {
          "kind": "function",
          "name": "renderAttribution",
          "parameters": [
            {
              "name": "text",
              "type": {
                "text": "string"
              },
              "description": "Name of the author or provider."
            },
            {
              "name": "url",
              "type": {
                "text": "string|null"
              },
              "description": "URL that links to the author or provider page."
            }
          ],
          "description": "Renders attribution data returned by the Places API as either an `<a>` or a\r\n`<span>` depending on the presence of the URL field."
        },
        {
          "kind": "function",
          "name": "makePlaceFromPlaceResult",
          "return": {
            "type": {
              "text": "Promise<Place>"
            }
          },
          "parameters": [
            {
              "name": "placeResult",
              "type": {
                "text": "PlaceResult"
              }
            },
            {
              "name": "consumer",
              "optional": true,
              "type": {
                "text": "HTMLElement"
              }
            }
          ],
          "description": "Creates a new `Place` object that sources its property values from\r\nequivalent fields in the `PlaceResult` object, if they are defined."
        },
        {
          "kind": "function",
          "name": "hasDataForOpeningCalculations",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "place",
              "type": {
                "text": "Place"
              }
            }
          ],
          "description": "Determines whether the current Place object has enough data to evaluate\r\n`isOpen()` or `getNextOpeningTime()` without making additional fetches."
        },
        {
          "kind": "function",
          "name": "mapPlaceFieldsToPlaceResultFields",
          "return": {
            "type": {
              "text": "Array<keyof PlaceResult>"
            }
          },
          "parameters": [
            {
              "name": "fields",
              "type": {
                "text": "Array<keyof Place>"
              }
            }
          ],
          "description": "Maps a list of Place field names to equivalent PlaceResult field names."
        },
        {
          "kind": "function",
          "name": "isNotAvailableError",
          "return": {
            "type": {
              "text": "e is Error"
            }
          },
          "parameters": [
            {
              "name": "e",
              "type": {
                "text": "unknown"
              }
            },
            {
              "name": "property",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Determines if the error results from a specified property not being\r\navailable on the Place class (or an instance of that class)."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isPlaceResult",
          "declaration": {
            "name": "isPlaceResult",
            "module": "src/utils/place_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "makeWaypoint",
          "declaration": {
            "name": "makeWaypoint",
            "module": "src/utils/place_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "priceLevelToNumeric",
          "declaration": {
            "name": "priceLevelToNumeric",
            "module": "src/utils/place_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "numericToPriceLevel",
          "declaration": {
            "name": "numericToPriceLevel",
            "module": "src/utils/place_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderAttribution",
          "declaration": {
            "name": "renderAttribution",
            "module": "src/utils/place_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "makePlaceFromPlaceResult",
          "declaration": {
            "name": "makePlaceFromPlaceResult",
            "module": "src/utils/place_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "hasDataForOpeningCalculations",
          "declaration": {
            "name": "hasDataForOpeningCalculations",
            "module": "src/utils/place_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "mapPlaceFieldsToPlaceResultFields",
          "declaration": {
            "name": "mapPlaceFieldsToPlaceResultFields",
            "module": "src/utils/place_utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isNotAvailableError",
          "declaration": {
            "name": "isNotAvailableError",
            "module": "src/utils/place_utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/poll.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Utility class that allows callers to start or stop continuous polling of a\r\ncallback function at set intervals (without calling `setInterval` itself).",
          "name": "Poll",
          "members": [
            {
              "kind": "field",
              "name": "timeoutId",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "start",
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "Function"
                  }
                },
                {
                  "name": "interval",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Starts continuous polling of the specified callback function after every\r\ninterval (in ms)."
            },
            {
              "kind": "method",
              "name": "stop",
              "description": "Stops the currently running poll, if any."
            },
            {
              "kind": "method",
              "name": "updateTimeout",
              "privacy": "private",
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "Function"
                  }
                },
                {
                  "name": "interval",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Poll",
          "declaration": {
            "name": "Poll",
            "module": "src/utils/poll.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/request_cache.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A limited-capacity cache keyed by serialized request objects.",
          "name": "RequestCache",
          "members": [
            {
              "kind": "field",
              "name": "requestCacheMap",
              "type": {
                "text": "LRUMap<string, Promise<ResponseType>>"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new LRUMap(capacity)"
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "Promise<ResponseType>|null"
                }
              },
              "parameters": [
                {
                  "name": "request",
                  "type": {
                    "text": "RequestType"
                  }
                }
              ],
              "description": "Gets the cached result with the given request"
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "RequestType"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "Promise<ResponseType>"
                  }
                }
              ],
              "description": "Adds the provided request to the cache, replacing the\r\nexisting result if one exists already."
            },
            {
              "kind": "method",
              "name": "serialize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "request",
                  "type": {
                    "text": "RequestType"
                  }
                }
              ],
              "description": "Deterministically serializes arbitrary objects to strings."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RequestCache",
          "declaration": {
            "name": "RequestCache",
            "module": "src/utils/request_cache.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_attribution/place_attribution.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component that renders any listing attributions from the Places API.\r\n\r\nWhen displaying data from the Places API, you are [required to\r\ndisplay](https://developers.google.com/maps/documentation/places/web-service/policies#other_attribution_requirements)\r\nany attributions present in the response. This component assists in rendering\r\nthese listing attributions from a `Place` or `PlaceResult` object.\r\n\r\nThe Place Data Provider component will automatically insert a Place\r\nAttribution component if you do not include one. Please note that failure to\r\ndisplay this component can result in a violation of the Google Maps Platform\r\nTerms Of Service.",
          "name": "PlaceAttribution",
          "members": [
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "makeAttributionHTML",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              },
              "parameters": [
                {
                  "name": "attribution",
                  "type": {
                    "text": "Attribution"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-attribution",
          "customElement": true,
          "attributes": [
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlaceAttribution",
          "declaration": {
            "name": "PlaceAttribution",
            "module": "src/place_building_blocks/place_attribution/place_attribution.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-attribution",
          "declaration": {
            "name": "PlaceAttribution",
            "module": "src/place_building_blocks/place_attribution/place_attribution.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_data_provider/cached_place_lookup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A limited-capacity cache of `Place` objects keyed by place ID. Creates new\r\n`Place` objects as needed when they do not exist already.",
          "name": "CachedPlaceLookup",
          "members": [
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "LRUMap<string, Promise<Place>>"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new LRUMap(capacity)"
            },
            {
              "kind": "method",
              "name": "getPlace",
              "return": {
                "type": {
                  "text": "Promise<Place>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Gets the cached `Place` with the given ID. If none exists, a new `Place`\r\nwill be created, cached, and returned.\r\n\r\nNote: The returned promise will be rejected with an error from the `Place`\r\nconstructor if `id` is an empty string."
            },
            {
              "kind": "method",
              "name": "updatePlace",
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ],
              "description": "Adds the provided `Place` to the cache, replacing the existing `Place` if\r\none exists already."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CachedPlaceLookup",
          "declaration": {
            "name": "CachedPlaceLookup",
            "module": "src/place_building_blocks/place_data_provider/cached_place_lookup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_data_provider/place_data_provider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Provides place data to child components as context.\r\n\r\nThis component can fetch place data from the Places API, or forward a Place\r\nor PlaceResult object provided elsewhere in code. By default, this component\r\nwill only request fields from the Places API which are required to render\r\nchild components. The component will locally cache place data to avoid\r\nredundant API requests.",
          "name": "PlaceDataProvider",
          "slots": [
            {
              "description": "Elements to receive Places data.",
              "name": ""
            },
            {
              "description": "If specified, display this content when the component is initially loading Places data. Content in this slot will receive Places data, but some or all fields may be undefined.",
              "name": "initial-loading"
            },
            {
              "description": "If specified, display this content when there was any error loading data from the Places API.",
              "name": "error"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "autoFetchDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If `place` is provided with a `Place` or `PlaceResult` instance, but does\r\nnot contain fields required by child components, this element will make a\r\nrequest to the Place API to retrieve the missing data. Set\r\n`auto-fetch-disabled` to prevent the component from performing these\r\nrequests.",
              "attribute": "auto-fetch-disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "fields",
              "type": {
                "text": "string[] | undefined"
              },
              "description": "Manually specify the fields to request from the Places API.\r\n\r\nIf unspecified, the component will request only fields used by child\r\ncomponents.",
              "attribute": "fields",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "string|Place|PlaceResult | undefined"
              },
              "description": "The place to be displayed by this component. Provide a [Place\r\nID](https://developers.google.com/maps/documentation/places/web-service/place-id)\r\nas a string to have the component look up and display details from the\r\nPlace API. The component will not make further API requests if child\r\ncomponents are added at a later time. If required, explicitly request a\r\ndata fetch by re-setting `place` to the same Place ID as before.\r\n\r\nAlternatively, assign a `Place` or `PlaceResult` object to the `place`\r\nproperty to render it directly (note that the attribute, on the other hand,\r\nonly accepts a Place ID string).",
              "attribute": "place"
            },
            {
              "kind": "field",
              "name": "loadingState",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "slotValidator",
              "privacy": "protected",
              "readonly": true,
              "default": "new SlotValidationController(\r\n      this, this.logger, ['', 'initial-loading', 'error'])"
            },
            {
              "kind": "field",
              "name": "placeConsumers",
              "privacy": "private",
              "readonly": true,
              "default": "new Set<PlaceDataConsumer>()"
            },
            {
              "kind": "field",
              "name": "placeAttributions",
              "privacy": "private",
              "readonly": true,
              "default": "new Set<PlaceAttribution>()"
            },
            {
              "kind": "field",
              "name": "placeContextProvider",
              "privacy": "private",
              "readonly": true,
              "default": "new ContextProvider(this, {context: placeContext})"
            },
            {
              "kind": "field",
              "name": "contextPlace",
              "type": {
                "text": "Place|undefined"
              },
              "privacy": "private",
              "description": "Place data passed to child `PlaceDataConsumer`s via context."
            },
            {
              "kind": "field",
              "name": "placeLookup",
              "privacy": "private",
              "static": true,
              "readonly": true,
              "default": "new CachedPlaceLookup(CACHE_SIZE)"
            },
            {
              "kind": "method",
              "name": "updatePlace",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "registerPlaceConsumer",
              "privacy": "private",
              "parameters": [
                {
                  "name": "consumer",
                  "type": {
                    "text": "PlaceDataConsumer"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "unregisterPlaceConsumer",
              "privacy": "private",
              "parameters": [
                {
                  "name": "consumer",
                  "type": {
                    "text": "PlaceDataConsumer"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getConsumerFields",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Array<keyof Place>"
                }
              }
            },
            {
              "kind": "method",
              "name": "appendAttributionIfAbsent",
              "privacy": "private",
              "description": "Appends a Place Attribution component as child if none exists in order to\r\ncomply with the Google Maps Platform Terms of Service."
            },
            {
              "kind": "method",
              "name": "handleError",
              "privacy": "private",
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "unknown"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "RequestErrorEvent"
              },
              "description": "Indicates an error condition in an underlying Google Maps JavaScript API call.",
              "name": "gmpx-requesterror",
              "reactName": "onRequestError"
            }
          ],
          "attributes": [
            {
              "name": "auto-fetch-disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If `place` is provided with a `Place` or `PlaceResult` instance, but does\r\nnot contain fields required by child components, this element will make a\r\nrequest to the Place API to retrieve the missing data. Set\r\n`auto-fetch-disabled` to prevent the component from performing these\r\nrequests.",
              "fieldName": "autoFetchDisabled"
            },
            {
              "name": "fields",
              "type": {
                "text": "string[] | undefined"
              },
              "description": "Manually specify the fields to request from the Places API.\r\n\r\nIf unspecified, the component will request only fields used by child\r\ncomponents.",
              "fieldName": "fields"
            },
            {
              "name": "place",
              "type": {
                "text": "string|Place|PlaceResult | undefined"
              },
              "description": "The place to be displayed by this component. Provide a [Place\r\nID](https://developers.google.com/maps/documentation/places/web-service/place-id)\r\nas a string to have the component look up and display details from the\r\nPlace API. The component will not make further API requests if child\r\ncomponents are added at a later time. If required, explicitly request a\r\ndata fetch by re-setting `place` to the same Place ID as before.\r\n\r\nAlternatively, assign a `Place` or `PlaceResult` object to the `place`\r\nproperty to render it directly (note that the attribute, on the other hand,\r\nonly accepts a Place ID string).",
              "fieldName": "place"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-place-data-provider",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlaceDataProvider",
          "declaration": {
            "name": "PlaceDataProvider",
            "module": "src/place_building_blocks/place_data_provider/place_data_provider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-data-provider",
          "declaration": {
            "name": "PlaceDataProvider",
            "module": "src/place_building_blocks/place_data_provider/place_data_provider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_directions_button/place_directions_button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component that opens a new tab with directions to this place in Google Maps.",
          "name": "PlaceDirectionsButton",
          "cssProperties": [
            {
              "description": "Button text and outline color in the `outlined` variant, or background color in `filled` variant.",
              "name": "--gmpx-color-primary"
            },
            {
              "description": "Button text color in `filled` variant.",
              "name": "--gmpx-color-on-primary"
            },
            {
              "description": "Font size for the button.",
              "name": "--gmpx-font-size-base"
            },
            {
              "description": "Font face for the button, except for condensed mode.",
              "name": "--gmpx-font-family-headings"
            },
            {
              "description": "Font face used when the button is in condensed mode.",
              "name": "--gmpx-font-family-base"
            }
          ],
          "slots": [
            {
              "description": "Content to display as the button’s label.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "null"
              },
              "default": "null",
              "description": "A description that gets read by assistive devices. In the case of icon-only\r\nbuttons, you should always include an ARIA label for optimal accessibility.",
              "attribute": "aria-label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "condensed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to render the button in a condensed layout, where the label appears\r\nbelow the icon.",
              "attribute": "condensed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "origin",
              "type": {
                "text": "google.maps.LatLng|google.maps.LatLngLiteral|Place | undefined"
              },
              "description": "Optionally specify the starting location or Place. Otherwise Google Maps\r\nwill ask for or estimate the user’s starting location."
            },
            {
              "kind": "field",
              "name": "reversed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Get directions from destination to origin instead.",
              "attribute": "reversed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'outlined'|'filled'"
              },
              "default": "'outlined'",
              "description": "Specifies the display style of the button.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getHref",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "aria-label",
              "type": {
                "text": "null"
              },
              "default": "null",
              "description": "A description that gets read by assistive devices. In the case of icon-only\r\nbuttons, you should always include an ARIA label for optimal accessibility.",
              "fieldName": "ariaLabel"
            },
            {
              "name": "condensed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to render the button in a condensed layout, where the label appears\r\nbelow the icon.",
              "fieldName": "condensed"
            },
            {
              "name": "reversed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Get directions from destination to origin instead.",
              "fieldName": "reversed"
            },
            {
              "name": "variant",
              "type": {
                "text": "'outlined'|'filled'"
              },
              "default": "'outlined'",
              "description": "Specifies the display style of the button.",
              "fieldName": "variant"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-directions-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlaceDirectionsButton",
          "declaration": {
            "name": "PlaceDirectionsButton",
            "module": "src/place_building_blocks/place_directions_button/place_directions_button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-directions-button",
          "declaration": {
            "name": "PlaceDirectionsButton",
            "module": "src/place_building_blocks/place_directions_button/place_directions_button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_distance_label/directions_controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Controller that interfaces with the Maps JavaScript API Directions Service.",
          "name": "DirectionsController",
          "members": [
            {
              "kind": "field",
              "name": "service",
              "type": {
                "text": "google.maps.DirectionsService | undefined"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "cache",
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "hostUpdate"
            },
            {
              "kind": "method",
              "name": "route",
              "return": {
                "type": {
                  "text": "Promise<google.maps.DirectionsResult|null>"
                }
              },
              "parameters": [
                {
                  "name": "request",
                  "type": {
                    "text": "google.maps.DirectionsRequest"
                  }
                }
              ],
              "description": "Makes a call to `DirectionsService.route` and returns the result as a\r\npromise. If request fails, the promise will resolve to null, and this\r\nmethod will dispatch a `RequestErrorEvent` from the host element."
            },
            {
              "kind": "method",
              "name": "getService",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<google.maps.DirectionsService>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DirectionsController",
          "declaration": {
            "name": "DirectionsController",
            "module": "src/place_building_blocks/place_distance_label/directions_controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_distance_label/place_distance_label.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component that displays as text the distance to this place from an origin,\r\nor the duration if a travel mode is also specified.",
          "name": "PlaceDistanceLabel",
          "members": [
            {
              "kind": "field",
              "name": "travelMode",
              "type": {
                "text": "TravelModeAttribute | undefined"
              },
              "description": "Travel mode to be used when computing transit time from `origin`.\r\nIf undefined (default), this component will render the distance instead.",
              "attribute": "travel-mode",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "origin",
              "type": {
                "text": "LatLng|LatLngLiteral|Place | undefined"
              },
              "description": "Starting location or Place."
            },
            {
              "kind": "field",
              "name": "directionsData",
              "type": {
                "text": "google.maps.DirectionsLeg | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "fontLoader",
              "privacy": "protected",
              "readonly": true,
              "default": "new WebFontController(this, [WebFont.MATERIAL_SYMBOLS_OUTLINED])"
            },
            {
              "kind": "field",
              "name": "directionsController",
              "privacy": "private",
              "readonly": true,
              "default": "new DirectionsController(this)"
            },
            {
              "kind": "field",
              "name": "isFetchingDirectionsData",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  }
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  }
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "updateDirectionsData",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "travel-mode",
              "type": {
                "text": "TravelModeAttribute | undefined"
              },
              "description": "Travel mode to be used when computing transit time from `origin`.\r\nIf undefined (default), this component will render the distance instead.",
              "fieldName": "travelMode"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-distance-label-internal",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlaceDistanceLabel",
          "declaration": {
            "name": "PlaceDistanceLabel",
            "module": "src/place_building_blocks/place_distance_label/place_distance_label.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-distance-label-internal",
          "declaration": {
            "name": "PlaceDistanceLabel",
            "module": "src/place_building_blocks/place_distance_label/place_distance_label.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_field_boolean/place_field_boolean.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PLACE_BOOLEAN_FIELDS",
          "type": {
            "text": "[\r\n  ...PLACE_BOOLEAN_FIELDS_SYNC_ACCESS,\r\n  ...PLACE_BOOLEAN_FIELDS_ASYNC_ACCESS,\r\n]"
          },
          "default": "[\r\n  ...PLACE_BOOLEAN_FIELDS_SYNC_ACCESS,\r\n  ...PLACE_BOOLEAN_FIELDS_ASYNC_ACCESS,\r\n]",
          "description": "Supported field names for `PlaceFieldBoolean`, formatted as `Place` fields."
        },
        {
          "kind": "variable",
          "name": "PLACE_RESULT_BOOLEAN_FIELDS",
          "type": {
            "text": "[\r\n  'opening_hours.isOpen()',\r\n]"
          },
          "default": "[\r\n  'opening_hours.isOpen()',\r\n]",
          "description": "Supported field names for `PlaceFieldBoolean`, formatted as `PlaceResult`\r\nfields."
        },
        {
          "kind": "class",
          "description": "Component that conditionally renders content depending on the value of a\r\nboolean field, or the `isOpen()` method which returns a boolean.\r\n\r\nInclude a child element with `slot=\"true\"` to display content when the\r\nboolean value is true. Likewise, a child element with `slot=\"false\"` will be\r\ndisplayed when the boolean value is false.",
          "name": "PlaceFieldBoolean",
          "slots": [
            {
              "description": "Content to be displayed when the boolean value is true.",
              "name": "true"
            },
            {
              "description": "Content to be displayed when the boolean value is false.",
              "name": "false"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "BooleanField | undefined"
              },
              "description": "The field to display, formatted as it is on either a `Place` or\r\n`PlaceResult`.\r\n\r\nAllowed [Place\r\nfields](https://developers.google.com/maps/documentation/javascript/reference/place)\r\nare `hasCurbsidePickup`, `hasDelivery`, `hasDineIn`, `hasTakeout`,\r\n`hasWheelchairAccessibleEntrance`, `isReservable`, `servesBeer`,\r\n`servesBreakfast`, `servesBrunch`, `servesDinner`, `servesLunch`,\r\n`servesVegetarianFood`, `servesWine`, and `isOpen()`. Please note that only\r\n`isOpen()` is supported by the legacy [`PlaceResult`\r\nclass](https://developers.google.com/maps/documentation/javascript/reference/places-service#PlaceResult).\r\n\r\nThe component also supports the `PlaceResult` field specifier\r\n`opening_hours.isOpen()` as an alias for `isOpen()`.",
              "attribute": "field",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "valueToRender",
              "type": {
                "text": "boolean|null | undefined"
              },
              "privacy": "private",
              "description": "Boolean value to be rendered synchronously."
            },
            {
              "kind": "field",
              "name": "poll",
              "privacy": "private",
              "readonly": true,
              "default": "new Poll()"
            },
            {
              "kind": "field",
              "name": "asyncRenderComplete",
              "type": {
                "text": "Deferred | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateValueToRender",
              "privacy": "private",
              "description": "Updates the internal state value used for rendering HTML. Depending on\r\nthe Place field chosen, this method may make a synchronous update, or may\r\ntrigger a task to update the value later [e.g. with isOpen()]."
            },
            {
              "kind": "method",
              "name": "resetAsyncRenderPromise",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "field",
              "type": {
                "text": "BooleanField | undefined"
              },
              "description": "The field to display, formatted as it is on either a `Place` or\r\n`PlaceResult`.\r\n\r\nAllowed [Place\r\nfields](https://developers.google.com/maps/documentation/javascript/reference/place)\r\nare `hasCurbsidePickup`, `hasDelivery`, `hasDineIn`, `hasTakeout`,\r\n`hasWheelchairAccessibleEntrance`, `isReservable`, `servesBeer`,\r\n`servesBreakfast`, `servesBrunch`, `servesDinner`, `servesLunch`,\r\n`servesVegetarianFood`, `servesWine`, and `isOpen()`. Please note that only\r\n`isOpen()` is supported by the legacy [`PlaceResult`\r\nclass](https://developers.google.com/maps/documentation/javascript/reference/places-service#PlaceResult).\r\n\r\nThe component also supports the `PlaceResult` field specifier\r\n`opening_hours.isOpen()` as an alias for `isOpen()`.",
              "fieldName": "field"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-field-boolean",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PLACE_BOOLEAN_FIELDS",
          "declaration": {
            "name": "PLACE_BOOLEAN_FIELDS",
            "module": "src/place_building_blocks/place_field_boolean/place_field_boolean.ts"
          }
        },
        {
          "kind": "js",
          "name": "PLACE_RESULT_BOOLEAN_FIELDS",
          "declaration": {
            "name": "PLACE_RESULT_BOOLEAN_FIELDS",
            "module": "src/place_building_blocks/place_field_boolean/place_field_boolean.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldBoolean",
          "declaration": {
            "name": "PlaceFieldBoolean",
            "module": "src/place_building_blocks/place_field_boolean/place_field_boolean.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-field-boolean",
          "declaration": {
            "name": "PlaceFieldBoolean",
            "module": "src/place_building_blocks/place_field_boolean/place_field_boolean.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_field_link/place_field_link.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PLACE_LINK_FIELDS",
          "type": {
            "text": "[\r\n  'googleMapsURI',\r\n  'websiteURI',\r\n]"
          },
          "default": "[\r\n  'googleMapsURI',\r\n  'websiteURI',\r\n]",
          "description": "Supported field names for `PlaceFieldLink`, formatted as `Place` fields."
        },
        {
          "kind": "variable",
          "name": "PLACE_RESULT_LINK_FIELDS",
          "type": {
            "text": "[\r\n  'url',\r\n  'website',\r\n]"
          },
          "default": "[\r\n  'url',\r\n  'website',\r\n]",
          "description": "Supported field names for `PlaceFieldLink`, formatted as `PlaceResult`\r\nfields."
        },
        {
          "kind": "class",
          "description": "Component that renders an anchor tag to one of this place's URLs:\r\n`websiteURI` or `googleMapsURI`. By default, renders a link to `websiteURI`\r\nwith the URL's domain as the text.",
          "name": "PlaceFieldLink",
          "members": [
            {
              "kind": "field",
              "name": "hrefField",
              "type": {
                "text": "LinkField"
              },
              "default": "'websiteURI'",
              "description": "The field to link to, formatted as it is on either a `Place` or\r\n`PlaceResult`.\r\n\r\nAllowed fields are: `googleMapsURI` or `url` for a link to this place on\r\nGoogle Maps; `websiteURI` or `website` for a link to this place's\r\nwebsite.",
              "attribute": "href-field",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string|null"
              },
              "default": "null",
              "description": "The link description that gets read by assistive technology.\r\n\r\nSet this to something more descriptive if the link's purpose isn't clear\r\nfrom its text content alone. For example, if the link text is just\r\n\"Website\", then the `aria-label` could be \"Website for (business name)\".",
              "attribute": "aria-label",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getHref",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string|null"
                }
              }
            },
            {
              "kind": "method",
              "name": "hasContentForSlot",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "getDefaultLinkText",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "href",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "href-field",
              "type": {
                "text": "LinkField"
              },
              "default": "'websiteURI'",
              "description": "The field to link to, formatted as it is on either a `Place` or\r\n`PlaceResult`.\r\n\r\nAllowed fields are: `googleMapsURI` or `url` for a link to this place on\r\nGoogle Maps; `websiteURI` or `website` for a link to this place's\r\nwebsite.",
              "fieldName": "hrefField"
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string|null"
              },
              "default": "null",
              "description": "The link description that gets read by assistive technology.\r\n\r\nSet this to something more descriptive if the link's purpose isn't clear\r\nfrom its text content alone. For example, if the link text is just\r\n\"Website\", then the `aria-label` could be \"Website for (business name)\".",
              "fieldName": "ariaLabel"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-field-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PLACE_LINK_FIELDS",
          "declaration": {
            "name": "PLACE_LINK_FIELDS",
            "module": "src/place_building_blocks/place_field_link/place_field_link.ts"
          }
        },
        {
          "kind": "js",
          "name": "PLACE_RESULT_LINK_FIELDS",
          "declaration": {
            "name": "PLACE_RESULT_LINK_FIELDS",
            "module": "src/place_building_blocks/place_field_link/place_field_link.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldLink",
          "declaration": {
            "name": "PlaceFieldLink",
            "module": "src/place_building_blocks/place_field_link/place_field_link.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-field-link",
          "declaration": {
            "name": "PlaceFieldLink",
            "module": "src/place_building_blocks/place_field_link/place_field_link.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_field_text/place_field_text.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PLACE_TEXT_FIELDS",
          "type": {
            "text": "[\r\n  'businessStatus',\r\n  'displayName',\r\n  'formattedAddress',\r\n  'id',\r\n  'internationalPhoneNumber',\r\n  'location',\r\n  'location.lat',\r\n  'location.lng',\r\n  'nationalPhoneNumber',\r\n  'plusCode.compoundCode',\r\n  'plusCode.globalCode',\r\n  'rating',\r\n  'types',\r\n  'userRatingCount',\r\n]"
          },
          "default": "[\r\n  'businessStatus',\r\n  'displayName',\r\n  'formattedAddress',\r\n  'id',\r\n  'internationalPhoneNumber',\r\n  'location',\r\n  'location.lat',\r\n  'location.lng',\r\n  'nationalPhoneNumber',\r\n  'plusCode.compoundCode',\r\n  'plusCode.globalCode',\r\n  'rating',\r\n  'types',\r\n  'userRatingCount',\r\n]",
          "description": "Supported field names for `PlaceFieldText`, formatted as `Place` fields."
        },
        {
          "kind": "variable",
          "name": "PLACE_RESULT_TEXT_FIELDS",
          "type": {
            "text": "[\r\n  'business_status',\r\n  'name',\r\n  'formatted_address',\r\n  'place_id',\r\n  'international_phone_number',\r\n  'geometry.location',\r\n  'geometry.location.lat',\r\n  'geometry.location.lng',\r\n  'formatted_phone_number',\r\n  'plus_code.compound_code',\r\n  'plus_code.global_code',\r\n  'rating',\r\n  'types',\r\n  'user_ratings_total',\r\n]"
          },
          "default": "[\r\n  'business_status',\r\n  'name',\r\n  'formatted_address',\r\n  'place_id',\r\n  'international_phone_number',\r\n  'geometry.location',\r\n  'geometry.location.lat',\r\n  'geometry.location.lng',\r\n  'formatted_phone_number',\r\n  'plus_code.compound_code',\r\n  'plus_code.global_code',\r\n  'rating',\r\n  'types',\r\n  'user_ratings_total',\r\n]",
          "description": "Supported field names for `PlaceFieldText`, formatted as `PlaceResult`\r\nfields."
        },
        {
          "kind": "class",
          "description": "Component that renders a string or numeric field of a `Place` or\r\n`PlaceResult` as text. It can also render the field \"types\", in which case it\r\nwill show only the most applicable place type, if available.",
          "name": "PlaceFieldText",
          "members": [
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "TextField | undefined"
              },
              "description": "The field to display, formatted as it is on either a `Place` or\r\n`PlaceResult`.\r\n\r\nAllowed [`Place`\r\nfields](https://developers.google.com/maps/documentation/javascript/reference/place)\r\nare: `businessStatus`, `displayName`, `formattedAddress`, `id`,\r\n`internationalPhoneNumber`, `location`, `location.lat`, `location.lng`,\r\n`nationalPhoneNumber`, `plusCode.compoundCode`, `plusCode.globalCode`,\r\n`rating`, `types`, and `userRatingCount`.\r\n\r\nYou may also specify one of the equivalent [`PlaceResult` field\r\nnames](https://developers.google.com/maps/documentation/javascript/reference/places-service#PlaceResult):\r\n`business_status`, `name`, `formatted_address`, `place_id`,\r\n`international_phone_number`, `geometry.location`, `geometry.location.lat`,\r\n`geometry.location.lng`, `formatted_phone_number`,\r\n`plus_code.compound_code`, `plus_code.global_code`, `rating`, `types`,\r\nand `user_ratings_total`.",
              "attribute": "field",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "getMsg",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDisplayText",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "getFieldValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string|null|undefined"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                },
                {
                  "name": "field",
                  "type": {
                    "text": "TextField"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderBusinessStatus",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string|null|undefined"
                }
              },
              "parameters": [
                {
                  "name": "status",
                  "type": {
                    "text": "google.maps.places.BusinessStatus|null|\r\n                               undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDisplayType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "placeTypes",
                  "type": {
                    "text": "string[]"
                  },
                  "description": "A list of place types"
                }
              ],
              "description": "From a list of multiple place types, returns the formatted type to be\r\nrendered by PlaceFieldText."
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "field",
              "type": {
                "text": "TextField | undefined"
              },
              "description": "The field to display, formatted as it is on either a `Place` or\r\n`PlaceResult`.\r\n\r\nAllowed [`Place`\r\nfields](https://developers.google.com/maps/documentation/javascript/reference/place)\r\nare: `businessStatus`, `displayName`, `formattedAddress`, `id`,\r\n`internationalPhoneNumber`, `location`, `location.lat`, `location.lng`,\r\n`nationalPhoneNumber`, `plusCode.compoundCode`, `plusCode.globalCode`,\r\n`rating`, `types`, and `userRatingCount`.\r\n\r\nYou may also specify one of the equivalent [`PlaceResult` field\r\nnames](https://developers.google.com/maps/documentation/javascript/reference/places-service#PlaceResult):\r\n`business_status`, `name`, `formatted_address`, `place_id`,\r\n`international_phone_number`, `geometry.location`, `geometry.location.lat`,\r\n`geometry.location.lng`, `formatted_phone_number`,\r\n`plus_code.compound_code`, `plus_code.global_code`, `rating`, `types`,\r\nand `user_ratings_total`.",
              "fieldName": "field"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-field-text",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PLACE_TEXT_FIELDS",
          "declaration": {
            "name": "PLACE_TEXT_FIELDS",
            "module": "src/place_building_blocks/place_field_text/place_field_text.ts"
          }
        },
        {
          "kind": "js",
          "name": "PLACE_RESULT_TEXT_FIELDS",
          "declaration": {
            "name": "PLACE_RESULT_TEXT_FIELDS",
            "module": "src/place_building_blocks/place_field_text/place_field_text.ts"
          }
        },
        {
          "kind": "js",
          "name": "PlaceFieldText",
          "declaration": {
            "name": "PlaceFieldText",
            "module": "src/place_building_blocks/place_field_text/place_field_text.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-field-text",
          "declaration": {
            "name": "PlaceFieldText",
            "module": "src/place_building_blocks/place_field_text/place_field_text.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_opening_hours/place_opening_hours.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component that renders a summary of the place’s current opening status and an\r\naccordion that shows the weekly opening hours when expanded.\r\n\r\nThis component will display content only if there is sufficient data to\r\ncalculate the place’s opening status (unless the place is not operational, in\r\nwhich case it will render the place’s business status instead). A place’s\r\nopening status is determined by its business status, opening hours periods,\r\nand UTC offset minutes.",
          "name": "PlaceOpeningHours",
          "cssProperties": [
            {
              "description": "Text color when the place is currently open.",
              "name": "--gmpx-hours-color-open"
            },
            {
              "description": "Text color when the place is currently closed.",
              "name": "--gmpx-hours-color-closed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "summaryOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Render only the summary line, without the accordion containing weekly\r\nopening hours.",
              "attribute": "summary-only",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "poll",
              "privacy": "private",
              "readonly": true,
              "default": "new Poll()"
            },
            {
              "kind": "field",
              "name": "fontLoader",
              "privacy": "protected",
              "readonly": true,
              "default": "new WebFontController(this, [WebFont.MATERIAL_SYMBOLS_OUTLINED])"
            },
            {
              "kind": "field",
              "name": "getMsg",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getOpenSummaryContent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getClosedSummaryContent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "summary-only",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Render only the summary line, without the accordion containing weekly\r\nopening hours.",
              "fieldName": "summaryOnly"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-opening-hours",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlaceOpeningHours",
          "declaration": {
            "name": "PlaceOpeningHours",
            "module": "src/place_building_blocks/place_opening_hours/place_opening_hours.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-opening-hours",
          "declaration": {
            "name": "PlaceOpeningHours",
            "module": "src/place_building_blocks/place_opening_hours/place_opening_hours.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_price_level/place_price_level.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Renders a symbolic representation of a place's price level (e.g. $$$).",
          "name": "PlacePriceLevel",
          "members": [
            {
              "kind": "field",
              "name": "symbol",
              "type": {
                "text": "string"
              },
              "default": "'$'",
              "description": "The currency symbol (such as $) to use.",
              "attribute": "symbol",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDisplayPriceLevel",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "symbol",
              "type": {
                "text": "string"
              },
              "default": "'$'",
              "description": "The currency symbol (such as $) to use.",
              "fieldName": "symbol"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-price-level",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlacePriceLevel",
          "declaration": {
            "name": "PlacePriceLevel",
            "module": "src/place_building_blocks/place_price_level/place_price_level.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-price-level",
          "declaration": {
            "name": "PlacePriceLevel",
            "module": "src/place_building_blocks/place_price_level/place_price_level.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_photo_gallery/place_photo_gallery.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component that displays photos of this place as tiles, with a lightbox view\r\nwhen a photo is clicked. The lightbox includes proper photo attribution.",
          "name": "PlacePhotoGallery",
          "cssProperties": [
            {
              "description": "Font family used for captions in the lightbox.",
              "name": "--gmpx-font-family-base"
            },
            {
              "description": "Font family of the place title in the lightbox.",
              "name": "--gmpx-font-family-headings"
            },
            {
              "description": "Used to scale the component.",
              "name": "--gmpx-font-size-base"
            }
          ],
          "cssParts": [
            {
              "description": "Styles each individual photo tile, including border radius, width/height, margin, background color before image is loaded, etc.",
              "name": "tile"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "maxTiles",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of photos to display as tiles. If undefined, all\r\navailable photos from the Place object will be displayed.\r\n\r\nNote that the Places API can fetch up to ten photos of a place.",
              "attribute": "max-tiles",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selectedIndex",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "tileSize",
              "type": {
                "text": "TileSize | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "containerElement",
              "type": {
                "text": "HTMLDivElement | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "lightboxElement",
              "type": {
                "text": "HTMLDialogElement | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "firstTileElement",
              "type": {
                "text": "HTMLButtonElement | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "focusController",
              "privacy": "protected",
              "readonly": true,
              "default": "new FocusController(this, (isKeyboardNavigating) => {\r\n        if (isKeyboardNavigating) {\r\n          this.containerElement?.classList.remove('hide-focus-ring');\r\n        } else {\r\n          this.containerElement?.classList.add('hide-focus-ring');\r\n        }\r\n      })"
            },
            {
              "kind": "field",
              "name": "fontLoader",
              "privacy": "protected",
              "readonly": true,
              "default": "new WebFontController(\r\n      this, [WebFont.GOOGLE_SANS_TEXT, WebFont.MATERIAL_SYMBOLS_OUTLINED])"
            },
            {
              "kind": "field",
              "name": "keydownEventListener",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "getMsg",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFormattedPhotos",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Array<FormattedPhoto|null>"
                }
              }
            },
            {
              "kind": "method",
              "name": "isRTL",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "openLightbox",
              "privacy": "private",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "closeLightbox",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "navigateToPrevious",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "navigateToNext",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "max-tiles",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of photos to display as tiles. If undefined, all\r\navailable photos from the Place object will be displayed.\r\n\r\nNote that the Places API can fetch up to ten photos of a place.",
              "fieldName": "maxTiles"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-photo-gallery",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlacePhotoGallery",
          "declaration": {
            "name": "PlacePhotoGallery",
            "module": "src/place_building_blocks/place_photo_gallery/place_photo_gallery.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-photo-gallery",
          "declaration": {
            "name": "PlacePhotoGallery",
            "module": "src/place_building_blocks/place_photo_gallery/place_photo_gallery.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_rating/place_rating.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Renders a place's star rating in either full (4.9 ★★★★★) or condensed\r\n(4.9 ★) form.",
          "name": "PlaceRating",
          "cssProperties": [
            {
              "description": "Color of the stars in a star rating.",
              "name": "--gmpx-rating-color"
            },
            {
              "description": "Color of the empty stars in a star rating.",
              "name": "--gmpx-rating-color-empty"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "condensed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Render a condensed star rating (4.9 ★) instead of the full format\r\n(4.9 ★★★★★).",
              "attribute": "condensed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "getMsg",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getRating",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number|null"
                }
              }
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "condensed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Render a condensed star rating (4.9 ★) instead of the full format\r\n(4.9 ★★★★★).",
              "fieldName": "condensed"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-rating",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlaceRating",
          "declaration": {
            "name": "PlaceRating",
            "module": "src/place_building_blocks/place_rating/place_rating.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-rating",
          "declaration": {
            "name": "PlaceRating",
            "module": "src/place_building_blocks/place_rating/place_rating.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/place_building_blocks/place_reviews/place_reviews.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Renders a list of user-generated place reviews.\r\n\r\nReviews are displayed in an order corresponding to the default behavior of\r\nthe [Place\r\nAPI](https://developers.google.com/maps/documentation/javascript/reference/place#Place).",
          "name": "PlaceReviews",
          "cssProperties": [
            {
              "description": "Color of the star rating icons when filled.",
              "name": "--gmpx-rating-color"
            },
            {
              "description": "Color of the star rating icons when empty.",
              "name": "--gmpx-rating-color-empty"
            },
            {
              "description": "Divider color.",
              "name": "--gmpx-color-outline"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "maxReviews",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of reviews to display. If undefined, displays all\r\nreviews returned by the Places API, which provides at most 5.",
              "attribute": "max-reviews",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "fontLoader",
              "privacy": "protected",
              "readonly": true,
              "default": "new WebFontController(this, [WebFont.GOOGLE_SANS_TEXT])"
            },
            {
              "kind": "field",
              "name": "getMsg",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "placeHasData",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "place",
                  "type": {
                    "text": "Place"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderOneReview",
              "privacy": "private",
              "parameters": [
                {
                  "name": "review",
                  "type": {
                    "text": "Review"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getReviews",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Review[]|null"
                }
              }
            },
            {
              "kind": "field",
              "name": "place",
              "type": {
                "text": "Place|PlaceResult|null|undefined"
              },
              "description": "Place data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "noData",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "attribute": "no-data",
              "reflects": true,
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeV2",
              "type": {
                "text": "Place|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeInternal",
              "type": {
                "text": "Place|PlaceResult|null | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeChangedCallback",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "New value of the object returned by `getPlace()`."
                },
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "Place|null"
                  },
                  "description": "Old value of the object returned by `getPlace()`."
                }
              ],
              "description": "Callback to be invoked when the object returned by calling `getPlace()`\r\nchanges, including when fields in the object are newly populated.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPlace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Place|null|undefined"
                }
              },
              "description": "Returns the Place data object to be used when rendering.\r\n\r\nIf a `Place` or `PlaceResult` object is specified directly on the component\r\nas a property, it will take priority. Otherwise, this method attempts to\r\nreturn one provided by a parent `<gmpx-place-data-provider>` element.\r\n\r\nThe convention for data providers is to use `undefined` to indicate Place\r\ndata has not been requested, or is in the process of being requested. The\r\nvalue `null` indicates that Place data could not be found.",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePlaceV2",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "Place|PlaceResult|null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "max-reviews",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of reviews to display. If undefined, displays all\r\nreviews returned by the Places API, which provides at most 5.",
              "fieldName": "maxReviews"
            },
            {
              "name": "no-data",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "This read-only property and attribute indicate whether the component\r\nhas the required Place data to display itself.\r\n\r\nUse the attribute to target CSS rules if you wish to hide this component,\r\nor display alternate content, when there's no valid data.",
              "fieldName": "noData",
              "inheritedFrom": {
                "name": "PlaceDataConsumer",
                "module": "src/place_building_blocks/place_data_consumer.ts"
              }
            }
          ],
          "superclass": {
            "name": "PlaceDataConsumer",
            "module": "/src/place_building_blocks/place_data_consumer.js"
          },
          "tagName": "gmpx-place-reviews",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PlaceReviews",
          "declaration": {
            "name": "PlaceReviews",
            "module": "src/place_building_blocks/place_reviews/place_reviews.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-place-reviews",
          "declaration": {
            "name": "PlaceReviews",
            "module": "src/place_building_blocks/place_reviews/place_reviews.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/route_building_blocks/route_data_provider/route_data_provider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Provides route data to child components as context.\r\n\r\nThis component can fetch route data from the Directions API, or forward a\r\n`DirectionsRoute` object provided from elsewhere in code. The component will\r\nlocally cache route data to avoid redundant API requests.",
          "name": "RouteDataProvider",
          "slots": [
            {
              "description": "Elements to receive route data.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "destinationLatLng",
              "type": {
                "text": "LatLng|LatLngLiteral | undefined"
              },
              "description": "The destination of the directions request as a lat/lng. When setting the\r\ndestination, only one of lat/lng, Place ID, or address should be specified.",
              "attribute": "destination-lat-lng",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "destinationPlaceId",
              "type": {
                "text": "string | undefined"
              },
              "description": "The destination of the directions request as a Place ID. When setting the\r\ndestination, only one of lat/lng, Place ID, or address should be specified.",
              "attribute": "destination-place-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "destinationAddress",
              "type": {
                "text": "string | undefined"
              },
              "description": "The destination of the directions request as an address query. When setting\r\nthe destination, only one of lat/lng, Place ID, or address should be\r\nspecified.",
              "attribute": "destination-address",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "originLatLng",
              "type": {
                "text": "LatLng|LatLngLiteral | undefined"
              },
              "description": "The origin of the directions request as a lat/lng. When setting the origin,\r\nonly one of lat/lng, Place ID, or address should be specified.",
              "attribute": "origin-lat-lng",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "originPlaceId",
              "type": {
                "text": "string | undefined"
              },
              "description": "The origin of the directions request as a Place ID. When setting the\r\norigin, only one of lat/lng, Place ID, or address should be specified.",
              "attribute": "origin-place-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "originAddress",
              "type": {
                "text": "string | undefined"
              },
              "description": "The origin of the directions request as an address query. When setting the\r\norigin, only one of lat/lng, Place ID, or address should be specified.",
              "attribute": "origin-address",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "route",
              "type": {
                "text": "DirectionsRoute | undefined"
              },
              "description": "Route data to be provided to consumers directly, instead of making an API\r\ncall."
            },
            {
              "kind": "field",
              "name": "travelMode",
              "type": {
                "text": "Lowercase<google.maps.TravelMode>"
              },
              "default": "'driving'",
              "description": "The travel mode of the directions request.",
              "attribute": "travel-mode",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "directionsController",
              "privacy": "private",
              "readonly": true,
              "default": "new DirectionsController(this)"
            },
            {
              "kind": "method",
              "name": "updateContextRoute",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "fetchRoute",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<DirectionsRoute|undefined>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getOriginRequestObject",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "google.maps.Place"
                }
              }
            },
            {
              "kind": "method",
              "name": "getDestinationRequestObject",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "google.maps.Place"
                }
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "RequestErrorEvent"
              },
              "description": "Indicates an error condition in an underlying Google Maps JavaScript API call.",
              "name": "gmpx-requesterror",
              "reactName": "onRequestError"
            }
          ],
          "attributes": [
            {
              "name": "destination-lat-lng",
              "type": {
                "text": "LatLng|LatLngLiteral | undefined"
              },
              "description": "The destination of the directions request as a lat/lng. When setting the\r\ndestination, only one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "destinationLatLng"
            },
            {
              "name": "destination-place-id",
              "type": {
                "text": "string | undefined"
              },
              "description": "The destination of the directions request as a Place ID. When setting the\r\ndestination, only one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "destinationPlaceId"
            },
            {
              "name": "destination-address",
              "type": {
                "text": "string | undefined"
              },
              "description": "The destination of the directions request as an address query. When setting\r\nthe destination, only one of lat/lng, Place ID, or address should be\r\nspecified.",
              "fieldName": "destinationAddress"
            },
            {
              "name": "origin-lat-lng",
              "type": {
                "text": "LatLng|LatLngLiteral | undefined"
              },
              "description": "The origin of the directions request as a lat/lng. When setting the origin,\r\nonly one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "originLatLng"
            },
            {
              "name": "origin-place-id",
              "type": {
                "text": "string | undefined"
              },
              "description": "The origin of the directions request as a Place ID. When setting the\r\norigin, only one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "originPlaceId"
            },
            {
              "name": "origin-address",
              "type": {
                "text": "string | undefined"
              },
              "description": "The origin of the directions request as an address query. When setting the\r\norigin, only one of lat/lng, Place ID, or address should be specified.",
              "fieldName": "originAddress"
            },
            {
              "name": "travel-mode",
              "type": {
                "text": "Lowercase<google.maps.TravelMode>"
              },
              "default": "'driving'",
              "description": "The travel mode of the directions request.",
              "fieldName": "travelMode"
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/base/base_component.js"
          },
          "tagName": "gmpx-route-data-provider",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RouteDataProvider",
          "declaration": {
            "name": "RouteDataProvider",
            "module": "src/route_building_blocks/route_data_provider/route_data_provider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-route-data-provider",
          "declaration": {
            "name": "RouteDataProvider",
            "module": "src/route_building_blocks/route_data_provider/route_data_provider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/route_building_blocks/route_marker/route_marker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Renders a marker indicating the origin or destination of a route.",
          "name": "RouteMarker",
          "slots": [
            {
              "description": "An element to be used as custom marker content on the map. The element will be detached from the DOM and moved into the map's implementation.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "waypoint",
              "type": {
                "text": "'origin'|'destination'"
              },
              "default": "'origin'",
              "description": "Which waypoint of the route to position the marker on. For now, this is\r\neither \"origin\" or \"destination\"; intermediate waypoints are not yet\r\nsupported.",
              "attribute": "waypoint",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Rollover text for the marker, displayed on mouse hover.",
              "attribute": "title",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "zIndex",
              "type": {
                "text": "number | undefined"
              },
              "description": "The z-index of the marker relative to other Advanced Markers."
            },
            {
              "kind": "field",
              "name": "innerMarkerDeferred",
              "privacy": "private",
              "readonly": true,
              "default": "new Deferred<AdvancedMarkerElement>()"
            },
            {
              "kind": "field",
              "name": "innerMarker",
              "type": {
                "text": "AdvancedMarkerElement|undefined"
              },
              "description": "The inner `google.maps.marker.AdvancedMarkerElement` from the Maps JS API.\r\nThis value is set once `innerMarkerPromise` is resolved.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "innerMarkerPromise",
              "type": {
                "text": "Promise<AdvancedMarkerElement>"
              },
              "description": "Resolves to the inner marker when it's ready. It might not be ready\r\nimmediately becasue the `AdvancedMarkerElement` class is loaded\r\nasynchronously from the Maps JS API.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mapController",
              "privacy": "private",
              "readonly": true,
              "default": "new MapController(this)"
            },
            {
              "kind": "method",
              "name": "initMarker",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updatePosition",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateTitle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateZIndex",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "route",
              "type": {
                "text": "DirectionsRoute | undefined"
              },
              "description": "Route data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "RouteDataConsumer",
                "module": "src/route_building_blocks/route_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getRoute",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DirectionsRoute|undefined"
                }
              },
              "description": "Returns the `DirectionsRoute` to be used when rendering.\r\n\r\nIf a route data object is specified directly on the component as a\r\nproperty, it will take priority. Otherwise, this method attempts to return\r\none provided by a parent `<gmpx-route-data-provider>` element.",
              "inheritedFrom": {
                "name": "RouteDataConsumer",
                "module": "src/route_building_blocks/route_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "waypoint",
              "type": {
                "text": "'origin'|'destination'"
              },
              "default": "'origin'",
              "description": "Which waypoint of the route to position the marker on. For now, this is\r\neither \"origin\" or \"destination\"; intermediate waypoints are not yet\r\nsupported.",
              "fieldName": "waypoint"
            },
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Rollover text for the marker, displayed on mouse hover.",
              "fieldName": "title"
            }
          ],
          "superclass": {
            "name": "RouteDataConsumer",
            "module": "/src/route_building_blocks/route_data_consumer.js"
          },
          "tagName": "gmpx-route-marker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RouteMarker",
          "declaration": {
            "name": "RouteMarker",
            "module": "src/route_building_blocks/route_marker/route_marker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-route-marker",
          "declaration": {
            "name": "RouteMarker",
            "module": "src/route_building_blocks/route_marker/route_marker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/route_building_blocks/route_polyline/route_polyline.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Renders a polyline indicating the path of a route.",
          "name": "RoutePolyline",
          "members": [
            {
              "kind": "field",
              "name": "fitInViewport",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether or not to automatically adjust the map's viewport to include the\r\npolyline.",
              "attribute": "fit-in-viewport",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "invisible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether or not the polyline is invisible or visible on the map.",
              "attribute": "invisible",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "strokeColor",
              "type": {
                "text": "string | undefined"
              },
              "description": "Stroke color of the polyline. All CSS3 colors are supported except for\r\nextended named colors.",
              "attribute": "stroke-color",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "strokeOpacity",
              "type": {
                "text": "number | undefined"
              },
              "description": "The stroke opacity of the polyline between 0.0 and 1.0.",
              "attribute": "stroke-opacity",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "strokeWeight",
              "type": {
                "text": "number | undefined"
              },
              "description": "The stroke width of the polyline in pixels.",
              "attribute": "stroke-weight",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "zIndex",
              "type": {
                "text": "number | undefined"
              },
              "description": "The z-index of the polyline compared to other polys.",
              "attribute": "z-index",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "innerPolylineDeferred",
              "privacy": "private",
              "readonly": true,
              "default": "new Deferred<google.maps.Polyline>()"
            },
            {
              "kind": "field",
              "name": "innerPolyline",
              "type": {
                "text": "google.maps.Polyline|undefined"
              },
              "description": "The inner `google.maps.Polyline` from the Maps JS API. This value is set\r\nonce `innerPolylinePromise` is resolved.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "innerPolylinePromise",
              "type": {
                "text": "Promise<google.maps.Polyline>"
              },
              "description": "Resolves to the inner polyline when it's ready. It might not be ready\r\nimmediately because the `Polyline` class is loaded asynchronously from\r\nthe Maps JS API.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mapController",
              "privacy": "private",
              "readonly": true,
              "default": "new MapController(this)"
            },
            {
              "kind": "method",
              "name": "initPolyline",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setInnerPolylineOptions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updatePath",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "route",
              "type": {
                "text": "DirectionsRoute | undefined"
              },
              "description": "Route data to render, overriding anything provided by context.",
              "inheritedFrom": {
                "name": "RouteDataConsumer",
                "module": "src/route_building_blocks/route_data_consumer.ts"
              }
            },
            {
              "kind": "method",
              "name": "getRoute",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DirectionsRoute|undefined"
                }
              },
              "description": "Returns the `DirectionsRoute` to be used when rendering.\r\n\r\nIf a route data object is specified directly on the component as a\r\nproperty, it will take priority. Otherwise, this method attempts to return\r\none provided by a parent `<gmpx-route-data-provider>` element.",
              "inheritedFrom": {
                "name": "RouteDataConsumer",
                "module": "src/route_building_blocks/route_data_consumer.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "fit-in-viewport",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether or not to automatically adjust the map's viewport to include the\r\npolyline.",
              "fieldName": "fitInViewport"
            },
            {
              "name": "invisible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether or not the polyline is invisible or visible on the map.",
              "fieldName": "invisible"
            },
            {
              "name": "stroke-color",
              "type": {
                "text": "string | undefined"
              },
              "description": "Stroke color of the polyline. All CSS3 colors are supported except for\r\nextended named colors.",
              "fieldName": "strokeColor"
            },
            {
              "name": "stroke-opacity",
              "type": {
                "text": "number | undefined"
              },
              "description": "The stroke opacity of the polyline between 0.0 and 1.0.",
              "fieldName": "strokeOpacity"
            },
            {
              "name": "stroke-weight",
              "type": {
                "text": "number | undefined"
              },
              "description": "The stroke width of the polyline in pixels.",
              "fieldName": "strokeWeight"
            },
            {
              "name": "z-index",
              "type": {
                "text": "number | undefined"
              },
              "description": "The z-index of the polyline compared to other polys.",
              "fieldName": "zIndex"
            }
          ],
          "superclass": {
            "name": "RouteDataConsumer",
            "module": "/src/route_building_blocks/route_data_consumer.js"
          },
          "tagName": "gmpx-route-polyline",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RoutePolyline",
          "declaration": {
            "name": "RoutePolyline",
            "module": "src/route_building_blocks/route_polyline/route_polyline.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gmpx-route-polyline",
          "declaration": {
            "name": "RoutePolyline",
            "module": "src/route_building_blocks/route_polyline/route_polyline.ts"
          }
        }
      ]
    }
  ]
}
